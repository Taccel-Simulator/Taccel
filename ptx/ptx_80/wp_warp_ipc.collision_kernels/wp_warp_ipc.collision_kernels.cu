
#define WP_TILE_BLOCK_DIM 256
#define WP_NO_CRT
#include "builtin.h"

// avoid namespacing of float type for casting to float type, this is to avoid wp::float(x), which is not valid in C++
#define float(x) cast_float(x)
#define adj_float(x, adj_x, adj_ret) adj_cast_float(x, adj_x, adj_ret)

#define int(x) cast_int(x)
#define adj_int(x, adj_x, adj_ret) adj_cast_int(x, adj_x, adj_ret)

#define builtin_tid1d() wp::tid(_idx, dim)
#define builtin_tid2d(x, y) wp::tid(x, y, _idx, dim)
#define builtin_tid3d(x, y, z) wp::tid(x, y, z, _idx, dim)
#define builtin_tid4d(x, y, z, w) wp::tid(x, y, z, w, _idx, dim)

extern "C" {
}

struct Complex64_e484527b
{
    wp::float64 real;
    wp::float64 imag;


    Complex64_e484527b() = default;
    CUDA_CALLABLE Complex64_e484527b(wp::float64 const& real,
    wp::float64 const& imag = {})
        : real{real}
        , imag{imag}

    {
    }

    CUDA_CALLABLE Complex64_e484527b& operator += (const Complex64_e484527b& rhs)
    {    real += rhs.real;
    imag += rhs.imag;

        return *this;}

};

static CUDA_CALLABLE void adj_Complex64_e484527b(wp::float64 const&,
    wp::float64 const&,
    wp::float64 & adj_real,
    wp::float64 & adj_imag,
    Complex64_e484527b & adj_ret)
{
    adj_real += adj_ret.real;
    adj_imag += adj_ret.imag;
}

CUDA_CALLABLE void adj_atomic_add(Complex64_e484527b* p, Complex64_e484527b t)
{
    wp::adj_atomic_add(&p->real, t.real);
    wp::adj_atomic_add(&p->imag, t.imag);
}



// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:248
static CUDA_CALLABLE wp::float64 get_smallest_positive_real_quad_root_0(
    wp::float64 var_a,
    wp::float64 var_b,
    wp::float64 var_c,
    wp::float64 var_tol)
{
    //---------
    // primal vars
    const wp::float64 var_0 = 0.0;
    wp::float64 var_1;
    wp::float64 var_2;
    bool var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    wp::float64 var_7;
    const wp::float32 var_8 = 4.0;
    wp::float64 var_9;
    wp::float64 var_10;
    wp::float64 var_11;
    wp::float64 var_12;
    const wp::int32 var_13 = 0;
    bool var_14;
    wp::float64 var_15;
    wp::float64 var_16;
    wp::float64 var_17;
    const wp::float64 var_18 = 2.0;
    wp::float64 var_19;
    wp::float64 var_20;
    const wp::int32 var_21 = 0;
    bool var_22;
    wp::float64 var_23;
    wp::float64 var_24;
    wp::float64 var_25;
    wp::float64 var_26;
    wp::float64 var_27;
    wp::float64 var_28;
    wp::float64 var_29;
    const wp::float64 var_30 = -1.0;
    wp::float64 var_31;
    wp::float64 var_32;
    wp::float64 var_33;
    //---------
    // forward
    // def get_smallest_positive_real_quad_root(a: wp.float64, b: wp.float64, c: wp.float64, tol: wp.float64):       <L 249>
    // t = _0                                                                                 <L 250>
    var_1 = wp::copy(var_0);
    // if wp.abs(a) <= tol:                                                                   <L 251>
    var_2 = wp::abs(var_a);
    var_3 = (var_2 <= var_tol);
    if (var_3) {
        // t = -c / b                                                                         <L 252>
        var_4 = wp::neg(var_c);
        var_5 = wp::div(var_4, var_b);
    }
    var_6 = wp::where(var_3, var_5, var_1);
    if (!var_3) {
        // desc = b * b - wp.float64(4.0) * a * c                                             <L 254>
        var_7 = wp::mul(var_b, var_b);
        var_9 = wp::float64(var_8);
        var_10 = wp::mul(var_9, var_a);
        var_11 = wp::mul(var_10, var_c);
        var_12 = wp::sub(var_7, var_11);
        // if desc > 0:                                                                       <L 255>
        var_14 = (var_12 > var_13);
        if (var_14) {
            // t = (-b - wp.sqrt(desc)) / (_2 * a)                                            <L 256>
            var_15 = wp::neg(var_b);
            var_16 = wp::sqrt(var_12);
            var_17 = wp::sub(var_15, var_16);
            var_19 = wp::mul(var_18, var_a);
            var_20 = wp::div(var_17, var_19);
            // if t < 0:                                                                      <L 257>
            var_22 = (var_20 < var_21);
            if (var_22) {
                // t = (-b + wp.sqrt(desc)) / (_2 * a)                                        <L 258>
                var_23 = wp::neg(var_b);
                var_24 = wp::sqrt(var_12);
                var_25 = wp::add(var_23, var_24);
                var_26 = wp::mul(var_18, var_a);
                var_27 = wp::div(var_25, var_26);
            }
            var_28 = wp::where(var_22, var_27, var_20);
        }
        var_29 = wp::where(var_14, var_28, var_6);
        if (!var_14) {
            // t = __1                                                                        <L 260>
            var_31 = wp::copy(var_30);
        }
        var_32 = wp::where(var_14, var_29, var_31);
    }
    var_33 = wp::where(var_3, var_6, var_32);
    // return t                                                                               <L 261>
    return var_33;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:248
static CUDA_CALLABLE void adj_get_smallest_positive_real_quad_root_0(
    wp::float64 var_a,
    wp::float64 var_b,
    wp::float64 var_c,
    wp::float64 var_tol,
    wp::float64 & adj_a,
    wp::float64 & adj_b,
    wp::float64 & adj_c,
    wp::float64 & adj_tol,
    wp::float64 & adj_ret)
{
    //---------
    // primal vars
    const wp::float64 var_0 = 0.0;
    wp::float64 var_1;
    wp::float64 var_2;
    bool var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    wp::float64 var_7;
    const wp::float32 var_8 = 4.0;
    wp::float64 var_9;
    wp::float64 var_10;
    wp::float64 var_11;
    wp::float64 var_12;
    const wp::int32 var_13 = 0;
    bool var_14;
    wp::float64 var_15;
    wp::float64 var_16;
    wp::float64 var_17;
    const wp::float64 var_18 = 2.0;
    wp::float64 var_19;
    wp::float64 var_20;
    const wp::int32 var_21 = 0;
    bool var_22;
    wp::float64 var_23;
    wp::float64 var_24;
    wp::float64 var_25;
    wp::float64 var_26;
    wp::float64 var_27;
    wp::float64 var_28;
    wp::float64 var_29;
    const wp::float64 var_30 = -1.0;
    wp::float64 var_31;
    wp::float64 var_32;
    wp::float64 var_33;
    //---------
    // dual vars
    wp::float64 adj_0 = {};
    wp::float64 adj_1 = {};
    wp::float64 adj_2 = {};
    bool adj_3 = {};
    wp::float64 adj_4 = {};
    wp::float64 adj_5 = {};
    wp::float64 adj_6 = {};
    wp::float64 adj_7 = {};
    wp::float32 adj_8 = {};
    wp::float64 adj_9 = {};
    wp::float64 adj_10 = {};
    wp::float64 adj_11 = {};
    wp::float64 adj_12 = {};
    wp::int32 adj_13 = {};
    bool adj_14 = {};
    wp::float64 adj_15 = {};
    wp::float64 adj_16 = {};
    wp::float64 adj_17 = {};
    wp::float64 adj_18 = {};
    wp::float64 adj_19 = {};
    wp::float64 adj_20 = {};
    wp::int32 adj_21 = {};
    bool adj_22 = {};
    wp::float64 adj_23 = {};
    wp::float64 adj_24 = {};
    wp::float64 adj_25 = {};
    wp::float64 adj_26 = {};
    wp::float64 adj_27 = {};
    wp::float64 adj_28 = {};
    wp::float64 adj_29 = {};
    wp::float64 adj_30 = {};
    wp::float64 adj_31 = {};
    wp::float64 adj_32 = {};
    wp::float64 adj_33 = {};
    //---------
    // forward
    // def get_smallest_positive_real_quad_root(a: wp.float64, b: wp.float64, c: wp.float64, tol: wp.float64):       <L 249>
    // t = _0                                                                                 <L 250>
    var_1 = wp::copy(var_0);
    // if wp.abs(a) <= tol:                                                                   <L 251>
    var_2 = wp::abs(var_a);
    var_3 = (var_2 <= var_tol);
    if (var_3) {
        // t = -c / b                                                                         <L 252>
        var_4 = wp::neg(var_c);
        var_5 = wp::div(var_4, var_b);
    }
    var_6 = wp::where(var_3, var_5, var_1);
    if (!var_3) {
        // desc = b * b - wp.float64(4.0) * a * c                                             <L 254>
        var_7 = wp::mul(var_b, var_b);
        var_9 = wp::float64(var_8);
        var_10 = wp::mul(var_9, var_a);
        var_11 = wp::mul(var_10, var_c);
        var_12 = wp::sub(var_7, var_11);
        // if desc > 0:                                                                       <L 255>
        var_14 = (var_12 > var_13);
        if (var_14) {
            // t = (-b - wp.sqrt(desc)) / (_2 * a)                                            <L 256>
            var_15 = wp::neg(var_b);
            var_16 = wp::sqrt(var_12);
            var_17 = wp::sub(var_15, var_16);
            var_19 = wp::mul(var_18, var_a);
            var_20 = wp::div(var_17, var_19);
            // if t < 0:                                                                      <L 257>
            var_22 = (var_20 < var_21);
            if (var_22) {
                // t = (-b + wp.sqrt(desc)) / (_2 * a)                                        <L 258>
                var_23 = wp::neg(var_b);
                var_24 = wp::sqrt(var_12);
                var_25 = wp::add(var_23, var_24);
                var_26 = wp::mul(var_18, var_a);
                var_27 = wp::div(var_25, var_26);
            }
            var_28 = wp::where(var_22, var_27, var_20);
        }
        var_29 = wp::where(var_14, var_28, var_6);
        if (!var_14) {
            // t = __1                                                                        <L 260>
            var_31 = wp::copy(var_30);
        }
        var_32 = wp::where(var_14, var_29, var_31);
    }
    var_33 = wp::where(var_3, var_6, var_32);
    // return t                                                                               <L 261>
    goto label0;
    //---------
    // reverse
    label0:;
    adj_33 += adj_ret;
    // adj: return t                                                                          <L 261>
    wp::adj_where(var_3, var_6, var_32, adj_3, adj_6, adj_32, adj_33);
    if (!var_3) {
        wp::adj_where(var_14, var_29, var_31, adj_14, adj_29, adj_31, adj_32);
        if (!var_14) {
            wp::adj_copy(var_30, adj_30, adj_31);
            // adj: t = __1                                                                   <L 260>
        }
        wp::adj_where(var_14, var_28, var_6, adj_14, adj_28, adj_6, adj_29);
        if (var_14) {
            wp::adj_where(var_22, var_27, var_20, adj_22, adj_27, adj_20, adj_28);
            if (var_22) {
                wp::adj_div(var_25, var_26, var_27, adj_25, adj_26, adj_27);
                wp::adj_mul(var_18, var_a, adj_18, adj_a, adj_26);
                wp::adj_add(var_23, var_24, adj_23, adj_24, adj_25);
                wp::adj_sqrt(var_12, var_24, adj_12, adj_24);
                wp::adj_neg(var_b, adj_b, adj_23);
                // adj: t = (-b + wp.sqrt(desc)) / (_2 * a)                                   <L 258>
            }
            // adj: if t < 0:                                                                 <L 257>
            wp::adj_div(var_17, var_19, var_20, adj_17, adj_19, adj_20);
            wp::adj_mul(var_18, var_a, adj_18, adj_a, adj_19);
            wp::adj_sub(var_15, var_16, adj_15, adj_16, adj_17);
            wp::adj_sqrt(var_12, var_16, adj_12, adj_16);
            wp::adj_neg(var_b, adj_b, adj_15);
            // adj: t = (-b - wp.sqrt(desc)) / (_2 * a)                                       <L 256>
        }
        // adj: if desc > 0:                                                                  <L 255>
        wp::adj_sub(var_7, var_11, adj_7, adj_11, adj_12);
        wp::adj_mul(var_10, var_c, adj_10, adj_c, adj_11);
        wp::adj_mul(var_9, var_a, adj_9, adj_a, adj_10);
        wp::adj_float64(var_8, adj_8, adj_9);
        wp::adj_mul(var_b, var_b, adj_b, adj_b, adj_7);
        // adj: desc = b * b - wp.float64(4.0) * a * c                                        <L 254>
    }
    wp::adj_where(var_3, var_5, var_1, adj_3, adj_5, adj_1, adj_6);
    if (var_3) {
        wp::adj_div(var_4, var_b, var_5, adj_4, adj_b, adj_5);
        wp::adj_neg(var_c, adj_c, adj_4);
        // adj: t = -c / b                                                                    <L 252>
    }
    wp::adj_abs(var_a, adj_a, adj_2);
    // adj: if wp.abs(a) <= tol:                                                              <L 251>
    wp::adj_copy(var_0, adj_0, adj_1);
    // adj: t = _0                                                                            <L 250>
    // adj: def get_smallest_positive_real_quad_root(a: wp.float64, b: wp.float64, c: wp.float64, tol: wp.float64):  <L 249>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:70
static CUDA_CALLABLE Complex64_e484527b sqrt_c_0(
    wp::float64 var_self)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    bool var_1;
    wp::float64 var_2;
    const wp::float64 var_3 = 0.0;
    Complex64_e484527b var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    Complex64_e484527b var_7;
    //---------
    // forward
    // def sqrt_c(self: wp.float64) -> Complex64:                                             <L 71>
    // if self >= 0:                                                                          <L 72>
    var_1 = (var_self >= var_0);
    if (var_1) {
        // return Complex64(wp.sqrt(self), _0)                                                <L 73>
        var_2 = wp::sqrt(var_self);
        var_4 = Complex64_e484527b(var_2, var_3);
        return var_4;
    }
    // return Complex64(_0, wp.sqrt(-self))                                                   <L 74>
    var_5 = wp::neg(var_self);
    var_6 = wp::sqrt(var_5);
    var_7 = Complex64_e484527b(var_3, var_6);
    return var_7;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:70
static CUDA_CALLABLE void adj_sqrt_c_0(
    wp::float64 var_self,
    wp::float64 & adj_self,
    Complex64_e484527b & adj_ret)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    bool var_1;
    wp::float64 var_2;
    const wp::float64 var_3 = 0.0;
    Complex64_e484527b var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    Complex64_e484527b var_7;
    //---------
    // dual vars
    wp::int32 adj_0 = {};
    bool adj_1 = {};
    wp::float64 adj_2 = {};
    wp::float64 adj_3 = {};
    Complex64_e484527b adj_4 = {};
    wp::float64 adj_5 = {};
    wp::float64 adj_6 = {};
    Complex64_e484527b adj_7 = {};
    //---------
    // forward
    // def sqrt_c(self: wp.float64) -> Complex64:                                             <L 71>
    // if self >= 0:                                                                          <L 72>
    var_1 = (var_self >= var_0);
    if (var_1) {
        // return Complex64(wp.sqrt(self), _0)                                                <L 73>
        var_2 = wp::sqrt(var_self);
        var_4 = Complex64_e484527b(var_2, var_3);
        goto label0;
    }
    // return Complex64(_0, wp.sqrt(-self))                                                   <L 74>
    var_5 = wp::neg(var_self);
    var_6 = wp::sqrt(var_5);
    var_7 = Complex64_e484527b(var_3, var_6);
    goto label1;
    //---------
    // reverse
    label1:;
    adj_7 += adj_ret;
    adj_Complex64_e484527b(var_3, var_6, adj_3, adj_6, adj_7);
    wp::adj_sqrt(var_5, var_6, adj_5, adj_6);
    wp::adj_neg(var_self, adj_self, adj_5);
    // adj: return Complex64(_0, wp.sqrt(-self))                                              <L 74>
    if (var_1) {
        label0:;
        adj_4 += adj_ret;
        adj_Complex64_e484527b(var_2, var_3, adj_2, adj_3, adj_4);
        wp::adj_sqrt(var_self, var_2, adj_self, adj_2);
        // adj: return Complex64(wp.sqrt(self), _0)                                           <L 73>
    }
    // adj: if self >= 0:                                                                     <L 72>
    // adj: def sqrt_c(self: wp.float64) -> Complex64:                                        <L 71>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:21
static CUDA_CALLABLE Complex64_e484527b add_0(
    Complex64_e484527b var_self,
    Complex64_e484527b var_other)
{
    //---------
    // primal vars
    wp::float64* var_0;
    wp::float64* var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64* var_5;
    wp::float64* var_6;
    wp::float64 var_7;
    wp::float64 var_8;
    wp::float64 var_9;
    Complex64_e484527b var_10;
    //---------
    // forward
    // def add(self: Complex64, other: Complex64) -> Complex64:                               <L 22>
    // return Complex64(self.real + other.real, self.imag + other.imag)                       <L 23>
    var_0 = &(var_self.real);
    var_1 = &(var_other.real);
    var_3 = wp::load(var_0);
    var_4 = wp::load(var_1);
    var_2 = wp::add(var_3, var_4);
    var_5 = &(var_self.imag);
    var_6 = &(var_other.imag);
    var_8 = wp::load(var_5);
    var_9 = wp::load(var_6);
    var_7 = wp::add(var_8, var_9);
    var_10 = Complex64_e484527b(var_2, var_7);
    return var_10;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:21
static CUDA_CALLABLE void adj_add_0(
    Complex64_e484527b var_self,
    Complex64_e484527b var_other,
    Complex64_e484527b & adj_self,
    Complex64_e484527b & adj_other,
    Complex64_e484527b & adj_ret)
{
    //---------
    // primal vars
    wp::float64* var_0;
    wp::float64* var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64* var_5;
    wp::float64* var_6;
    wp::float64 var_7;
    wp::float64 var_8;
    wp::float64 var_9;
    Complex64_e484527b var_10;
    //---------
    // dual vars
    wp::float64 adj_0 = {};
    wp::float64 adj_1 = {};
    wp::float64 adj_2 = {};
    wp::float64 adj_3 = {};
    wp::float64 adj_4 = {};
    wp::float64 adj_5 = {};
    wp::float64 adj_6 = {};
    wp::float64 adj_7 = {};
    wp::float64 adj_8 = {};
    wp::float64 adj_9 = {};
    Complex64_e484527b adj_10 = {};
    //---------
    // forward
    // def add(self: Complex64, other: Complex64) -> Complex64:                               <L 22>
    // return Complex64(self.real + other.real, self.imag + other.imag)                       <L 23>
    var_0 = &(var_self.real);
    var_1 = &(var_other.real);
    var_3 = wp::load(var_0);
    var_4 = wp::load(var_1);
    var_2 = wp::add(var_3, var_4);
    var_5 = &(var_self.imag);
    var_6 = &(var_other.imag);
    var_8 = wp::load(var_5);
    var_9 = wp::load(var_6);
    var_7 = wp::add(var_8, var_9);
    var_10 = Complex64_e484527b(var_2, var_7);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_10 += adj_ret;
    adj_Complex64_e484527b(var_2, var_7, adj_2, adj_7, adj_10);
    wp::adj_add(var_8, var_9, adj_5, adj_6, adj_7);
    wp::adj_load(var_6, adj_6, adj_9);
    wp::adj_load(var_5, adj_5, adj_8);
    adj_other.imag += adj_6;
    adj_self.imag += adj_5;
    wp::adj_add(var_3, var_4, adj_0, adj_1, adj_2);
    wp::adj_load(var_1, adj_1, adj_4);
    wp::adj_load(var_0, adj_0, adj_3);
    adj_other.real += adj_1;
    adj_self.real += adj_0;
    // adj: return Complex64(self.real + other.real, self.imag + other.imag)                  <L 23>
    // adj: def add(self: Complex64, other: Complex64) -> Complex64:                          <L 22>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:31
static CUDA_CALLABLE Complex64_e484527b mul_0(
    Complex64_e484527b var_self,
    Complex64_e484527b var_other)
{
    //---------
    // primal vars
    wp::float64* var_0;
    wp::float64* var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64* var_5;
    wp::float64* var_6;
    wp::float64 var_7;
    wp::float64 var_8;
    wp::float64 var_9;
    wp::float64 var_10;
    wp::float64* var_11;
    wp::float64* var_12;
    wp::float64 var_13;
    wp::float64 var_14;
    wp::float64 var_15;
    wp::float64* var_16;
    wp::float64* var_17;
    wp::float64 var_18;
    wp::float64 var_19;
    wp::float64 var_20;
    wp::float64 var_21;
    Complex64_e484527b var_22;
    //---------
    // forward
    // def mul(self: Complex64, other: Complex64) -> Complex64:                               <L 32>
    // return Complex64(                                                                      <L 33>
    // self.real * other.real - self.imag * other.imag,                                       <L 34>
    var_0 = &(var_self.real);
    var_1 = &(var_other.real);
    var_3 = wp::load(var_0);
    var_4 = wp::load(var_1);
    var_2 = wp::mul(var_3, var_4);
    var_5 = &(var_self.imag);
    var_6 = &(var_other.imag);
    var_8 = wp::load(var_5);
    var_9 = wp::load(var_6);
    var_7 = wp::mul(var_8, var_9);
    var_10 = wp::sub(var_2, var_7);
    // self.real * other.imag + self.imag * other.real,                                       <L 35>
    var_11 = &(var_self.real);
    var_12 = &(var_other.imag);
    var_14 = wp::load(var_11);
    var_15 = wp::load(var_12);
    var_13 = wp::mul(var_14, var_15);
    var_16 = &(var_self.imag);
    var_17 = &(var_other.real);
    var_19 = wp::load(var_16);
    var_20 = wp::load(var_17);
    var_18 = wp::mul(var_19, var_20);
    var_21 = wp::add(var_13, var_18);
    var_22 = Complex64_e484527b(var_10, var_21);
    return var_22;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:31
static CUDA_CALLABLE void adj_mul_0(
    Complex64_e484527b var_self,
    Complex64_e484527b var_other,
    Complex64_e484527b & adj_self,
    Complex64_e484527b & adj_other,
    Complex64_e484527b & adj_ret)
{
    //---------
    // primal vars
    wp::float64* var_0;
    wp::float64* var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64* var_5;
    wp::float64* var_6;
    wp::float64 var_7;
    wp::float64 var_8;
    wp::float64 var_9;
    wp::float64 var_10;
    wp::float64* var_11;
    wp::float64* var_12;
    wp::float64 var_13;
    wp::float64 var_14;
    wp::float64 var_15;
    wp::float64* var_16;
    wp::float64* var_17;
    wp::float64 var_18;
    wp::float64 var_19;
    wp::float64 var_20;
    wp::float64 var_21;
    Complex64_e484527b var_22;
    //---------
    // dual vars
    wp::float64 adj_0 = {};
    wp::float64 adj_1 = {};
    wp::float64 adj_2 = {};
    wp::float64 adj_3 = {};
    wp::float64 adj_4 = {};
    wp::float64 adj_5 = {};
    wp::float64 adj_6 = {};
    wp::float64 adj_7 = {};
    wp::float64 adj_8 = {};
    wp::float64 adj_9 = {};
    wp::float64 adj_10 = {};
    wp::float64 adj_11 = {};
    wp::float64 adj_12 = {};
    wp::float64 adj_13 = {};
    wp::float64 adj_14 = {};
    wp::float64 adj_15 = {};
    wp::float64 adj_16 = {};
    wp::float64 adj_17 = {};
    wp::float64 adj_18 = {};
    wp::float64 adj_19 = {};
    wp::float64 adj_20 = {};
    wp::float64 adj_21 = {};
    Complex64_e484527b adj_22 = {};
    //---------
    // forward
    // def mul(self: Complex64, other: Complex64) -> Complex64:                               <L 32>
    // return Complex64(                                                                      <L 33>
    // self.real * other.real - self.imag * other.imag,                                       <L 34>
    var_0 = &(var_self.real);
    var_1 = &(var_other.real);
    var_3 = wp::load(var_0);
    var_4 = wp::load(var_1);
    var_2 = wp::mul(var_3, var_4);
    var_5 = &(var_self.imag);
    var_6 = &(var_other.imag);
    var_8 = wp::load(var_5);
    var_9 = wp::load(var_6);
    var_7 = wp::mul(var_8, var_9);
    var_10 = wp::sub(var_2, var_7);
    // self.real * other.imag + self.imag * other.real,                                       <L 35>
    var_11 = &(var_self.real);
    var_12 = &(var_other.imag);
    var_14 = wp::load(var_11);
    var_15 = wp::load(var_12);
    var_13 = wp::mul(var_14, var_15);
    var_16 = &(var_self.imag);
    var_17 = &(var_other.real);
    var_19 = wp::load(var_16);
    var_20 = wp::load(var_17);
    var_18 = wp::mul(var_19, var_20);
    var_21 = wp::add(var_13, var_18);
    var_22 = Complex64_e484527b(var_10, var_21);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_22 += adj_ret;
    adj_Complex64_e484527b(var_10, var_21, adj_10, adj_21, adj_22);
    wp::adj_add(var_13, var_18, adj_13, adj_18, adj_21);
    wp::adj_mul(var_19, var_20, adj_16, adj_17, adj_18);
    wp::adj_load(var_17, adj_17, adj_20);
    wp::adj_load(var_16, adj_16, adj_19);
    adj_other.real += adj_17;
    adj_self.imag += adj_16;
    wp::adj_mul(var_14, var_15, adj_11, adj_12, adj_13);
    wp::adj_load(var_12, adj_12, adj_15);
    wp::adj_load(var_11, adj_11, adj_14);
    adj_other.imag += adj_12;
    adj_self.real += adj_11;
    // adj: self.real * other.imag + self.imag * other.real,                                  <L 35>
    wp::adj_sub(var_2, var_7, adj_2, adj_7, adj_10);
    wp::adj_mul(var_8, var_9, adj_5, adj_6, adj_7);
    wp::adj_load(var_6, adj_6, adj_9);
    wp::adj_load(var_5, adj_5, adj_8);
    adj_other.imag += adj_6;
    adj_self.imag += adj_5;
    wp::adj_mul(var_3, var_4, adj_0, adj_1, adj_2);
    wp::adj_load(var_1, adj_1, adj_4);
    wp::adj_load(var_0, adj_0, adj_3);
    adj_other.real += adj_1;
    adj_self.real += adj_0;
    // adj: self.real * other.real - self.imag * other.imag,                                  <L 34>
    // adj: return Complex64(                                                                 <L 33>
    // adj: def mul(self: Complex64, other: Complex64) -> Complex64:                          <L 32>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:48
static CUDA_CALLABLE wp::float64 magnitude_0(
    Complex64_e484527b var_self)
{
    //---------
    // primal vars
    wp::float64* var_0;
    wp::float64* var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64* var_5;
    wp::float64* var_6;
    wp::float64 var_7;
    wp::float64 var_8;
    wp::float64 var_9;
    wp::float64 var_10;
    wp::float64 var_11;
    //---------
    // forward
    // def magnitude(self: Complex64) -> wp.float64:                                          <L 49>
    // return wp.sqrt(self.real * self.real + self.imag * self.imag)                          <L 50>
    var_0 = &(var_self.real);
    var_1 = &(var_self.real);
    var_3 = wp::load(var_0);
    var_4 = wp::load(var_1);
    var_2 = wp::mul(var_3, var_4);
    var_5 = &(var_self.imag);
    var_6 = &(var_self.imag);
    var_8 = wp::load(var_5);
    var_9 = wp::load(var_6);
    var_7 = wp::mul(var_8, var_9);
    var_10 = wp::add(var_2, var_7);
    var_11 = wp::sqrt(var_10);
    return var_11;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:48
static CUDA_CALLABLE void adj_magnitude_0(
    Complex64_e484527b var_self,
    Complex64_e484527b & adj_self,
    wp::float64 & adj_ret)
{
    //---------
    // primal vars
    wp::float64* var_0;
    wp::float64* var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64* var_5;
    wp::float64* var_6;
    wp::float64 var_7;
    wp::float64 var_8;
    wp::float64 var_9;
    wp::float64 var_10;
    wp::float64 var_11;
    //---------
    // dual vars
    wp::float64 adj_0 = {};
    wp::float64 adj_1 = {};
    wp::float64 adj_2 = {};
    wp::float64 adj_3 = {};
    wp::float64 adj_4 = {};
    wp::float64 adj_5 = {};
    wp::float64 adj_6 = {};
    wp::float64 adj_7 = {};
    wp::float64 adj_8 = {};
    wp::float64 adj_9 = {};
    wp::float64 adj_10 = {};
    wp::float64 adj_11 = {};
    //---------
    // forward
    // def magnitude(self: Complex64) -> wp.float64:                                          <L 49>
    // return wp.sqrt(self.real * self.real + self.imag * self.imag)                          <L 50>
    var_0 = &(var_self.real);
    var_1 = &(var_self.real);
    var_3 = wp::load(var_0);
    var_4 = wp::load(var_1);
    var_2 = wp::mul(var_3, var_4);
    var_5 = &(var_self.imag);
    var_6 = &(var_self.imag);
    var_8 = wp::load(var_5);
    var_9 = wp::load(var_6);
    var_7 = wp::mul(var_8, var_9);
    var_10 = wp::add(var_2, var_7);
    var_11 = wp::sqrt(var_10);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_11 += adj_ret;
    wp::adj_sqrt(var_10, var_11, adj_10, adj_11);
    wp::adj_add(var_2, var_7, adj_2, adj_7, adj_10);
    wp::adj_mul(var_8, var_9, adj_5, adj_6, adj_7);
    wp::adj_load(var_6, adj_6, adj_9);
    wp::adj_load(var_5, adj_5, adj_8);
    adj_self.imag += adj_6;
    adj_self.imag += adj_5;
    wp::adj_mul(var_3, var_4, adj_0, adj_1, adj_2);
    wp::adj_load(var_1, adj_1, adj_4);
    wp::adj_load(var_0, adj_0, adj_3);
    adj_self.real += adj_1;
    adj_self.real += adj_0;
    // adj: return wp.sqrt(self.real * self.real + self.imag * self.imag)                     <L 50>
    // adj: def magnitude(self: Complex64) -> wp.float64:                                     <L 49>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:53
static CUDA_CALLABLE wp::float64 phase_0(
    Complex64_e484527b var_self)
{
    //---------
    // primal vars
    wp::float64* var_0;
    wp::float64* var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    //---------
    // forward
    // def phase(self: Complex64) -> wp.float64:                                              <L 54>
    // return wp.atan2(self.imag, self.real)                                                  <L 55>
    var_0 = &(var_self.imag);
    var_1 = &(var_self.real);
    var_3 = wp::load(var_0);
    var_4 = wp::load(var_1);
    var_2 = wp::atan2(var_3, var_4);
    return var_2;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:53
static CUDA_CALLABLE void adj_phase_0(
    Complex64_e484527b var_self,
    Complex64_e484527b & adj_self,
    wp::float64 & adj_ret)
{
    //---------
    // primal vars
    wp::float64* var_0;
    wp::float64* var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    //---------
    // dual vars
    wp::float64 adj_0 = {};
    wp::float64 adj_1 = {};
    wp::float64 adj_2 = {};
    wp::float64 adj_3 = {};
    wp::float64 adj_4 = {};
    //---------
    // forward
    // def phase(self: Complex64) -> wp.float64:                                              <L 54>
    // return wp.atan2(self.imag, self.real)                                                  <L 55>
    var_0 = &(var_self.imag);
    var_1 = &(var_self.real);
    var_3 = wp::load(var_0);
    var_4 = wp::load(var_1);
    var_2 = wp::atan2(var_3, var_4);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_2 += adj_ret;
    wp::adj_atan2(var_3, var_4, adj_0, adj_1, adj_2);
    wp::adj_load(var_1, adj_1, adj_4);
    wp::adj_load(var_0, adj_0, adj_3);
    adj_self.real += adj_1;
    adj_self.imag += adj_0;
    // adj: return wp.atan2(self.imag, self.real)                                             <L 55>
    // adj: def phase(self: Complex64) -> wp.float64:                                         <L 54>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:63
static CUDA_CALLABLE Complex64_e484527b pow_c_0(
    Complex64_e484527b var_self,
    wp::float64 var_exponent)
{
    //---------
    // primal vars
    wp::float64 var_0;
    wp::float64 var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    wp::float64 var_7;
    Complex64_e484527b var_8;
    //---------
    // forward
    // def pow_c(self: Complex64, exponent: wp.float64) -> Complex64:                         <L 64>
    // mag = magnitude(self) ** exponent                                                      <L 65>
    var_0 = magnitude_0(var_self);
    var_1 = wp::pow(var_0, var_exponent);
    // _phase = phase(self) * exponent                                                        <L 66>
    var_2 = phase_0(var_self);
    var_3 = wp::mul(var_2, var_exponent);
    // return Complex64(mag * wp.cos(_phase), mag * wp.sin(_phase))                           <L 67>
    var_4 = wp::cos(var_3);
    var_5 = wp::mul(var_1, var_4);
    var_6 = wp::sin(var_3);
    var_7 = wp::mul(var_1, var_6);
    var_8 = Complex64_e484527b(var_5, var_7);
    return var_8;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:63
static CUDA_CALLABLE void adj_pow_c_0(
    Complex64_e484527b var_self,
    wp::float64 var_exponent,
    Complex64_e484527b & adj_self,
    wp::float64 & adj_exponent,
    Complex64_e484527b & adj_ret)
{
    //---------
    // primal vars
    wp::float64 var_0;
    wp::float64 var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    wp::float64 var_7;
    Complex64_e484527b var_8;
    //---------
    // dual vars
    wp::float64 adj_0 = {};
    wp::float64 adj_1 = {};
    wp::float64 adj_2 = {};
    wp::float64 adj_3 = {};
    wp::float64 adj_4 = {};
    wp::float64 adj_5 = {};
    wp::float64 adj_6 = {};
    wp::float64 adj_7 = {};
    Complex64_e484527b adj_8 = {};
    //---------
    // forward
    // def pow_c(self: Complex64, exponent: wp.float64) -> Complex64:                         <L 64>
    // mag = magnitude(self) ** exponent                                                      <L 65>
    var_0 = magnitude_0(var_self);
    var_1 = wp::pow(var_0, var_exponent);
    // _phase = phase(self) * exponent                                                        <L 66>
    var_2 = phase_0(var_self);
    var_3 = wp::mul(var_2, var_exponent);
    // return Complex64(mag * wp.cos(_phase), mag * wp.sin(_phase))                           <L 67>
    var_4 = wp::cos(var_3);
    var_5 = wp::mul(var_1, var_4);
    var_6 = wp::sin(var_3);
    var_7 = wp::mul(var_1, var_6);
    var_8 = Complex64_e484527b(var_5, var_7);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_8 += adj_ret;
    adj_Complex64_e484527b(var_5, var_7, adj_5, adj_7, adj_8);
    wp::adj_mul(var_1, var_6, adj_1, adj_6, adj_7);
    wp::adj_sin(var_3, adj_3, adj_6);
    wp::adj_mul(var_1, var_4, adj_1, adj_4, adj_5);
    wp::adj_cos(var_3, adj_3, adj_4);
    // adj: return Complex64(mag * wp.cos(_phase), mag * wp.sin(_phase))                      <L 67>
    wp::adj_mul(var_2, var_exponent, adj_2, adj_exponent, adj_3);
    adj_phase_0(var_self, adj_self, adj_2);
    // adj: _phase = phase(self) * exponent                                                   <L 66>
    wp::adj_pow(var_0, var_exponent, var_1, adj_0, adj_exponent, adj_1);
    adj_magnitude_0(var_self, adj_self, adj_0);
    // adj: mag = magnitude(self) ** exponent                                                 <L 65>
    // adj: def pow_c(self: Complex64, exponent: wp.float64) -> Complex64:                    <L 64>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:26
static CUDA_CALLABLE Complex64_e484527b sub_0(
    Complex64_e484527b var_self,
    Complex64_e484527b var_other)
{
    //---------
    // primal vars
    wp::float64* var_0;
    wp::float64* var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64* var_5;
    wp::float64* var_6;
    wp::float64 var_7;
    wp::float64 var_8;
    wp::float64 var_9;
    Complex64_e484527b var_10;
    //---------
    // forward
    // def sub(self: Complex64, other: Complex64) -> Complex64:                               <L 27>
    // return Complex64(self.real - other.real, self.imag - other.imag)                       <L 28>
    var_0 = &(var_self.real);
    var_1 = &(var_other.real);
    var_3 = wp::load(var_0);
    var_4 = wp::load(var_1);
    var_2 = wp::sub(var_3, var_4);
    var_5 = &(var_self.imag);
    var_6 = &(var_other.imag);
    var_8 = wp::load(var_5);
    var_9 = wp::load(var_6);
    var_7 = wp::sub(var_8, var_9);
    var_10 = Complex64_e484527b(var_2, var_7);
    return var_10;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:26
static CUDA_CALLABLE void adj_sub_0(
    Complex64_e484527b var_self,
    Complex64_e484527b var_other,
    Complex64_e484527b & adj_self,
    Complex64_e484527b & adj_other,
    Complex64_e484527b & adj_ret)
{
    //---------
    // primal vars
    wp::float64* var_0;
    wp::float64* var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64* var_5;
    wp::float64* var_6;
    wp::float64 var_7;
    wp::float64 var_8;
    wp::float64 var_9;
    Complex64_e484527b var_10;
    //---------
    // dual vars
    wp::float64 adj_0 = {};
    wp::float64 adj_1 = {};
    wp::float64 adj_2 = {};
    wp::float64 adj_3 = {};
    wp::float64 adj_4 = {};
    wp::float64 adj_5 = {};
    wp::float64 adj_6 = {};
    wp::float64 adj_7 = {};
    wp::float64 adj_8 = {};
    wp::float64 adj_9 = {};
    Complex64_e484527b adj_10 = {};
    //---------
    // forward
    // def sub(self: Complex64, other: Complex64) -> Complex64:                               <L 27>
    // return Complex64(self.real - other.real, self.imag - other.imag)                       <L 28>
    var_0 = &(var_self.real);
    var_1 = &(var_other.real);
    var_3 = wp::load(var_0);
    var_4 = wp::load(var_1);
    var_2 = wp::sub(var_3, var_4);
    var_5 = &(var_self.imag);
    var_6 = &(var_other.imag);
    var_8 = wp::load(var_5);
    var_9 = wp::load(var_6);
    var_7 = wp::sub(var_8, var_9);
    var_10 = Complex64_e484527b(var_2, var_7);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_10 += adj_ret;
    adj_Complex64_e484527b(var_2, var_7, adj_2, adj_7, adj_10);
    wp::adj_sub(var_8, var_9, adj_5, adj_6, adj_7);
    wp::adj_load(var_6, adj_6, adj_9);
    wp::adj_load(var_5, adj_5, adj_8);
    adj_other.imag += adj_6;
    adj_self.imag += adj_5;
    wp::adj_sub(var_3, var_4, adj_0, adj_1, adj_2);
    wp::adj_load(var_1, adj_1, adj_4);
    wp::adj_load(var_0, adj_0, adj_3);
    adj_other.real += adj_1;
    adj_self.real += adj_0;
    // adj: return Complex64(self.real - other.real, self.imag - other.imag)                  <L 28>
    // adj: def sub(self: Complex64, other: Complex64) -> Complex64:                          <L 27>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:77
static CUDA_CALLABLE Complex64_e484527b inverse_c_0(
    Complex64_e484527b var_self)
{
    //---------
    // primal vars
    wp::float64* var_0;
    wp::float64* var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64* var_5;
    wp::float64* var_6;
    wp::float64 var_7;
    wp::float64 var_8;
    wp::float64 var_9;
    wp::float64 var_10;
    wp::float64* var_11;
    wp::float64 var_12;
    wp::float64 var_13;
    wp::float64* var_14;
    wp::float64 var_15;
    wp::float64 var_16;
    wp::float64 var_17;
    Complex64_e484527b var_18;
    //---------
    // forward
    // def inverse_c(self: Complex64) -> Complex64:                                           <L 78>
    // norm2 = self.real * self.real + self.imag * self.imag                                  <L 79>
    var_0 = &(var_self.real);
    var_1 = &(var_self.real);
    var_3 = wp::load(var_0);
    var_4 = wp::load(var_1);
    var_2 = wp::mul(var_3, var_4);
    var_5 = &(var_self.imag);
    var_6 = &(var_self.imag);
    var_8 = wp::load(var_5);
    var_9 = wp::load(var_6);
    var_7 = wp::mul(var_8, var_9);
    var_10 = wp::add(var_2, var_7);
    // return Complex64(self.real / norm2, -self.imag / norm2)                                <L 80>
    var_11 = &(var_self.real);
    var_13 = wp::load(var_11);
    var_12 = wp::div(var_13, var_10);
    var_14 = &(var_self.imag);
    var_16 = wp::load(var_14);
    var_15 = wp::neg(var_16);
    var_17 = wp::div(var_15, var_10);
    var_18 = Complex64_e484527b(var_12, var_17);
    return var_18;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:77
static CUDA_CALLABLE void adj_inverse_c_0(
    Complex64_e484527b var_self,
    Complex64_e484527b & adj_self,
    Complex64_e484527b & adj_ret)
{
    //---------
    // primal vars
    wp::float64* var_0;
    wp::float64* var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64* var_5;
    wp::float64* var_6;
    wp::float64 var_7;
    wp::float64 var_8;
    wp::float64 var_9;
    wp::float64 var_10;
    wp::float64* var_11;
    wp::float64 var_12;
    wp::float64 var_13;
    wp::float64* var_14;
    wp::float64 var_15;
    wp::float64 var_16;
    wp::float64 var_17;
    Complex64_e484527b var_18;
    //---------
    // dual vars
    wp::float64 adj_0 = {};
    wp::float64 adj_1 = {};
    wp::float64 adj_2 = {};
    wp::float64 adj_3 = {};
    wp::float64 adj_4 = {};
    wp::float64 adj_5 = {};
    wp::float64 adj_6 = {};
    wp::float64 adj_7 = {};
    wp::float64 adj_8 = {};
    wp::float64 adj_9 = {};
    wp::float64 adj_10 = {};
    wp::float64 adj_11 = {};
    wp::float64 adj_12 = {};
    wp::float64 adj_13 = {};
    wp::float64 adj_14 = {};
    wp::float64 adj_15 = {};
    wp::float64 adj_16 = {};
    wp::float64 adj_17 = {};
    Complex64_e484527b adj_18 = {};
    //---------
    // forward
    // def inverse_c(self: Complex64) -> Complex64:                                           <L 78>
    // norm2 = self.real * self.real + self.imag * self.imag                                  <L 79>
    var_0 = &(var_self.real);
    var_1 = &(var_self.real);
    var_3 = wp::load(var_0);
    var_4 = wp::load(var_1);
    var_2 = wp::mul(var_3, var_4);
    var_5 = &(var_self.imag);
    var_6 = &(var_self.imag);
    var_8 = wp::load(var_5);
    var_9 = wp::load(var_6);
    var_7 = wp::mul(var_8, var_9);
    var_10 = wp::add(var_2, var_7);
    // return Complex64(self.real / norm2, -self.imag / norm2)                                <L 80>
    var_11 = &(var_self.real);
    var_13 = wp::load(var_11);
    var_12 = wp::div(var_13, var_10);
    var_14 = &(var_self.imag);
    var_16 = wp::load(var_14);
    var_15 = wp::neg(var_16);
    var_17 = wp::div(var_15, var_10);
    var_18 = Complex64_e484527b(var_12, var_17);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_18 += adj_ret;
    adj_Complex64_e484527b(var_12, var_17, adj_12, adj_17, adj_18);
    wp::adj_div(var_15, var_10, var_17, adj_15, adj_10, adj_17);
    wp::adj_neg(var_16, adj_14, adj_15);
    wp::adj_load(var_14, adj_14, adj_16);
    adj_self.imag += adj_14;
    wp::adj_div(var_13, var_10, var_12, adj_11, adj_10, adj_12);
    wp::adj_load(var_11, adj_11, adj_13);
    adj_self.real += adj_11;
    // adj: return Complex64(self.real / norm2, -self.imag / norm2)                           <L 80>
    wp::adj_add(var_2, var_7, adj_2, adj_7, adj_10);
    wp::adj_mul(var_8, var_9, adj_5, adj_6, adj_7);
    wp::adj_load(var_6, adj_6, adj_9);
    wp::adj_load(var_5, adj_5, adj_8);
    adj_self.imag += adj_6;
    adj_self.imag += adj_5;
    wp::adj_mul(var_3, var_4, adj_0, adj_1, adj_2);
    wp::adj_load(var_1, adj_1, adj_4);
    wp::adj_load(var_0, adj_0, adj_3);
    adj_self.real += adj_1;
    adj_self.real += adj_0;
    // adj: norm2 = self.real * self.real + self.imag * self.imag                             <L 79>
    // adj: def inverse_c(self: Complex64) -> Complex64:                                      <L 78>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:264
static CUDA_CALLABLE wp::float64 get_smallest_positive_real_cubic_root_0(
    wp::float64 var_a,
    wp::float64 var_b,
    wp::float64 var_c,
    wp::float64 var_d,
    wp::float64 var_img_tol,
    wp::float64 var_cubic_coef_tol)
{
    //---------
    // primal vars
    const wp::float64 var_0 = -1.0;
    wp::float64 var_1;
    wp::float64 var_2;
    bool var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    const wp::float32 var_7 = 3.0;
    wp::float64 var_8;
    wp::float64 var_9;
    wp::float64 var_10;
    wp::float64 var_11;
    const wp::float64 var_12 = 2.0;
    wp::float64 var_13;
    wp::float64 var_14;
    wp::float64 var_15;
    const wp::float32 var_16 = 9.0;
    wp::float64 var_17;
    wp::float64 var_18;
    wp::float64 var_19;
    wp::float64 var_20;
    wp::float64 var_21;
    const wp::float32 var_22 = 27.0;
    wp::float64 var_23;
    wp::float64 var_24;
    wp::float64 var_25;
    wp::float64 var_26;
    wp::float64 var_27;
    const wp::float64 var_28 = 0.0;
    Complex64_e484527b var_29;
    wp::float64 var_30;
    const wp::float32 var_31 = 4.0;
    wp::float64 var_32;
    wp::float64 var_33;
    wp::float64 var_34;
    wp::float64 var_35;
    wp::float64 var_36;
    Complex64_e484527b var_37;
    Complex64_e484527b var_38;
    const wp::float32 var_39 = 0.5;
    wp::float64 var_40;
    Complex64_e484527b var_41;
    Complex64_e484527b var_42;
    const wp::float32 var_43 = 1.0;
    const wp::float32 var_44 = 3.0;
    wp::float32 var_45;
    wp::float64 var_46;
    Complex64_e484527b var_47;
    wp::float64 var_48;
    bool var_49;
    wp::float64 var_50;
    const wp::float32 var_51 = 4.0;
    wp::float64 var_52;
    wp::float64 var_53;
    wp::float64 var_54;
    wp::float64 var_55;
    wp::float64 var_56;
    Complex64_e484527b var_57;
    Complex64_e484527b var_58;
    const wp::float32 var_59 = 0.5;
    wp::float64 var_60;
    Complex64_e484527b var_61;
    Complex64_e484527b var_62;
    const wp::float32 var_63 = 1.0;
    const wp::float32 var_64 = 3.0;
    wp::float32 var_65;
    wp::float64 var_66;
    Complex64_e484527b var_67;
    Complex64_e484527b var_68;
    Complex64_e484527b var_69;
    const wp::float32 var_70 = 2.0;
    wp::float64 var_71;
    wp::float64 var_72;
    const wp::float32 var_73 = 3.0;
    wp::float64 var_74;
    wp::float64 var_75;
    const wp::float32 var_76 = 2.0;
    wp::float64 var_77;
    wp::float64 var_78;
    Complex64_e484527b var_79;
    const wp::float32 var_80 = 2.0;
    wp::float64 var_81;
    wp::float64 var_82;
    const wp::float32 var_83 = 3.0;
    wp::float64 var_84;
    wp::float64 var_85;
    wp::float64 var_86;
    const wp::float32 var_87 = 2.0;
    wp::float64 var_88;
    wp::float64 var_89;
    Complex64_e484527b var_90;
    Complex64_e484527b var_91;
    Complex64_e484527b var_92;
    Complex64_e484527b var_93;
    Complex64_e484527b var_94;
    Complex64_e484527b var_95;
    const wp::float32 var_96 = 3.0;
    wp::float64 var_97;
    wp::float64 var_98;
    wp::float64 var_99;
    Complex64_e484527b var_100;
    Complex64_e484527b var_101;
    Complex64_e484527b var_102;
    Complex64_e484527b var_103;
    Complex64_e484527b var_104;
    Complex64_e484527b var_105;
    Complex64_e484527b var_106;
    Complex64_e484527b var_107;
    Complex64_e484527b var_108;
    const wp::float32 var_109 = 3.0;
    wp::float64 var_110;
    wp::float64 var_111;
    wp::float64 var_112;
    Complex64_e484527b var_113;
    Complex64_e484527b var_114;
    Complex64_e484527b var_115;
    Complex64_e484527b var_116;
    Complex64_e484527b var_117;
    Complex64_e484527b var_118;
    Complex64_e484527b var_119;
    Complex64_e484527b var_120;
    Complex64_e484527b var_121;
    const wp::float32 var_122 = 3.0;
    wp::float64 var_123;
    wp::float64 var_124;
    wp::float64 var_125;
    Complex64_e484527b var_126;
    Complex64_e484527b var_127;
    wp::float64* var_128;
    wp::float64 var_129;
    wp::float64 var_130;
    bool var_131;
    wp::float64* var_132;
    const wp::int32 var_133 = 0;
    bool var_134;
    wp::float64 var_135;
    bool var_136;
    wp::float64* var_137;
    wp::float64 var_138;
    wp::float64 var_139;
    wp::float64 var_140;
    wp::float64* var_141;
    wp::float64 var_142;
    wp::float64 var_143;
    bool var_144;
    wp::float64* var_145;
    const wp::int32 var_146 = 0;
    bool var_147;
    wp::float64 var_148;
    wp::float64* var_149;
    bool var_150;
    wp::float64 var_151;
    const wp::int32 var_152 = 0;
    bool var_153;
    bool var_154;
    bool var_155;
    wp::float64* var_156;
    wp::float64 var_157;
    wp::float64 var_158;
    wp::float64 var_159;
    wp::float64* var_160;
    wp::float64 var_161;
    wp::float64 var_162;
    bool var_163;
    wp::float64* var_164;
    const wp::int32 var_165 = 0;
    bool var_166;
    wp::float64 var_167;
    wp::float64* var_168;
    bool var_169;
    wp::float64 var_170;
    const wp::int32 var_171 = 0;
    bool var_172;
    bool var_173;
    bool var_174;
    wp::float64* var_175;
    wp::float64 var_176;
    wp::float64 var_177;
    wp::float64 var_178;
    wp::float64 var_179;
    //---------
    // forward
    // def get_smallest_positive_real_cubic_root(                                             <L 265>
    // t = __1                                                                                <L 268>
    var_1 = wp::copy(var_0);
    // if wp.abs(a) <= cubic_coef_tol:                                                        <L 269>
    var_2 = wp::abs(var_a);
    var_3 = (var_2 <= var_cubic_coef_tol);
    if (var_3) {
        // t = get_smallest_positive_real_quad_root(b, c, d, cubic_coef_tol)                  <L 270>
        var_4 = get_smallest_positive_real_quad_root_0(var_b, var_c, var_d, var_cubic_coef_tol);
    }
    var_5 = wp::where(var_3, var_4, var_1);
    if (!var_3) {
        // delta0_real = b * b - wp.float64(3.0) * a * c                                      <L 272>
        var_6 = wp::mul(var_b, var_b);
        var_8 = wp::float64(var_7);
        var_9 = wp::mul(var_8, var_a);
        var_10 = wp::mul(var_9, var_c);
        var_11 = wp::sub(var_6, var_10);
        // delta1_real = _2 * b * b * b - wp.float64(9.0) * a * b * c + wp.float64(27.0) * a * a * d       <L 273>
        var_13 = wp::mul(var_12, var_b);
        var_14 = wp::mul(var_13, var_b);
        var_15 = wp::mul(var_14, var_b);
        var_17 = wp::float64(var_16);
        var_18 = wp::mul(var_17, var_a);
        var_19 = wp::mul(var_18, var_b);
        var_20 = wp::mul(var_19, var_c);
        var_21 = wp::sub(var_15, var_20);
        var_23 = wp::float64(var_22);
        var_24 = wp::mul(var_23, var_a);
        var_25 = wp::mul(var_24, var_a);
        var_26 = wp::mul(var_25, var_d);
        var_27 = wp::add(var_21, var_26);
        // delta1 = Complex64(delta1_real, _0)                                                <L 274>
        var_29 = Complex64_e484527b(var_27, var_28);
        // C = pow_c(                                                                         <L 275>
        // mul(                                                                               <L 276>
        // add(                                                                               <L 277>
        // delta1,                                                                            <L 278>
        // sqrt_c(delta1_real * delta1_real - wp.float64(4.0) * delta0_real * delta0_real * delta0_real),       <L 279>
        var_30 = wp::mul(var_27, var_27);
        var_32 = wp::float64(var_31);
        var_33 = wp::mul(var_32, var_11);
        var_34 = wp::mul(var_33, var_11);
        var_35 = wp::mul(var_34, var_11);
        var_36 = wp::sub(var_30, var_35);
        var_37 = sqrt_c_0(var_36);
        var_38 = add_0(var_29, var_37);
        // Complex64(wp.float64(0.5), _0),                                                    <L 281>
        var_40 = wp::float64(var_39);
        var_41 = Complex64_e484527b(var_40, var_28);
        var_42 = mul_0(var_38, var_41);
        // wp.float64(1.0 / 3.0),                                                             <L 283>
        var_45 = wp::div(var_43, var_44);
        var_46 = wp::float64(var_45);
        var_47 = pow_c_0(var_42, var_46);
        // if magnitude(C) == _0:                                                             <L 285>
        var_48 = magnitude_0(var_47);
        var_49 = (var_48 == var_28);
        if (var_49) {
            // C = pow_c(                                                                     <L 286>
            // mul(                                                                           <L 287>
            // sub(                                                                           <L 288>
            // delta1,                                                                        <L 289>
            // sqrt_c(delta1_real * delta1_real - wp.float64(4.0) * delta0_real * delta0_real * delta0_real),       <L 290>
            var_50 = wp::mul(var_27, var_27);
            var_52 = wp::float64(var_51);
            var_53 = wp::mul(var_52, var_11);
            var_54 = wp::mul(var_53, var_11);
            var_55 = wp::mul(var_54, var_11);
            var_56 = wp::sub(var_50, var_55);
            var_57 = sqrt_c_0(var_56);
            var_58 = sub_0(var_29, var_57);
            // Complex64(wp.float64(0.5), _0),                                                <L 292>
            var_60 = wp::float64(var_59);
            var_61 = Complex64_e484527b(var_60, var_28);
            var_62 = mul_0(var_58, var_61);
            // wp.float64(1.0 / 3.0),                                                         <L 294>
            var_65 = wp::div(var_63, var_64);
            var_66 = wp::float64(var_65);
            var_67 = pow_c_0(var_62, var_66);
        }
        var_68 = wp::where(var_49, var_67, var_47);
        // delta0 = Complex64(delta0_real, _0)                                                <L 297>
        var_69 = Complex64_e484527b(var_11, var_28);
        // u2 = Complex64(__1 / wp.float64(2.0), wp.sqrt(wp.float64(3.0)) / wp.float64(2.0))       <L 299>
        var_71 = wp::float64(var_70);
        var_72 = wp::div(var_0, var_71);
        var_74 = wp::float64(var_73);
        var_75 = wp::sqrt(var_74);
        var_77 = wp::float64(var_76);
        var_78 = wp::div(var_75, var_77);
        var_79 = Complex64_e484527b(var_72, var_78);
        // u3 = Complex64(__1 / wp.float64(2.0), -wp.sqrt(wp.float64(3.0)) / wp.float64(2.0))       <L 300>
        var_81 = wp::float64(var_80);
        var_82 = wp::div(var_0, var_81);
        var_84 = wp::float64(var_83);
        var_85 = wp::sqrt(var_84);
        var_86 = wp::neg(var_85);
        var_88 = wp::float64(var_87);
        var_89 = wp::div(var_86, var_88);
        var_90 = Complex64_e484527b(var_82, var_89);
        // t1 = mul(add(add(Complex64(b, _0), C), mul(delta0, inverse_c(C))), Complex64(__1 / (wp.float64(3.0) * a), _0))       <L 301>
        var_91 = Complex64_e484527b(var_b, var_28);
        var_92 = add_0(var_91, var_68);
        var_93 = inverse_c_0(var_68);
        var_94 = mul_0(var_69, var_93);
        var_95 = add_0(var_92, var_94);
        var_97 = wp::float64(var_96);
        var_98 = wp::mul(var_97, var_a);
        var_99 = wp::div(var_0, var_98);
        var_100 = Complex64_e484527b(var_99, var_28);
        var_101 = mul_0(var_95, var_100);
        // t2 = mul(                                                                          <L 302>
        // add(add(Complex64(b, _0), mul(u2, C)), mul(delta0, inverse_c(mul(u2, C)))),        <L 303>
        var_102 = Complex64_e484527b(var_b, var_28);
        var_103 = mul_0(var_79, var_68);
        var_104 = add_0(var_102, var_103);
        var_105 = mul_0(var_79, var_68);
        var_106 = inverse_c_0(var_105);
        var_107 = mul_0(var_69, var_106);
        var_108 = add_0(var_104, var_107);
        // Complex64(__1 / (wp.float64(3.0) * a), _0),                                        <L 304>
        var_110 = wp::float64(var_109);
        var_111 = wp::mul(var_110, var_a);
        var_112 = wp::div(var_0, var_111);
        var_113 = Complex64_e484527b(var_112, var_28);
        var_114 = mul_0(var_108, var_113);
        // t3 = mul(                                                                          <L 306>
        // add(add(Complex64(b, _0), mul(u3, C)), mul(delta0, inverse_c(mul(u3, C)))),        <L 307>
        var_115 = Complex64_e484527b(var_b, var_28);
        var_116 = mul_0(var_90, var_68);
        var_117 = add_0(var_115, var_116);
        var_118 = mul_0(var_90, var_68);
        var_119 = inverse_c_0(var_118);
        var_120 = mul_0(var_69, var_119);
        var_121 = add_0(var_117, var_120);
        // Complex64(__1 / (wp.float64(3.0) * a), _0),                                        <L 308>
        var_123 = wp::float64(var_122);
        var_124 = wp::mul(var_123, var_a);
        var_125 = wp::div(var_0, var_124);
        var_126 = Complex64_e484527b(var_125, var_28);
        var_127 = mul_0(var_121, var_126);
        // if (wp.abs(t1.imag) < img_tol) and (t1.real > 0):                                  <L 311>
        var_128 = &(var_101.imag);
        var_130 = wp::load(var_128);
        var_129 = wp::abs(var_130);
        var_131 = (var_129 < var_img_tol);
        var_132 = &(var_101.real);
        var_135 = wp::load(var_132);
        var_134 = (var_135 > var_133);
        var_136 = var_131 && var_134;
        if (var_136) {
            // t = t1.real                                                                    <L 312>
            var_137 = &(var_101.real);
            var_139 = wp::load(var_137);
            var_138 = wp::copy(var_139);
        }
        var_140 = wp::where(var_136, var_138, var_5);
        // if (wp.abs(t2.imag) < img_tol) and (t2.real > 0) and ((t2.real < t) or (t < 0)):       <L 313>
        var_141 = &(var_114.imag);
        var_143 = wp::load(var_141);
        var_142 = wp::abs(var_143);
        var_144 = (var_142 < var_img_tol);
        var_145 = &(var_114.real);
        var_148 = wp::load(var_145);
        var_147 = (var_148 > var_146);
        var_149 = &(var_114.real);
        var_151 = wp::load(var_149);
        var_150 = (var_151 < var_140);
        var_153 = (var_140 < var_152);
        var_154 = var_150 || var_153;
        var_155 = var_144 && var_147 && var_154;
        if (var_155) {
            // t = t2.real                                                                    <L 314>
            var_156 = &(var_114.real);
            var_158 = wp::load(var_156);
            var_157 = wp::copy(var_158);
        }
        var_159 = wp::where(var_155, var_157, var_140);
        // if (wp.abs(t3.imag) < img_tol) and (t3.real > 0) and ((t3.real < t) or (t < 0)):       <L 315>
        var_160 = &(var_127.imag);
        var_162 = wp::load(var_160);
        var_161 = wp::abs(var_162);
        var_163 = (var_161 < var_img_tol);
        var_164 = &(var_127.real);
        var_167 = wp::load(var_164);
        var_166 = (var_167 > var_165);
        var_168 = &(var_127.real);
        var_170 = wp::load(var_168);
        var_169 = (var_170 < var_159);
        var_172 = (var_159 < var_171);
        var_173 = var_169 || var_172;
        var_174 = var_163 && var_166 && var_173;
        if (var_174) {
            // t = t3.real                                                                    <L 316>
            var_175 = &(var_127.real);
            var_177 = wp::load(var_175);
            var_176 = wp::copy(var_177);
        }
        var_178 = wp::where(var_174, var_176, var_159);
    }
    var_179 = wp::where(var_3, var_5, var_178);
    // return t                                                                               <L 318>
    return var_179;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/utils/wp_math.py:264
static CUDA_CALLABLE void adj_get_smallest_positive_real_cubic_root_0(
    wp::float64 var_a,
    wp::float64 var_b,
    wp::float64 var_c,
    wp::float64 var_d,
    wp::float64 var_img_tol,
    wp::float64 var_cubic_coef_tol,
    wp::float64 & adj_a,
    wp::float64 & adj_b,
    wp::float64 & adj_c,
    wp::float64 & adj_d,
    wp::float64 & adj_img_tol,
    wp::float64 & adj_cubic_coef_tol,
    wp::float64 & adj_ret)
{
    //---------
    // primal vars
    const wp::float64 var_0 = -1.0;
    wp::float64 var_1;
    wp::float64 var_2;
    bool var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    const wp::float32 var_7 = 3.0;
    wp::float64 var_8;
    wp::float64 var_9;
    wp::float64 var_10;
    wp::float64 var_11;
    const wp::float64 var_12 = 2.0;
    wp::float64 var_13;
    wp::float64 var_14;
    wp::float64 var_15;
    const wp::float32 var_16 = 9.0;
    wp::float64 var_17;
    wp::float64 var_18;
    wp::float64 var_19;
    wp::float64 var_20;
    wp::float64 var_21;
    const wp::float32 var_22 = 27.0;
    wp::float64 var_23;
    wp::float64 var_24;
    wp::float64 var_25;
    wp::float64 var_26;
    wp::float64 var_27;
    const wp::float64 var_28 = 0.0;
    Complex64_e484527b var_29;
    wp::float64 var_30;
    const wp::float32 var_31 = 4.0;
    wp::float64 var_32;
    wp::float64 var_33;
    wp::float64 var_34;
    wp::float64 var_35;
    wp::float64 var_36;
    Complex64_e484527b var_37;
    Complex64_e484527b var_38;
    const wp::float32 var_39 = 0.5;
    wp::float64 var_40;
    Complex64_e484527b var_41;
    Complex64_e484527b var_42;
    const wp::float32 var_43 = 1.0;
    const wp::float32 var_44 = 3.0;
    wp::float32 var_45;
    wp::float64 var_46;
    Complex64_e484527b var_47;
    wp::float64 var_48;
    bool var_49;
    wp::float64 var_50;
    const wp::float32 var_51 = 4.0;
    wp::float64 var_52;
    wp::float64 var_53;
    wp::float64 var_54;
    wp::float64 var_55;
    wp::float64 var_56;
    Complex64_e484527b var_57;
    Complex64_e484527b var_58;
    const wp::float32 var_59 = 0.5;
    wp::float64 var_60;
    Complex64_e484527b var_61;
    Complex64_e484527b var_62;
    const wp::float32 var_63 = 1.0;
    const wp::float32 var_64 = 3.0;
    wp::float32 var_65;
    wp::float64 var_66;
    Complex64_e484527b var_67;
    Complex64_e484527b var_68;
    Complex64_e484527b var_69;
    const wp::float32 var_70 = 2.0;
    wp::float64 var_71;
    wp::float64 var_72;
    const wp::float32 var_73 = 3.0;
    wp::float64 var_74;
    wp::float64 var_75;
    const wp::float32 var_76 = 2.0;
    wp::float64 var_77;
    wp::float64 var_78;
    Complex64_e484527b var_79;
    const wp::float32 var_80 = 2.0;
    wp::float64 var_81;
    wp::float64 var_82;
    const wp::float32 var_83 = 3.0;
    wp::float64 var_84;
    wp::float64 var_85;
    wp::float64 var_86;
    const wp::float32 var_87 = 2.0;
    wp::float64 var_88;
    wp::float64 var_89;
    Complex64_e484527b var_90;
    Complex64_e484527b var_91;
    Complex64_e484527b var_92;
    Complex64_e484527b var_93;
    Complex64_e484527b var_94;
    Complex64_e484527b var_95;
    const wp::float32 var_96 = 3.0;
    wp::float64 var_97;
    wp::float64 var_98;
    wp::float64 var_99;
    Complex64_e484527b var_100;
    Complex64_e484527b var_101;
    Complex64_e484527b var_102;
    Complex64_e484527b var_103;
    Complex64_e484527b var_104;
    Complex64_e484527b var_105;
    Complex64_e484527b var_106;
    Complex64_e484527b var_107;
    Complex64_e484527b var_108;
    const wp::float32 var_109 = 3.0;
    wp::float64 var_110;
    wp::float64 var_111;
    wp::float64 var_112;
    Complex64_e484527b var_113;
    Complex64_e484527b var_114;
    Complex64_e484527b var_115;
    Complex64_e484527b var_116;
    Complex64_e484527b var_117;
    Complex64_e484527b var_118;
    Complex64_e484527b var_119;
    Complex64_e484527b var_120;
    Complex64_e484527b var_121;
    const wp::float32 var_122 = 3.0;
    wp::float64 var_123;
    wp::float64 var_124;
    wp::float64 var_125;
    Complex64_e484527b var_126;
    Complex64_e484527b var_127;
    wp::float64* var_128;
    wp::float64 var_129;
    wp::float64 var_130;
    bool var_131;
    wp::float64* var_132;
    const wp::int32 var_133 = 0;
    bool var_134;
    wp::float64 var_135;
    bool var_136;
    wp::float64* var_137;
    wp::float64 var_138;
    wp::float64 var_139;
    wp::float64 var_140;
    wp::float64* var_141;
    wp::float64 var_142;
    wp::float64 var_143;
    bool var_144;
    wp::float64* var_145;
    const wp::int32 var_146 = 0;
    bool var_147;
    wp::float64 var_148;
    wp::float64* var_149;
    bool var_150;
    wp::float64 var_151;
    const wp::int32 var_152 = 0;
    bool var_153;
    bool var_154;
    bool var_155;
    wp::float64* var_156;
    wp::float64 var_157;
    wp::float64 var_158;
    wp::float64 var_159;
    wp::float64* var_160;
    wp::float64 var_161;
    wp::float64 var_162;
    bool var_163;
    wp::float64* var_164;
    const wp::int32 var_165 = 0;
    bool var_166;
    wp::float64 var_167;
    wp::float64* var_168;
    bool var_169;
    wp::float64 var_170;
    const wp::int32 var_171 = 0;
    bool var_172;
    bool var_173;
    bool var_174;
    wp::float64* var_175;
    wp::float64 var_176;
    wp::float64 var_177;
    wp::float64 var_178;
    wp::float64 var_179;
    //---------
    // dual vars
    wp::float64 adj_0 = {};
    wp::float64 adj_1 = {};
    wp::float64 adj_2 = {};
    bool adj_3 = {};
    wp::float64 adj_4 = {};
    wp::float64 adj_5 = {};
    wp::float64 adj_6 = {};
    wp::float32 adj_7 = {};
    wp::float64 adj_8 = {};
    wp::float64 adj_9 = {};
    wp::float64 adj_10 = {};
    wp::float64 adj_11 = {};
    wp::float64 adj_12 = {};
    wp::float64 adj_13 = {};
    wp::float64 adj_14 = {};
    wp::float64 adj_15 = {};
    wp::float32 adj_16 = {};
    wp::float64 adj_17 = {};
    wp::float64 adj_18 = {};
    wp::float64 adj_19 = {};
    wp::float64 adj_20 = {};
    wp::float64 adj_21 = {};
    wp::float32 adj_22 = {};
    wp::float64 adj_23 = {};
    wp::float64 adj_24 = {};
    wp::float64 adj_25 = {};
    wp::float64 adj_26 = {};
    wp::float64 adj_27 = {};
    wp::float64 adj_28 = {};
    Complex64_e484527b adj_29 = {};
    wp::float64 adj_30 = {};
    wp::float32 adj_31 = {};
    wp::float64 adj_32 = {};
    wp::float64 adj_33 = {};
    wp::float64 adj_34 = {};
    wp::float64 adj_35 = {};
    wp::float64 adj_36 = {};
    Complex64_e484527b adj_37 = {};
    Complex64_e484527b adj_38 = {};
    wp::float32 adj_39 = {};
    wp::float64 adj_40 = {};
    Complex64_e484527b adj_41 = {};
    Complex64_e484527b adj_42 = {};
    wp::float32 adj_43 = {};
    wp::float32 adj_44 = {};
    wp::float32 adj_45 = {};
    wp::float64 adj_46 = {};
    Complex64_e484527b adj_47 = {};
    wp::float64 adj_48 = {};
    bool adj_49 = {};
    wp::float64 adj_50 = {};
    wp::float32 adj_51 = {};
    wp::float64 adj_52 = {};
    wp::float64 adj_53 = {};
    wp::float64 adj_54 = {};
    wp::float64 adj_55 = {};
    wp::float64 adj_56 = {};
    Complex64_e484527b adj_57 = {};
    Complex64_e484527b adj_58 = {};
    wp::float32 adj_59 = {};
    wp::float64 adj_60 = {};
    Complex64_e484527b adj_61 = {};
    Complex64_e484527b adj_62 = {};
    wp::float32 adj_63 = {};
    wp::float32 adj_64 = {};
    wp::float32 adj_65 = {};
    wp::float64 adj_66 = {};
    Complex64_e484527b adj_67 = {};
    Complex64_e484527b adj_68 = {};
    Complex64_e484527b adj_69 = {};
    wp::float32 adj_70 = {};
    wp::float64 adj_71 = {};
    wp::float64 adj_72 = {};
    wp::float32 adj_73 = {};
    wp::float64 adj_74 = {};
    wp::float64 adj_75 = {};
    wp::float32 adj_76 = {};
    wp::float64 adj_77 = {};
    wp::float64 adj_78 = {};
    Complex64_e484527b adj_79 = {};
    wp::float32 adj_80 = {};
    wp::float64 adj_81 = {};
    wp::float64 adj_82 = {};
    wp::float32 adj_83 = {};
    wp::float64 adj_84 = {};
    wp::float64 adj_85 = {};
    wp::float64 adj_86 = {};
    wp::float32 adj_87 = {};
    wp::float64 adj_88 = {};
    wp::float64 adj_89 = {};
    Complex64_e484527b adj_90 = {};
    Complex64_e484527b adj_91 = {};
    Complex64_e484527b adj_92 = {};
    Complex64_e484527b adj_93 = {};
    Complex64_e484527b adj_94 = {};
    Complex64_e484527b adj_95 = {};
    wp::float32 adj_96 = {};
    wp::float64 adj_97 = {};
    wp::float64 adj_98 = {};
    wp::float64 adj_99 = {};
    Complex64_e484527b adj_100 = {};
    Complex64_e484527b adj_101 = {};
    Complex64_e484527b adj_102 = {};
    Complex64_e484527b adj_103 = {};
    Complex64_e484527b adj_104 = {};
    Complex64_e484527b adj_105 = {};
    Complex64_e484527b adj_106 = {};
    Complex64_e484527b adj_107 = {};
    Complex64_e484527b adj_108 = {};
    wp::float32 adj_109 = {};
    wp::float64 adj_110 = {};
    wp::float64 adj_111 = {};
    wp::float64 adj_112 = {};
    Complex64_e484527b adj_113 = {};
    Complex64_e484527b adj_114 = {};
    Complex64_e484527b adj_115 = {};
    Complex64_e484527b adj_116 = {};
    Complex64_e484527b adj_117 = {};
    Complex64_e484527b adj_118 = {};
    Complex64_e484527b adj_119 = {};
    Complex64_e484527b adj_120 = {};
    Complex64_e484527b adj_121 = {};
    wp::float32 adj_122 = {};
    wp::float64 adj_123 = {};
    wp::float64 adj_124 = {};
    wp::float64 adj_125 = {};
    Complex64_e484527b adj_126 = {};
    Complex64_e484527b adj_127 = {};
    wp::float64 adj_128 = {};
    wp::float64 adj_129 = {};
    wp::float64 adj_130 = {};
    bool adj_131 = {};
    wp::float64 adj_132 = {};
    wp::int32 adj_133 = {};
    bool adj_134 = {};
    wp::float64 adj_135 = {};
    bool adj_136 = {};
    wp::float64 adj_137 = {};
    wp::float64 adj_138 = {};
    wp::float64 adj_139 = {};
    wp::float64 adj_140 = {};
    wp::float64 adj_141 = {};
    wp::float64 adj_142 = {};
    wp::float64 adj_143 = {};
    bool adj_144 = {};
    wp::float64 adj_145 = {};
    wp::int32 adj_146 = {};
    bool adj_147 = {};
    wp::float64 adj_148 = {};
    wp::float64 adj_149 = {};
    bool adj_150 = {};
    wp::float64 adj_151 = {};
    wp::int32 adj_152 = {};
    bool adj_153 = {};
    bool adj_154 = {};
    bool adj_155 = {};
    wp::float64 adj_156 = {};
    wp::float64 adj_157 = {};
    wp::float64 adj_158 = {};
    wp::float64 adj_159 = {};
    wp::float64 adj_160 = {};
    wp::float64 adj_161 = {};
    wp::float64 adj_162 = {};
    bool adj_163 = {};
    wp::float64 adj_164 = {};
    wp::int32 adj_165 = {};
    bool adj_166 = {};
    wp::float64 adj_167 = {};
    wp::float64 adj_168 = {};
    bool adj_169 = {};
    wp::float64 adj_170 = {};
    wp::int32 adj_171 = {};
    bool adj_172 = {};
    bool adj_173 = {};
    bool adj_174 = {};
    wp::float64 adj_175 = {};
    wp::float64 adj_176 = {};
    wp::float64 adj_177 = {};
    wp::float64 adj_178 = {};
    wp::float64 adj_179 = {};
    //---------
    // forward
    // def get_smallest_positive_real_cubic_root(                                             <L 265>
    // t = __1                                                                                <L 268>
    var_1 = wp::copy(var_0);
    // if wp.abs(a) <= cubic_coef_tol:                                                        <L 269>
    var_2 = wp::abs(var_a);
    var_3 = (var_2 <= var_cubic_coef_tol);
    if (var_3) {
        // t = get_smallest_positive_real_quad_root(b, c, d, cubic_coef_tol)                  <L 270>
        var_4 = get_smallest_positive_real_quad_root_0(var_b, var_c, var_d, var_cubic_coef_tol);
    }
    var_5 = wp::where(var_3, var_4, var_1);
    if (!var_3) {
        // delta0_real = b * b - wp.float64(3.0) * a * c                                      <L 272>
        var_6 = wp::mul(var_b, var_b);
        var_8 = wp::float64(var_7);
        var_9 = wp::mul(var_8, var_a);
        var_10 = wp::mul(var_9, var_c);
        var_11 = wp::sub(var_6, var_10);
        // delta1_real = _2 * b * b * b - wp.float64(9.0) * a * b * c + wp.float64(27.0) * a * a * d       <L 273>
        var_13 = wp::mul(var_12, var_b);
        var_14 = wp::mul(var_13, var_b);
        var_15 = wp::mul(var_14, var_b);
        var_17 = wp::float64(var_16);
        var_18 = wp::mul(var_17, var_a);
        var_19 = wp::mul(var_18, var_b);
        var_20 = wp::mul(var_19, var_c);
        var_21 = wp::sub(var_15, var_20);
        var_23 = wp::float64(var_22);
        var_24 = wp::mul(var_23, var_a);
        var_25 = wp::mul(var_24, var_a);
        var_26 = wp::mul(var_25, var_d);
        var_27 = wp::add(var_21, var_26);
        // delta1 = Complex64(delta1_real, _0)                                                <L 274>
        var_29 = Complex64_e484527b(var_27, var_28);
        // C = pow_c(                                                                         <L 275>
        // mul(                                                                               <L 276>
        // add(                                                                               <L 277>
        // delta1,                                                                            <L 278>
        // sqrt_c(delta1_real * delta1_real - wp.float64(4.0) * delta0_real * delta0_real * delta0_real),       <L 279>
        var_30 = wp::mul(var_27, var_27);
        var_32 = wp::float64(var_31);
        var_33 = wp::mul(var_32, var_11);
        var_34 = wp::mul(var_33, var_11);
        var_35 = wp::mul(var_34, var_11);
        var_36 = wp::sub(var_30, var_35);
        var_37 = sqrt_c_0(var_36);
        var_38 = add_0(var_29, var_37);
        // Complex64(wp.float64(0.5), _0),                                                    <L 281>
        var_40 = wp::float64(var_39);
        var_41 = Complex64_e484527b(var_40, var_28);
        var_42 = mul_0(var_38, var_41);
        // wp.float64(1.0 / 3.0),                                                             <L 283>
        var_45 = wp::div(var_43, var_44);
        var_46 = wp::float64(var_45);
        var_47 = pow_c_0(var_42, var_46);
        // if magnitude(C) == _0:                                                             <L 285>
        var_48 = magnitude_0(var_47);
        var_49 = (var_48 == var_28);
        if (var_49) {
            // C = pow_c(                                                                     <L 286>
            // mul(                                                                           <L 287>
            // sub(                                                                           <L 288>
            // delta1,                                                                        <L 289>
            // sqrt_c(delta1_real * delta1_real - wp.float64(4.0) * delta0_real * delta0_real * delta0_real),       <L 290>
            var_50 = wp::mul(var_27, var_27);
            var_52 = wp::float64(var_51);
            var_53 = wp::mul(var_52, var_11);
            var_54 = wp::mul(var_53, var_11);
            var_55 = wp::mul(var_54, var_11);
            var_56 = wp::sub(var_50, var_55);
            var_57 = sqrt_c_0(var_56);
            var_58 = sub_0(var_29, var_57);
            // Complex64(wp.float64(0.5), _0),                                                <L 292>
            var_60 = wp::float64(var_59);
            var_61 = Complex64_e484527b(var_60, var_28);
            var_62 = mul_0(var_58, var_61);
            // wp.float64(1.0 / 3.0),                                                         <L 294>
            var_65 = wp::div(var_63, var_64);
            var_66 = wp::float64(var_65);
            var_67 = pow_c_0(var_62, var_66);
        }
        var_68 = wp::where(var_49, var_67, var_47);
        // delta0 = Complex64(delta0_real, _0)                                                <L 297>
        var_69 = Complex64_e484527b(var_11, var_28);
        // u2 = Complex64(__1 / wp.float64(2.0), wp.sqrt(wp.float64(3.0)) / wp.float64(2.0))       <L 299>
        var_71 = wp::float64(var_70);
        var_72 = wp::div(var_0, var_71);
        var_74 = wp::float64(var_73);
        var_75 = wp::sqrt(var_74);
        var_77 = wp::float64(var_76);
        var_78 = wp::div(var_75, var_77);
        var_79 = Complex64_e484527b(var_72, var_78);
        // u3 = Complex64(__1 / wp.float64(2.0), -wp.sqrt(wp.float64(3.0)) / wp.float64(2.0))       <L 300>
        var_81 = wp::float64(var_80);
        var_82 = wp::div(var_0, var_81);
        var_84 = wp::float64(var_83);
        var_85 = wp::sqrt(var_84);
        var_86 = wp::neg(var_85);
        var_88 = wp::float64(var_87);
        var_89 = wp::div(var_86, var_88);
        var_90 = Complex64_e484527b(var_82, var_89);
        // t1 = mul(add(add(Complex64(b, _0), C), mul(delta0, inverse_c(C))), Complex64(__1 / (wp.float64(3.0) * a), _0))       <L 301>
        var_91 = Complex64_e484527b(var_b, var_28);
        var_92 = add_0(var_91, var_68);
        var_93 = inverse_c_0(var_68);
        var_94 = mul_0(var_69, var_93);
        var_95 = add_0(var_92, var_94);
        var_97 = wp::float64(var_96);
        var_98 = wp::mul(var_97, var_a);
        var_99 = wp::div(var_0, var_98);
        var_100 = Complex64_e484527b(var_99, var_28);
        var_101 = mul_0(var_95, var_100);
        // t2 = mul(                                                                          <L 302>
        // add(add(Complex64(b, _0), mul(u2, C)), mul(delta0, inverse_c(mul(u2, C)))),        <L 303>
        var_102 = Complex64_e484527b(var_b, var_28);
        var_103 = mul_0(var_79, var_68);
        var_104 = add_0(var_102, var_103);
        var_105 = mul_0(var_79, var_68);
        var_106 = inverse_c_0(var_105);
        var_107 = mul_0(var_69, var_106);
        var_108 = add_0(var_104, var_107);
        // Complex64(__1 / (wp.float64(3.0) * a), _0),                                        <L 304>
        var_110 = wp::float64(var_109);
        var_111 = wp::mul(var_110, var_a);
        var_112 = wp::div(var_0, var_111);
        var_113 = Complex64_e484527b(var_112, var_28);
        var_114 = mul_0(var_108, var_113);
        // t3 = mul(                                                                          <L 306>
        // add(add(Complex64(b, _0), mul(u3, C)), mul(delta0, inverse_c(mul(u3, C)))),        <L 307>
        var_115 = Complex64_e484527b(var_b, var_28);
        var_116 = mul_0(var_90, var_68);
        var_117 = add_0(var_115, var_116);
        var_118 = mul_0(var_90, var_68);
        var_119 = inverse_c_0(var_118);
        var_120 = mul_0(var_69, var_119);
        var_121 = add_0(var_117, var_120);
        // Complex64(__1 / (wp.float64(3.0) * a), _0),                                        <L 308>
        var_123 = wp::float64(var_122);
        var_124 = wp::mul(var_123, var_a);
        var_125 = wp::div(var_0, var_124);
        var_126 = Complex64_e484527b(var_125, var_28);
        var_127 = mul_0(var_121, var_126);
        // if (wp.abs(t1.imag) < img_tol) and (t1.real > 0):                                  <L 311>
        var_128 = &(var_101.imag);
        var_130 = wp::load(var_128);
        var_129 = wp::abs(var_130);
        var_131 = (var_129 < var_img_tol);
        var_132 = &(var_101.real);
        var_135 = wp::load(var_132);
        var_134 = (var_135 > var_133);
        var_136 = var_131 && var_134;
        if (var_136) {
            // t = t1.real                                                                    <L 312>
            var_137 = &(var_101.real);
            var_139 = wp::load(var_137);
            var_138 = wp::copy(var_139);
        }
        var_140 = wp::where(var_136, var_138, var_5);
        // if (wp.abs(t2.imag) < img_tol) and (t2.real > 0) and ((t2.real < t) or (t < 0)):       <L 313>
        var_141 = &(var_114.imag);
        var_143 = wp::load(var_141);
        var_142 = wp::abs(var_143);
        var_144 = (var_142 < var_img_tol);
        var_145 = &(var_114.real);
        var_148 = wp::load(var_145);
        var_147 = (var_148 > var_146);
        var_149 = &(var_114.real);
        var_151 = wp::load(var_149);
        var_150 = (var_151 < var_140);
        var_153 = (var_140 < var_152);
        var_154 = var_150 || var_153;
        var_155 = var_144 && var_147 && var_154;
        if (var_155) {
            // t = t2.real                                                                    <L 314>
            var_156 = &(var_114.real);
            var_158 = wp::load(var_156);
            var_157 = wp::copy(var_158);
        }
        var_159 = wp::where(var_155, var_157, var_140);
        // if (wp.abs(t3.imag) < img_tol) and (t3.real > 0) and ((t3.real < t) or (t < 0)):       <L 315>
        var_160 = &(var_127.imag);
        var_162 = wp::load(var_160);
        var_161 = wp::abs(var_162);
        var_163 = (var_161 < var_img_tol);
        var_164 = &(var_127.real);
        var_167 = wp::load(var_164);
        var_166 = (var_167 > var_165);
        var_168 = &(var_127.real);
        var_170 = wp::load(var_168);
        var_169 = (var_170 < var_159);
        var_172 = (var_159 < var_171);
        var_173 = var_169 || var_172;
        var_174 = var_163 && var_166 && var_173;
        if (var_174) {
            // t = t3.real                                                                    <L 316>
            var_175 = &(var_127.real);
            var_177 = wp::load(var_175);
            var_176 = wp::copy(var_177);
        }
        var_178 = wp::where(var_174, var_176, var_159);
    }
    var_179 = wp::where(var_3, var_5, var_178);
    // return t                                                                               <L 318>
    goto label0;
    //---------
    // reverse
    label0:;
    adj_179 += adj_ret;
    // adj: return t                                                                          <L 318>
    wp::adj_where(var_3, var_5, var_178, adj_3, adj_5, adj_178, adj_179);
    if (!var_3) {
        wp::adj_where(var_174, var_176, var_159, adj_174, adj_176, adj_159, adj_178);
        if (var_174) {
            wp::adj_copy(var_177, adj_175, adj_176);
            wp::adj_load(var_175, adj_175, adj_177);
            adj_127.real += adj_175;
            // adj: t = t3.real                                                               <L 316>
        }
        wp::adj_load(var_168, adj_168, adj_170);
        adj_127.real += adj_168;
        wp::adj_load(var_164, adj_164, adj_167);
        adj_127.real += adj_164;
        wp::adj_abs(var_162, adj_160, adj_161);
        wp::adj_load(var_160, adj_160, adj_162);
        adj_127.imag += adj_160;
        // adj: if (wp.abs(t3.imag) < img_tol) and (t3.real > 0) and ((t3.real < t) or (t < 0)):  <L 315>
        wp::adj_where(var_155, var_157, var_140, adj_155, adj_157, adj_140, adj_159);
        if (var_155) {
            wp::adj_copy(var_158, adj_156, adj_157);
            wp::adj_load(var_156, adj_156, adj_158);
            adj_114.real += adj_156;
            // adj: t = t2.real                                                               <L 314>
        }
        wp::adj_load(var_149, adj_149, adj_151);
        adj_114.real += adj_149;
        wp::adj_load(var_145, adj_145, adj_148);
        adj_114.real += adj_145;
        wp::adj_abs(var_143, adj_141, adj_142);
        wp::adj_load(var_141, adj_141, adj_143);
        adj_114.imag += adj_141;
        // adj: if (wp.abs(t2.imag) < img_tol) and (t2.real > 0) and ((t2.real < t) or (t < 0)):  <L 313>
        wp::adj_where(var_136, var_138, var_5, adj_136, adj_138, adj_5, adj_140);
        if (var_136) {
            wp::adj_copy(var_139, adj_137, adj_138);
            wp::adj_load(var_137, adj_137, adj_139);
            adj_101.real += adj_137;
            // adj: t = t1.real                                                               <L 312>
        }
        wp::adj_load(var_132, adj_132, adj_135);
        adj_101.real += adj_132;
        wp::adj_abs(var_130, adj_128, adj_129);
        wp::adj_load(var_128, adj_128, adj_130);
        adj_101.imag += adj_128;
        // adj: if (wp.abs(t1.imag) < img_tol) and (t1.real > 0):                             <L 311>
        adj_mul_0(var_121, var_126, adj_121, adj_126, adj_127);
        adj_Complex64_e484527b(var_125, var_28, adj_125, adj_28, adj_126);
        wp::adj_div(var_0, var_124, var_125, adj_0, adj_124, adj_125);
        wp::adj_mul(var_123, var_a, adj_123, adj_a, adj_124);
        wp::adj_float64(var_122, adj_122, adj_123);
        // adj: Complex64(__1 / (wp.float64(3.0) * a), _0),                                   <L 308>
        adj_add_0(var_117, var_120, adj_117, adj_120, adj_121);
        adj_mul_0(var_69, var_119, adj_69, adj_119, adj_120);
        adj_inverse_c_0(var_118, adj_118, adj_119);
        adj_mul_0(var_90, var_68, adj_90, adj_68, adj_118);
        adj_add_0(var_115, var_116, adj_115, adj_116, adj_117);
        adj_mul_0(var_90, var_68, adj_90, adj_68, adj_116);
        adj_Complex64_e484527b(var_b, var_28, adj_b, adj_28, adj_115);
        // adj: add(add(Complex64(b, _0), mul(u3, C)), mul(delta0, inverse_c(mul(u3, C)))),   <L 307>
        // adj: t3 = mul(                                                                     <L 306>
        adj_mul_0(var_108, var_113, adj_108, adj_113, adj_114);
        adj_Complex64_e484527b(var_112, var_28, adj_112, adj_28, adj_113);
        wp::adj_div(var_0, var_111, var_112, adj_0, adj_111, adj_112);
        wp::adj_mul(var_110, var_a, adj_110, adj_a, adj_111);
        wp::adj_float64(var_109, adj_109, adj_110);
        // adj: Complex64(__1 / (wp.float64(3.0) * a), _0),                                   <L 304>
        adj_add_0(var_104, var_107, adj_104, adj_107, adj_108);
        adj_mul_0(var_69, var_106, adj_69, adj_106, adj_107);
        adj_inverse_c_0(var_105, adj_105, adj_106);
        adj_mul_0(var_79, var_68, adj_79, adj_68, adj_105);
        adj_add_0(var_102, var_103, adj_102, adj_103, adj_104);
        adj_mul_0(var_79, var_68, adj_79, adj_68, adj_103);
        adj_Complex64_e484527b(var_b, var_28, adj_b, adj_28, adj_102);
        // adj: add(add(Complex64(b, _0), mul(u2, C)), mul(delta0, inverse_c(mul(u2, C)))),   <L 303>
        // adj: t2 = mul(                                                                     <L 302>
        adj_mul_0(var_95, var_100, adj_95, adj_100, adj_101);
        adj_Complex64_e484527b(var_99, var_28, adj_99, adj_28, adj_100);
        wp::adj_div(var_0, var_98, var_99, adj_0, adj_98, adj_99);
        wp::adj_mul(var_97, var_a, adj_97, adj_a, adj_98);
        wp::adj_float64(var_96, adj_96, adj_97);
        adj_add_0(var_92, var_94, adj_92, adj_94, adj_95);
        adj_mul_0(var_69, var_93, adj_69, adj_93, adj_94);
        adj_inverse_c_0(var_68, adj_68, adj_93);
        adj_add_0(var_91, var_68, adj_91, adj_68, adj_92);
        adj_Complex64_e484527b(var_b, var_28, adj_b, adj_28, adj_91);
        // adj: t1 = mul(add(add(Complex64(b, _0), C), mul(delta0, inverse_c(C))), Complex64(__1 / (wp.float64(3.0) * a), _0))  <L 301>
        adj_Complex64_e484527b(var_82, var_89, adj_82, adj_89, adj_90);
        wp::adj_div(var_86, var_88, var_89, adj_86, adj_88, adj_89);
        wp::adj_float64(var_87, adj_87, adj_88);
        wp::adj_neg(var_85, adj_85, adj_86);
        wp::adj_sqrt(var_84, var_85, adj_84, adj_85);
        wp::adj_float64(var_83, adj_83, adj_84);
        wp::adj_div(var_0, var_81, var_82, adj_0, adj_81, adj_82);
        wp::adj_float64(var_80, adj_80, adj_81);
        // adj: u3 = Complex64(__1 / wp.float64(2.0), -wp.sqrt(wp.float64(3.0)) / wp.float64(2.0))  <L 300>
        adj_Complex64_e484527b(var_72, var_78, adj_72, adj_78, adj_79);
        wp::adj_div(var_75, var_77, var_78, adj_75, adj_77, adj_78);
        wp::adj_float64(var_76, adj_76, adj_77);
        wp::adj_sqrt(var_74, var_75, adj_74, adj_75);
        wp::adj_float64(var_73, adj_73, adj_74);
        wp::adj_div(var_0, var_71, var_72, adj_0, adj_71, adj_72);
        wp::adj_float64(var_70, adj_70, adj_71);
        // adj: u2 = Complex64(__1 / wp.float64(2.0), wp.sqrt(wp.float64(3.0)) / wp.float64(2.0))  <L 299>
        adj_Complex64_e484527b(var_11, var_28, adj_11, adj_28, adj_69);
        // adj: delta0 = Complex64(delta0_real, _0)                                           <L 297>
        wp::adj_where(var_49, var_67, var_47, adj_49, adj_67, adj_47, adj_68);
        if (var_49) {
            adj_pow_c_0(var_62, var_66, adj_62, adj_66, adj_67);
            wp::adj_float64(var_65, adj_65, adj_66);
            wp::adj_div(var_63, var_64, var_65, adj_63, adj_64, adj_65);
            // adj: wp.float64(1.0 / 3.0),                                                    <L 294>
            adj_mul_0(var_58, var_61, adj_58, adj_61, adj_62);
            adj_Complex64_e484527b(var_60, var_28, adj_60, adj_28, adj_61);
            wp::adj_float64(var_59, adj_59, adj_60);
            // adj: Complex64(wp.float64(0.5), _0),                                           <L 292>
            adj_sub_0(var_29, var_57, adj_29, adj_57, adj_58);
            adj_sqrt_c_0(var_56, adj_56, adj_57);
            wp::adj_sub(var_50, var_55, adj_50, adj_55, adj_56);
            wp::adj_mul(var_54, var_11, adj_54, adj_11, adj_55);
            wp::adj_mul(var_53, var_11, adj_53, adj_11, adj_54);
            wp::adj_mul(var_52, var_11, adj_52, adj_11, adj_53);
            wp::adj_float64(var_51, adj_51, adj_52);
            wp::adj_mul(var_27, var_27, adj_27, adj_27, adj_50);
            // adj: sqrt_c(delta1_real * delta1_real - wp.float64(4.0) * delta0_real * delta0_real * delta0_real),  <L 290>
            // adj: delta1,                                                                   <L 289>
            // adj: sub(                                                                      <L 288>
            // adj: mul(                                                                      <L 287>
            // adj: C = pow_c(                                                                <L 286>
        }
        adj_magnitude_0(var_47, adj_47, adj_48);
        // adj: if magnitude(C) == _0:                                                        <L 285>
        adj_pow_c_0(var_42, var_46, adj_42, adj_46, adj_47);
        wp::adj_float64(var_45, adj_45, adj_46);
        wp::adj_div(var_43, var_44, var_45, adj_43, adj_44, adj_45);
        // adj: wp.float64(1.0 / 3.0),                                                        <L 283>
        adj_mul_0(var_38, var_41, adj_38, adj_41, adj_42);
        adj_Complex64_e484527b(var_40, var_28, adj_40, adj_28, adj_41);
        wp::adj_float64(var_39, adj_39, adj_40);
        // adj: Complex64(wp.float64(0.5), _0),                                               <L 281>
        adj_add_0(var_29, var_37, adj_29, adj_37, adj_38);
        adj_sqrt_c_0(var_36, adj_36, adj_37);
        wp::adj_sub(var_30, var_35, adj_30, adj_35, adj_36);
        wp::adj_mul(var_34, var_11, adj_34, adj_11, adj_35);
        wp::adj_mul(var_33, var_11, adj_33, adj_11, adj_34);
        wp::adj_mul(var_32, var_11, adj_32, adj_11, adj_33);
        wp::adj_float64(var_31, adj_31, adj_32);
        wp::adj_mul(var_27, var_27, adj_27, adj_27, adj_30);
        // adj: sqrt_c(delta1_real * delta1_real - wp.float64(4.0) * delta0_real * delta0_real * delta0_real),  <L 279>
        // adj: delta1,                                                                       <L 278>
        // adj: add(                                                                          <L 277>
        // adj: mul(                                                                          <L 276>
        // adj: C = pow_c(                                                                    <L 275>
        adj_Complex64_e484527b(var_27, var_28, adj_27, adj_28, adj_29);
        // adj: delta1 = Complex64(delta1_real, _0)                                           <L 274>
        wp::adj_add(var_21, var_26, adj_21, adj_26, adj_27);
        wp::adj_mul(var_25, var_d, adj_25, adj_d, adj_26);
        wp::adj_mul(var_24, var_a, adj_24, adj_a, adj_25);
        wp::adj_mul(var_23, var_a, adj_23, adj_a, adj_24);
        wp::adj_float64(var_22, adj_22, adj_23);
        wp::adj_sub(var_15, var_20, adj_15, adj_20, adj_21);
        wp::adj_mul(var_19, var_c, adj_19, adj_c, adj_20);
        wp::adj_mul(var_18, var_b, adj_18, adj_b, adj_19);
        wp::adj_mul(var_17, var_a, adj_17, adj_a, adj_18);
        wp::adj_float64(var_16, adj_16, adj_17);
        wp::adj_mul(var_14, var_b, adj_14, adj_b, adj_15);
        wp::adj_mul(var_13, var_b, adj_13, adj_b, adj_14);
        wp::adj_mul(var_12, var_b, adj_12, adj_b, adj_13);
        // adj: delta1_real = _2 * b * b * b - wp.float64(9.0) * a * b * c + wp.float64(27.0) * a * a * d  <L 273>
        wp::adj_sub(var_6, var_10, adj_6, adj_10, adj_11);
        wp::adj_mul(var_9, var_c, adj_9, adj_c, adj_10);
        wp::adj_mul(var_8, var_a, adj_8, adj_a, adj_9);
        wp::adj_float64(var_7, adj_7, adj_8);
        wp::adj_mul(var_b, var_b, adj_b, adj_b, adj_6);
        // adj: delta0_real = b * b - wp.float64(3.0) * a * c                                 <L 272>
    }
    wp::adj_where(var_3, var_4, var_1, adj_3, adj_4, adj_1, adj_5);
    if (var_3) {
        adj_get_smallest_positive_real_quad_root_0(var_b, var_c, var_d, var_cubic_coef_tol, adj_b, adj_c, adj_d, adj_cubic_coef_tol, adj_4);
        // adj: t = get_smallest_positive_real_quad_root(b, c, d, cubic_coef_tol)             <L 270>
    }
    wp::adj_abs(var_a, adj_a, adj_2);
    // adj: if wp.abs(a) <= cubic_coef_tol:                                                   <L 269>
    wp::adj_copy(var_0, adj_0, adj_1);
    // adj: t = __1                                                                           <L 268>
    // adj: def get_smallest_positive_real_cubic_root(                                        <L 265>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/collision_kernels.py:597
static CUDA_CALLABLE bool subset2_0(
    wp::vec_t<2,wp::int32> var_s,
    wp::int32 var_i)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    wp::int32 var_1;
    bool var_2;
    const wp::int32 var_3 = 1;
    wp::int32 var_4;
    bool var_5;
    bool var_6;
    const bool var_7 = true;
    const bool var_8 = false;
    //---------
    // forward
    // def subset2(s: wp.vec2i, i: wp.int32):                                                 <L 598>
    // if i == s[0] or i == s[1]:                                                             <L 599>
    var_1 = wp::extract(var_s, var_0);
    var_2 = (var_i == var_1);
    var_4 = wp::extract(var_s, var_3);
    var_5 = (var_i == var_4);
    var_6 = var_2 || var_5;
    if (var_6) {
        // return True                                                                        <L 600>
        return var_7;
    }
    // return False                                                                           <L 601>
    return var_8;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/collision_kernels.py:597
static CUDA_CALLABLE void adj_subset2_0(
    wp::vec_t<2,wp::int32> var_s,
    wp::int32 var_i,
    wp::vec_t<2,wp::int32> & adj_s,
    wp::int32 & adj_i,
    bool & adj_ret)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    wp::int32 var_1;
    bool var_2;
    const wp::int32 var_3 = 1;
    wp::int32 var_4;
    bool var_5;
    bool var_6;
    const bool var_7 = true;
    const bool var_8 = false;
    //---------
    // dual vars
    wp::int32 adj_0 = {};
    wp::int32 adj_1 = {};
    bool adj_2 = {};
    wp::int32 adj_3 = {};
    wp::int32 adj_4 = {};
    bool adj_5 = {};
    bool adj_6 = {};
    bool adj_7 = {};
    bool adj_8 = {};
    //---------
    // forward
    // def subset2(s: wp.vec2i, i: wp.int32):                                                 <L 598>
    // if i == s[0] or i == s[1]:                                                             <L 599>
    var_1 = wp::extract(var_s, var_0);
    var_2 = (var_i == var_1);
    var_4 = wp::extract(var_s, var_3);
    var_5 = (var_i == var_4);
    var_6 = var_2 || var_5;
    if (var_6) {
        // return True                                                                        <L 600>
        goto label0;
    }
    // return False                                                                           <L 601>
    goto label1;
    //---------
    // reverse
    label1:;
    adj_8 += adj_ret;
    // adj: return False                                                                      <L 601>
    if (var_6) {
        label0:;
        adj_7 += adj_ret;
        // adj: return True                                                                   <L 600>
    }
    wp::adj_extract(var_s, var_3, adj_s, adj_3, adj_4);
    wp::adj_extract(var_s, var_0, adj_s, adj_0, adj_1);
    // adj: if i == s[0] or i == s[1]:                                                        <L 599>
    // adj: def subset2(s: wp.vec2i, i: wp.int32):                                            <L 598>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/distance_type.py:4
static CUDA_CALLABLE void solveLdlt2D_0(
    wp::float64 var_A00,
    wp::float64 var_A01,
    wp::float64 var_A11,
    wp::float64 var_b0,
    wp::float64 var_b1,
    wp::float64 & ret_0,
    wp::float64 & ret_1)
{
    //---------
    // primal vars
    wp::float64 var_0;
    wp::float64 var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    wp::float64 var_7;
    wp::float64 var_8;
    wp::float64 var_9;
    wp::float64 var_10;
    wp::float64 var_11;
    wp::float64 var_12;
    //---------
    // forward
    // def solveLdlt2D(A00: wp.float64, A01: wp.float64, A11: wp.float64, b0: wp.float64, b1: wp.float64):       <L 5>
    // D00 = A00                                                                              <L 6>
    var_0 = wp::copy(var_A00);
    // L01 = A01 / D00                                                                        <L 7>
    var_1 = wp::div(var_A01, var_0);
    // D11 = A11 - L01 * L01 * D00                                                            <L 8>
    var_2 = wp::mul(var_1, var_1);
    var_3 = wp::mul(var_2, var_0);
    var_4 = wp::sub(var_A11, var_3);
    // y0 = b0                                                                                <L 10>
    var_5 = wp::copy(var_b0);
    // y1 = b1 - L01 * y0                                                                     <L 11>
    var_6 = wp::mul(var_1, var_5);
    var_7 = wp::sub(var_b1, var_6);
    // x1 = y1 / D11                                                                          <L 13>
    var_8 = wp::div(var_7, var_4);
    // x0 = (y0 - D00 * L01 * x1) / D00                                                       <L 14>
    var_9 = wp::mul(var_0, var_1);
    var_10 = wp::mul(var_9, var_8);
    var_11 = wp::sub(var_5, var_10);
    var_12 = wp::div(var_11, var_0);
    // return x0, x1                                                                          <L 15>
    ret_0 = var_12;
    ret_1 = var_8;
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/distance_type.py:4
static CUDA_CALLABLE void adj_solveLdlt2D_0(
    wp::float64 var_A00,
    wp::float64 var_A01,
    wp::float64 var_A11,
    wp::float64 var_b0,
    wp::float64 var_b1,
    wp::float64 & ret_0,
    wp::float64 & ret_1,
    wp::float64 & adj_A00,
    wp::float64 & adj_A01,
    wp::float64 & adj_A11,
    wp::float64 & adj_b0,
    wp::float64 & adj_b1,
    wp::float64 & adj_ret_0,
    wp::float64 & adj_ret_1)
{
    //---------
    // primal vars
    wp::float64 var_0;
    wp::float64 var_1;
    wp::float64 var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    wp::float64 var_7;
    wp::float64 var_8;
    wp::float64 var_9;
    wp::float64 var_10;
    wp::float64 var_11;
    wp::float64 var_12;
    //---------
    // dual vars
    wp::float64 adj_0 = {};
    wp::float64 adj_1 = {};
    wp::float64 adj_2 = {};
    wp::float64 adj_3 = {};
    wp::float64 adj_4 = {};
    wp::float64 adj_5 = {};
    wp::float64 adj_6 = {};
    wp::float64 adj_7 = {};
    wp::float64 adj_8 = {};
    wp::float64 adj_9 = {};
    wp::float64 adj_10 = {};
    wp::float64 adj_11 = {};
    wp::float64 adj_12 = {};
    //---------
    // forward
    // def solveLdlt2D(A00: wp.float64, A01: wp.float64, A11: wp.float64, b0: wp.float64, b1: wp.float64):       <L 5>
    // D00 = A00                                                                              <L 6>
    var_0 = wp::copy(var_A00);
    // L01 = A01 / D00                                                                        <L 7>
    var_1 = wp::div(var_A01, var_0);
    // D11 = A11 - L01 * L01 * D00                                                            <L 8>
    var_2 = wp::mul(var_1, var_1);
    var_3 = wp::mul(var_2, var_0);
    var_4 = wp::sub(var_A11, var_3);
    // y0 = b0                                                                                <L 10>
    var_5 = wp::copy(var_b0);
    // y1 = b1 - L01 * y0                                                                     <L 11>
    var_6 = wp::mul(var_1, var_5);
    var_7 = wp::sub(var_b1, var_6);
    // x1 = y1 / D11                                                                          <L 13>
    var_8 = wp::div(var_7, var_4);
    // x0 = (y0 - D00 * L01 * x1) / D00                                                       <L 14>
    var_9 = wp::mul(var_0, var_1);
    var_10 = wp::mul(var_9, var_8);
    var_11 = wp::sub(var_5, var_10);
    var_12 = wp::div(var_11, var_0);
    // return x0, x1                                                                          <L 15>
    ret_0 = var_12;
    ret_1 = var_8;
    goto label0;
    //---------
    // reverse
    label0:;
    adj_8 += adj_ret_1;
    adj_12 += adj_ret_0;
    // adj: return x0, x1                                                                     <L 15>
    wp::adj_div(var_11, var_0, var_12, adj_11, adj_0, adj_12);
    wp::adj_sub(var_5, var_10, adj_5, adj_10, adj_11);
    wp::adj_mul(var_9, var_8, adj_9, adj_8, adj_10);
    wp::adj_mul(var_0, var_1, adj_0, adj_1, adj_9);
    // adj: x0 = (y0 - D00 * L01 * x1) / D00                                                  <L 14>
    wp::adj_div(var_7, var_4, var_8, adj_7, adj_4, adj_8);
    // adj: x1 = y1 / D11                                                                     <L 13>
    wp::adj_sub(var_b1, var_6, adj_b1, adj_6, adj_7);
    wp::adj_mul(var_1, var_5, adj_1, adj_5, adj_6);
    // adj: y1 = b1 - L01 * y0                                                                <L 11>
    wp::adj_copy(var_b0, adj_b0, adj_5);
    // adj: y0 = b0                                                                           <L 10>
    wp::adj_sub(var_A11, var_3, adj_A11, adj_3, adj_4);
    wp::adj_mul(var_2, var_0, adj_2, adj_0, adj_3);
    wp::adj_mul(var_1, var_1, adj_1, adj_1, adj_2);
    // adj: D11 = A11 - L01 * L01 * D00                                                       <L 8>
    wp::adj_div(var_A01, var_0, var_1, adj_A01, adj_0, adj_1);
    // adj: L01 = A01 / D00                                                                   <L 7>
    wp::adj_copy(var_A00, adj_A00, adj_0);
    // adj: D00 = A00                                                                         <L 6>
    // adj: def solveLdlt2D(A00: wp.float64, A01: wp.float64, A11: wp.float64, b0: wp.float64, b1: wp.float64):  <L 5>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/distance_type.py:18
static CUDA_CALLABLE wp::int32 point_triangle_distance_type_0(
    wp::vec_t<3,wp::float64> var_p,
    wp::vec_t<3,wp::float64> var_t0,
    wp::vec_t<3,wp::float64> var_t1,
    wp::vec_t<3,wp::float64> var_t2)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::vec_t<3,wp::float64> var_1;
    wp::vec_t<3,wp::float64> var_2;
    wp::vec_t<3,wp::float64> var_3;
    wp::vec_t<4,wp::float64> var_4;
    wp::vec_t<2,wp::float64> var_5;
    const wp::int32 var_6 = 0;
    wp::float64 var_7;
    const wp::int32 var_8 = 0;
    wp::float64 var_9;
    wp::float64 var_10;
    const wp::int32 var_11 = 1;
    wp::float64 var_12;
    const wp::int32 var_13 = 1;
    wp::float64 var_14;
    wp::float64 var_15;
    wp::float64 var_16;
    const wp::int32 var_17 = 2;
    wp::float64 var_18;
    const wp::int32 var_19 = 2;
    wp::float64 var_20;
    wp::float64 var_21;
    wp::float64 var_22;
    const wp::int32 var_23 = 0;
    const wp::int32 var_24 = 0;
    wp::float64 var_25;
    const wp::int32 var_26 = 0;
    wp::float64 var_27;
    wp::float64 var_28;
    const wp::int32 var_29 = 1;
    wp::float64 var_30;
    const wp::int32 var_31 = 1;
    wp::float64 var_32;
    wp::float64 var_33;
    wp::float64 var_34;
    const wp::int32 var_35 = 2;
    wp::float64 var_36;
    const wp::int32 var_37 = 2;
    wp::float64 var_38;
    wp::float64 var_39;
    wp::float64 var_40;
    const wp::int32 var_41 = 2;
    const wp::int32 var_42 = 2;
    wp::float64 var_43;
    const wp::int32 var_44 = 1;
    const wp::int32 var_45 = 0;
    wp::float64 var_46;
    const wp::int32 var_47 = 0;
    wp::float64 var_48;
    wp::float64 var_49;
    const wp::int32 var_50 = 1;
    wp::float64 var_51;
    const wp::int32 var_52 = 1;
    wp::float64 var_53;
    wp::float64 var_54;
    wp::float64 var_55;
    const wp::int32 var_56 = 2;
    wp::float64 var_57;
    const wp::int32 var_58 = 2;
    wp::float64 var_59;
    wp::float64 var_60;
    wp::float64 var_61;
    const wp::int32 var_62 = 3;
    wp::vec_t<3,wp::float64> var_63;
    wp::float64 var_64;
    const wp::int32 var_65 = 0;
    wp::float64 var_66;
    const wp::int32 var_67 = 1;
    const wp::int32 var_68 = 0;
    wp::float64 var_69;
    const wp::int32 var_70 = 1;
    wp::float64 var_71;
    const wp::int32 var_72 = 3;
    wp::float64 var_73;
    const wp::int32 var_74 = 0;
    wp::float64 var_75;
    const wp::int32 var_76 = 1;
    wp::float64 var_77;
    wp::float64 var_78;
    wp::float64 var_79;
    const wp::float32 var_80 = 0.0;
    wp::float64 var_81;
    bool var_82;
    const wp::float32 var_83 = 1.0;
    wp::float64 var_84;
    bool var_85;
    const wp::float32 var_86 = 0.0;
    wp::float64 var_87;
    bool var_88;
    bool var_89;
    const wp::int32 var_90 = 3;
    wp::vec_t<3,wp::float64> var_91;
    wp::vec_t<3,wp::float64> var_92;
    const wp::int32 var_93 = 0;
    wp::float64 var_94;
    const wp::int32 var_95 = 0;
    wp::float64 var_96;
    wp::float64 var_97;
    const wp::int32 var_98 = 1;
    wp::float64 var_99;
    const wp::int32 var_100 = 1;
    wp::float64 var_101;
    wp::float64 var_102;
    wp::float64 var_103;
    const wp::int32 var_104 = 2;
    wp::float64 var_105;
    const wp::int32 var_106 = 2;
    wp::float64 var_107;
    wp::float64 var_108;
    wp::float64 var_109;
    const wp::int32 var_110 = 0;
    const wp::int32 var_111 = 0;
    wp::float64 var_112;
    const wp::int32 var_113 = 0;
    wp::float64 var_114;
    wp::float64 var_115;
    const wp::int32 var_116 = 1;
    wp::float64 var_117;
    const wp::int32 var_118 = 1;
    wp::float64 var_119;
    wp::float64 var_120;
    wp::float64 var_121;
    const wp::int32 var_122 = 2;
    wp::float64 var_123;
    const wp::int32 var_124 = 2;
    wp::float64 var_125;
    wp::float64 var_126;
    wp::float64 var_127;
    const wp::int32 var_128 = 2;
    const wp::int32 var_129 = 2;
    wp::float64 var_130;
    const wp::int32 var_131 = 1;
    const wp::int32 var_132 = 0;
    wp::float64 var_133;
    const wp::int32 var_134 = 0;
    wp::float64 var_135;
    wp::float64 var_136;
    const wp::int32 var_137 = 1;
    wp::float64 var_138;
    const wp::int32 var_139 = 1;
    wp::float64 var_140;
    wp::float64 var_141;
    wp::float64 var_142;
    const wp::int32 var_143 = 2;
    wp::float64 var_144;
    const wp::int32 var_145 = 2;
    wp::float64 var_146;
    wp::float64 var_147;
    wp::float64 var_148;
    const wp::int32 var_149 = 3;
    wp::vec_t<3,wp::float64> var_150;
    wp::float64 var_151;
    const wp::int32 var_152 = 0;
    wp::float64 var_153;
    const wp::int32 var_154 = 1;
    const wp::int32 var_155 = 0;
    wp::float64 var_156;
    const wp::int32 var_157 = 1;
    wp::float64 var_158;
    const wp::int32 var_159 = 3;
    wp::float64 var_160;
    const wp::int32 var_161 = 0;
    wp::float64 var_162;
    const wp::int32 var_163 = 1;
    wp::float64 var_164;
    wp::float64 var_165;
    wp::float64 var_166;
    const wp::float32 var_167 = 0.0;
    wp::float64 var_168;
    bool var_169;
    const wp::float32 var_170 = 1.0;
    wp::float64 var_171;
    bool var_172;
    const wp::float32 var_173 = 0.0;
    wp::float64 var_174;
    bool var_175;
    bool var_176;
    const wp::int32 var_177 = 4;
    wp::vec_t<3,wp::float64> var_178;
    wp::vec_t<3,wp::float64> var_179;
    const wp::int32 var_180 = 0;
    wp::float64 var_181;
    const wp::int32 var_182 = 0;
    wp::float64 var_183;
    wp::float64 var_184;
    const wp::int32 var_185 = 1;
    wp::float64 var_186;
    const wp::int32 var_187 = 1;
    wp::float64 var_188;
    wp::float64 var_189;
    wp::float64 var_190;
    const wp::int32 var_191 = 2;
    wp::float64 var_192;
    const wp::int32 var_193 = 2;
    wp::float64 var_194;
    wp::float64 var_195;
    wp::float64 var_196;
    const wp::int32 var_197 = 0;
    const wp::int32 var_198 = 0;
    wp::float64 var_199;
    const wp::int32 var_200 = 0;
    wp::float64 var_201;
    wp::float64 var_202;
    const wp::int32 var_203 = 1;
    wp::float64 var_204;
    const wp::int32 var_205 = 1;
    wp::float64 var_206;
    wp::float64 var_207;
    wp::float64 var_208;
    const wp::int32 var_209 = 2;
    wp::float64 var_210;
    const wp::int32 var_211 = 2;
    wp::float64 var_212;
    wp::float64 var_213;
    wp::float64 var_214;
    const wp::int32 var_215 = 2;
    const wp::int32 var_216 = 2;
    wp::float64 var_217;
    const wp::int32 var_218 = 1;
    const wp::int32 var_219 = 0;
    wp::float64 var_220;
    const wp::int32 var_221 = 0;
    wp::float64 var_222;
    wp::float64 var_223;
    const wp::int32 var_224 = 1;
    wp::float64 var_225;
    const wp::int32 var_226 = 1;
    wp::float64 var_227;
    wp::float64 var_228;
    wp::float64 var_229;
    const wp::int32 var_230 = 2;
    wp::float64 var_231;
    const wp::int32 var_232 = 2;
    wp::float64 var_233;
    wp::float64 var_234;
    wp::float64 var_235;
    const wp::int32 var_236 = 3;
    wp::vec_t<3,wp::float64> var_237;
    wp::float64 var_238;
    const wp::int32 var_239 = 0;
    wp::float64 var_240;
    const wp::int32 var_241 = 1;
    const wp::int32 var_242 = 0;
    wp::float64 var_243;
    const wp::int32 var_244 = 1;
    wp::float64 var_245;
    const wp::int32 var_246 = 3;
    wp::float64 var_247;
    const wp::int32 var_248 = 0;
    wp::float64 var_249;
    const wp::int32 var_250 = 1;
    wp::float64 var_251;
    wp::float64 var_252;
    wp::float64 var_253;
    const wp::float32 var_254 = 0.0;
    wp::float64 var_255;
    bool var_256;
    const wp::float32 var_257 = 1.0;
    wp::float64 var_258;
    bool var_259;
    const wp::float32 var_260 = 0.0;
    wp::float64 var_261;
    bool var_262;
    bool var_263;
    const wp::int32 var_264 = 5;
    const wp::float32 var_265 = 0.0;
    wp::float64 var_266;
    bool var_267;
    const wp::float32 var_268 = 1.0;
    wp::float64 var_269;
    bool var_270;
    bool var_271;
    const wp::int32 var_272 = 0;
    const wp::float32 var_273 = 0.0;
    wp::float64 var_274;
    bool var_275;
    const wp::float32 var_276 = 1.0;
    wp::float64 var_277;
    bool var_278;
    bool var_279;
    const wp::int32 var_280 = 1;
    const wp::float32 var_281 = 0.0;
    wp::float64 var_282;
    bool var_283;
    const wp::float32 var_284 = 1.0;
    wp::float64 var_285;
    bool var_286;
    bool var_287;
    const wp::int32 var_288 = 2;
    const wp::int32 var_289 = 6;
    wp::vec_t<3,wp::float64> var_290;
    wp::vec_t<3,wp::float64> var_291;
    wp::vec_t<3,wp::float64> var_292;
    wp::vec_t<3,wp::float64> var_293;
    wp::vec_t<3,wp::float64> var_294;
    wp::vec_t<3,wp::float64> var_295;
    //---------
    // forward
    // def point_triangle_distance_type(p: wp.vec3d, t0: wp.vec3d, t1: wp.vec3d, t2: wp.vec3d) -> int:       <L 19>
    // basis_row0 = t1 - t0                                                                   <L 20>
    var_0 = wp::sub(var_t1, var_t0);
    // basis_row1 = t2 - t0                                                                   <L 21>
    var_1 = wp::sub(var_t2, var_t0);
    // nVec = wp.cross(basis_row0, basis_row1)                                                <L 22>
    var_2 = wp::cross(var_0, var_1);
    // basis_row1 = wp.cross(basis_row0, nVec)                                                <L 23>
    var_3 = wp::cross(var_0, var_2);
    // sys = wp.vec4d()                                                                       <L 25>
    var_4 = wp::vec_t<4,wp::float64>();
    // rhs = wp.vec2d()                                                                       <L 26>
    var_5 = wp::vec_t<2,wp::float64>();
    // sys[0] = basis_row0[0] * basis_row0[0] + basis_row0[1] * basis_row0[1] + basis_row0[2] * basis_row0[2]       <L 27>
    var_7 = wp::extract(var_0, var_6);
    var_9 = wp::extract(var_0, var_8);
    var_10 = wp::mul(var_7, var_9);
    var_12 = wp::extract(var_0, var_11);
    var_14 = wp::extract(var_0, var_13);
    var_15 = wp::mul(var_12, var_14);
    var_16 = wp::add(var_10, var_15);
    var_18 = wp::extract(var_0, var_17);
    var_20 = wp::extract(var_0, var_19);
    var_21 = wp::mul(var_18, var_20);
    var_22 = wp::add(var_16, var_21);
    wp::assign_inplace(var_4, var_23, var_22);
    // sys[2] = basis_row0[0] * basis_row1[0] + basis_row0[1] * basis_row1[1] + basis_row0[2] * basis_row1[2]       <L 28>
    var_25 = wp::extract(var_0, var_24);
    var_27 = wp::extract(var_3, var_26);
    var_28 = wp::mul(var_25, var_27);
    var_30 = wp::extract(var_0, var_29);
    var_32 = wp::extract(var_3, var_31);
    var_33 = wp::mul(var_30, var_32);
    var_34 = wp::add(var_28, var_33);
    var_36 = wp::extract(var_0, var_35);
    var_38 = wp::extract(var_3, var_37);
    var_39 = wp::mul(var_36, var_38);
    var_40 = wp::add(var_34, var_39);
    wp::assign_inplace(var_4, var_41, var_40);
    // sys[1] = sys[2]                                                                        <L 29>
    var_43 = wp::extract(var_4, var_42);
    wp::assign_inplace(var_4, var_44, var_43);
    // sys[3] = basis_row1[0] * basis_row1[0] + basis_row1[1] * basis_row1[1] + basis_row1[2] * basis_row1[2]       <L 30>
    var_46 = wp::extract(var_3, var_45);
    var_48 = wp::extract(var_3, var_47);
    var_49 = wp::mul(var_46, var_48);
    var_51 = wp::extract(var_3, var_50);
    var_53 = wp::extract(var_3, var_52);
    var_54 = wp::mul(var_51, var_53);
    var_55 = wp::add(var_49, var_54);
    var_57 = wp::extract(var_3, var_56);
    var_59 = wp::extract(var_3, var_58);
    var_60 = wp::mul(var_57, var_59);
    var_61 = wp::add(var_55, var_60);
    wp::assign_inplace(var_4, var_62, var_61);
    // b = p - t0                                                                             <L 32>
    var_63 = wp::sub(var_p, var_t0);
    // rhs[0] = wp.dot(basis_row0, b)                                                         <L 33>
    var_64 = wp::dot(var_0, var_63);
    wp::assign_inplace(var_5, var_65, var_64);
    // rhs[1] = wp.dot(basis_row1, b)                                                         <L 34>
    var_66 = wp::dot(var_3, var_63);
    wp::assign_inplace(var_5, var_67, var_66);
    // param_col00, param_col01 = solveLdlt2D(sys[0], sys[1], sys[3], rhs[0], rhs[1])         <L 35>
    var_69 = wp::extract(var_4, var_68);
    var_71 = wp::extract(var_4, var_70);
    var_73 = wp::extract(var_4, var_72);
    var_75 = wp::extract(var_5, var_74);
    var_77 = wp::extract(var_5, var_76);
    solveLdlt2D_0(var_69, var_71, var_73, var_75, var_77, var_78, var_79);
    // if param_col00 > wp.float64(0.0) and param_col00 < wp.float64(1.0) and param_col01 >= wp.float64(0.0):       <L 36>
    var_81 = wp::float64(var_80);
    var_82 = (var_78 > var_81);
    var_84 = wp::float64(var_83);
    var_85 = (var_78 < var_84);
    var_87 = wp::float64(var_86);
    var_88 = (var_79 >= var_87);
    var_89 = var_82 && var_85 && var_88;
    if (var_89) {
        // return 3  # PE t0t1                                                                <L 37>
        return var_90;
    }
    if (!var_89) {
        // basis_row0 = t2 - t1                                                               <L 39>
        var_91 = wp::sub(var_t2, var_t1);
        // basis_row1 = wp.cross(basis_row0, nVec)                                            <L 40>
        var_92 = wp::cross(var_91, var_2);
        // sys[0] = basis_row0[0] * basis_row0[0] + basis_row0[1] * basis_row0[1] + basis_row0[2] * basis_row0[2]       <L 42>
        var_94 = wp::extract(var_91, var_93);
        var_96 = wp::extract(var_91, var_95);
        var_97 = wp::mul(var_94, var_96);
        var_99 = wp::extract(var_91, var_98);
        var_101 = wp::extract(var_91, var_100);
        var_102 = wp::mul(var_99, var_101);
        var_103 = wp::add(var_97, var_102);
        var_105 = wp::extract(var_91, var_104);
        var_107 = wp::extract(var_91, var_106);
        var_108 = wp::mul(var_105, var_107);
        var_109 = wp::add(var_103, var_108);
        wp::assign_inplace(var_4, var_110, var_109);
        // sys[2] = basis_row0[0] * basis_row1[0] + basis_row0[1] * basis_row1[1] + basis_row0[2] * basis_row1[2]       <L 43>
        var_112 = wp::extract(var_91, var_111);
        var_114 = wp::extract(var_92, var_113);
        var_115 = wp::mul(var_112, var_114);
        var_117 = wp::extract(var_91, var_116);
        var_119 = wp::extract(var_92, var_118);
        var_120 = wp::mul(var_117, var_119);
        var_121 = wp::add(var_115, var_120);
        var_123 = wp::extract(var_91, var_122);
        var_125 = wp::extract(var_92, var_124);
        var_126 = wp::mul(var_123, var_125);
        var_127 = wp::add(var_121, var_126);
        wp::assign_inplace(var_4, var_128, var_127);
        // sys[1] = sys[2]                                                                    <L 44>
        var_130 = wp::extract(var_4, var_129);
        wp::assign_inplace(var_4, var_131, var_130);
        // sys[3] = basis_row1[0] * basis_row1[0] + basis_row1[1] * basis_row1[1] + basis_row1[2] * basis_row1[2]       <L 45>
        var_133 = wp::extract(var_92, var_132);
        var_135 = wp::extract(var_92, var_134);
        var_136 = wp::mul(var_133, var_135);
        var_138 = wp::extract(var_92, var_137);
        var_140 = wp::extract(var_92, var_139);
        var_141 = wp::mul(var_138, var_140);
        var_142 = wp::add(var_136, var_141);
        var_144 = wp::extract(var_92, var_143);
        var_146 = wp::extract(var_92, var_145);
        var_147 = wp::mul(var_144, var_146);
        var_148 = wp::add(var_142, var_147);
        wp::assign_inplace(var_4, var_149, var_148);
        // b = p - t1                                                                         <L 46>
        var_150 = wp::sub(var_p, var_t1);
        // rhs[0] = wp.dot(basis_row0, b)                                                     <L 47>
        var_151 = wp::dot(var_91, var_150);
        wp::assign_inplace(var_5, var_152, var_151);
        // rhs[1] = wp.dot(basis_row1, b)                                                     <L 48>
        var_153 = wp::dot(var_92, var_150);
        wp::assign_inplace(var_5, var_154, var_153);
        // param_col10, param_col11 = solveLdlt2D(sys[0], sys[1], sys[3], rhs[0], rhs[1])       <L 49>
        var_156 = wp::extract(var_4, var_155);
        var_158 = wp::extract(var_4, var_157);
        var_160 = wp::extract(var_4, var_159);
        var_162 = wp::extract(var_5, var_161);
        var_164 = wp::extract(var_5, var_163);
        solveLdlt2D_0(var_156, var_158, var_160, var_162, var_164, var_165, var_166);
        // if param_col10 > wp.float64(0.0) and param_col10 < wp.float64(1.0) and param_col11 >= wp.float64(0.0):       <L 50>
        var_168 = wp::float64(var_167);
        var_169 = (var_165 > var_168);
        var_171 = wp::float64(var_170);
        var_172 = (var_165 < var_171);
        var_174 = wp::float64(var_173);
        var_175 = (var_166 >= var_174);
        var_176 = var_169 && var_172 && var_175;
        if (var_176) {
            // return 4  # PE t1t2                                                            <L 51>
            return var_177;
        }
        if (!var_176) {
            // basis_row0 = t0 - t2                                                           <L 53>
            var_178 = wp::sub(var_t0, var_t2);
            // basis_row1 = wp.cross(basis_row0, nVec)                                        <L 54>
            var_179 = wp::cross(var_178, var_2);
            // sys[0] = basis_row0[0] * basis_row0[0] + basis_row0[1] * basis_row0[1] + basis_row0[2] * basis_row0[2]       <L 55>
            var_181 = wp::extract(var_178, var_180);
            var_183 = wp::extract(var_178, var_182);
            var_184 = wp::mul(var_181, var_183);
            var_186 = wp::extract(var_178, var_185);
            var_188 = wp::extract(var_178, var_187);
            var_189 = wp::mul(var_186, var_188);
            var_190 = wp::add(var_184, var_189);
            var_192 = wp::extract(var_178, var_191);
            var_194 = wp::extract(var_178, var_193);
            var_195 = wp::mul(var_192, var_194);
            var_196 = wp::add(var_190, var_195);
            wp::assign_inplace(var_4, var_197, var_196);
            // sys[2] = basis_row0[0] * basis_row1[0] + basis_row0[1] * basis_row1[1] + basis_row0[2] * basis_row1[2]       <L 56>
            var_199 = wp::extract(var_178, var_198);
            var_201 = wp::extract(var_179, var_200);
            var_202 = wp::mul(var_199, var_201);
            var_204 = wp::extract(var_178, var_203);
            var_206 = wp::extract(var_179, var_205);
            var_207 = wp::mul(var_204, var_206);
            var_208 = wp::add(var_202, var_207);
            var_210 = wp::extract(var_178, var_209);
            var_212 = wp::extract(var_179, var_211);
            var_213 = wp::mul(var_210, var_212);
            var_214 = wp::add(var_208, var_213);
            wp::assign_inplace(var_4, var_215, var_214);
            // sys[1] = sys[2]                                                                <L 57>
            var_217 = wp::extract(var_4, var_216);
            wp::assign_inplace(var_4, var_218, var_217);
            // sys[3] = basis_row1[0] * basis_row1[0] + basis_row1[1] * basis_row1[1] + basis_row1[2] * basis_row1[2]       <L 58>
            var_220 = wp::extract(var_179, var_219);
            var_222 = wp::extract(var_179, var_221);
            var_223 = wp::mul(var_220, var_222);
            var_225 = wp::extract(var_179, var_224);
            var_227 = wp::extract(var_179, var_226);
            var_228 = wp::mul(var_225, var_227);
            var_229 = wp::add(var_223, var_228);
            var_231 = wp::extract(var_179, var_230);
            var_233 = wp::extract(var_179, var_232);
            var_234 = wp::mul(var_231, var_233);
            var_235 = wp::add(var_229, var_234);
            wp::assign_inplace(var_4, var_236, var_235);
            // b = p - t2                                                                     <L 59>
            var_237 = wp::sub(var_p, var_t2);
            // rhs[0] = wp.dot(basis_row0, b)                                                 <L 60>
            var_238 = wp::dot(var_178, var_237);
            wp::assign_inplace(var_5, var_239, var_238);
            // rhs[1] = wp.dot(basis_row1, b)                                                 <L 61>
            var_240 = wp::dot(var_179, var_237);
            wp::assign_inplace(var_5, var_241, var_240);
            // param_col20, param_col21 = solveLdlt2D(sys[0], sys[1], sys[3], rhs[0], rhs[1])       <L 62>
            var_243 = wp::extract(var_4, var_242);
            var_245 = wp::extract(var_4, var_244);
            var_247 = wp::extract(var_4, var_246);
            var_249 = wp::extract(var_5, var_248);
            var_251 = wp::extract(var_5, var_250);
            solveLdlt2D_0(var_243, var_245, var_247, var_249, var_251, var_252, var_253);
            // if param_col20 > wp.float64(0.0) and param_col20 < wp.float64(1.0) and param_col21 >= wp.float64(0.0):       <L 64>
            var_255 = wp::float64(var_254);
            var_256 = (var_252 > var_255);
            var_258 = wp::float64(var_257);
            var_259 = (var_252 < var_258);
            var_261 = wp::float64(var_260);
            var_262 = (var_253 >= var_261);
            var_263 = var_256 && var_259 && var_262;
            if (var_263) {
                // return 5  # PE t2t0                                                        <L 65>
                return var_264;
            }
            if (!var_263) {
                // if param_col00 <= wp.float64(0.0) and param_col20 >= wp.float64(1.0):       <L 67>
                var_266 = wp::float64(var_265);
                var_267 = (var_78 <= var_266);
                var_269 = wp::float64(var_268);
                var_270 = (var_252 >= var_269);
                var_271 = var_267 && var_270;
                if (var_271) {
                    // return 0  # PP t0                                                      <L 68>
                    return var_272;
                }
                if (!var_271) {
                    // elif param_col10 <= wp.float64(0.0) and param_col00 >= wp.float64(1.0):       <L 69>
                    var_274 = wp::float64(var_273);
                    var_275 = (var_165 <= var_274);
                    var_277 = wp::float64(var_276);
                    var_278 = (var_78 >= var_277);
                    var_279 = var_275 && var_278;
                    if (var_279) {
                        // return 1  # PP t1                                                  <L 70>
                        return var_280;
                    }
                    if (!var_279) {
                        // elif param_col20 <= wp.float64(0.0) and param_col10 >= wp.float64(1.0):       <L 71>
                        var_282 = wp::float64(var_281);
                        var_283 = (var_252 <= var_282);
                        var_285 = wp::float64(var_284);
                        var_286 = (var_165 >= var_285);
                        var_287 = var_283 && var_286;
                        if (var_287) {
                            // return 2  # PP t2                                              <L 72>
                            return var_288;
                        }
                        if (!var_287) {
                            // return 6  # PT                                                 <L 74>
                            return var_289;
                        }
                    }
                }
            }
        }
        var_290 = wp::where(var_176, var_91, var_178);
        var_291 = wp::where(var_176, var_92, var_179);
        var_292 = wp::where(var_176, var_150, var_237);
    }
    var_293 = wp::where(var_89, var_0, var_290);
    var_294 = wp::where(var_89, var_3, var_291);
    var_295 = wp::where(var_89, var_63, var_292);
    return {};
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/distance_type.py:18
static CUDA_CALLABLE void adj_point_triangle_distance_type_0(
    wp::vec_t<3,wp::float64> var_p,
    wp::vec_t<3,wp::float64> var_t0,
    wp::vec_t<3,wp::float64> var_t1,
    wp::vec_t<3,wp::float64> var_t2,
    wp::vec_t<3,wp::float64> & adj_p,
    wp::vec_t<3,wp::float64> & adj_t0,
    wp::vec_t<3,wp::float64> & adj_t1,
    wp::vec_t<3,wp::float64> & adj_t2,
    wp::int32 & adj_ret)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::vec_t<3,wp::float64> var_1;
    wp::vec_t<3,wp::float64> var_2;
    wp::vec_t<3,wp::float64> var_3;
    wp::vec_t<4,wp::float64> var_4;
    wp::vec_t<2,wp::float64> var_5;
    const wp::int32 var_6 = 0;
    wp::float64 var_7;
    const wp::int32 var_8 = 0;
    wp::float64 var_9;
    wp::float64 var_10;
    const wp::int32 var_11 = 1;
    wp::float64 var_12;
    const wp::int32 var_13 = 1;
    wp::float64 var_14;
    wp::float64 var_15;
    wp::float64 var_16;
    const wp::int32 var_17 = 2;
    wp::float64 var_18;
    const wp::int32 var_19 = 2;
    wp::float64 var_20;
    wp::float64 var_21;
    wp::float64 var_22;
    const wp::int32 var_23 = 0;
    const wp::int32 var_24 = 0;
    wp::float64 var_25;
    const wp::int32 var_26 = 0;
    wp::float64 var_27;
    wp::float64 var_28;
    const wp::int32 var_29 = 1;
    wp::float64 var_30;
    const wp::int32 var_31 = 1;
    wp::float64 var_32;
    wp::float64 var_33;
    wp::float64 var_34;
    const wp::int32 var_35 = 2;
    wp::float64 var_36;
    const wp::int32 var_37 = 2;
    wp::float64 var_38;
    wp::float64 var_39;
    wp::float64 var_40;
    const wp::int32 var_41 = 2;
    const wp::int32 var_42 = 2;
    wp::float64 var_43;
    const wp::int32 var_44 = 1;
    const wp::int32 var_45 = 0;
    wp::float64 var_46;
    const wp::int32 var_47 = 0;
    wp::float64 var_48;
    wp::float64 var_49;
    const wp::int32 var_50 = 1;
    wp::float64 var_51;
    const wp::int32 var_52 = 1;
    wp::float64 var_53;
    wp::float64 var_54;
    wp::float64 var_55;
    const wp::int32 var_56 = 2;
    wp::float64 var_57;
    const wp::int32 var_58 = 2;
    wp::float64 var_59;
    wp::float64 var_60;
    wp::float64 var_61;
    const wp::int32 var_62 = 3;
    wp::vec_t<3,wp::float64> var_63;
    wp::float64 var_64;
    const wp::int32 var_65 = 0;
    wp::float64 var_66;
    const wp::int32 var_67 = 1;
    const wp::int32 var_68 = 0;
    wp::float64 var_69;
    const wp::int32 var_70 = 1;
    wp::float64 var_71;
    const wp::int32 var_72 = 3;
    wp::float64 var_73;
    const wp::int32 var_74 = 0;
    wp::float64 var_75;
    const wp::int32 var_76 = 1;
    wp::float64 var_77;
    wp::float64 var_78;
    wp::float64 var_79;
    const wp::float32 var_80 = 0.0;
    wp::float64 var_81;
    bool var_82;
    const wp::float32 var_83 = 1.0;
    wp::float64 var_84;
    bool var_85;
    const wp::float32 var_86 = 0.0;
    wp::float64 var_87;
    bool var_88;
    bool var_89;
    const wp::int32 var_90 = 3;
    wp::vec_t<3,wp::float64> var_91;
    wp::vec_t<3,wp::float64> var_92;
    const wp::int32 var_93 = 0;
    wp::float64 var_94;
    const wp::int32 var_95 = 0;
    wp::float64 var_96;
    wp::float64 var_97;
    const wp::int32 var_98 = 1;
    wp::float64 var_99;
    const wp::int32 var_100 = 1;
    wp::float64 var_101;
    wp::float64 var_102;
    wp::float64 var_103;
    const wp::int32 var_104 = 2;
    wp::float64 var_105;
    const wp::int32 var_106 = 2;
    wp::float64 var_107;
    wp::float64 var_108;
    wp::float64 var_109;
    const wp::int32 var_110 = 0;
    const wp::int32 var_111 = 0;
    wp::float64 var_112;
    const wp::int32 var_113 = 0;
    wp::float64 var_114;
    wp::float64 var_115;
    const wp::int32 var_116 = 1;
    wp::float64 var_117;
    const wp::int32 var_118 = 1;
    wp::float64 var_119;
    wp::float64 var_120;
    wp::float64 var_121;
    const wp::int32 var_122 = 2;
    wp::float64 var_123;
    const wp::int32 var_124 = 2;
    wp::float64 var_125;
    wp::float64 var_126;
    wp::float64 var_127;
    const wp::int32 var_128 = 2;
    const wp::int32 var_129 = 2;
    wp::float64 var_130;
    const wp::int32 var_131 = 1;
    const wp::int32 var_132 = 0;
    wp::float64 var_133;
    const wp::int32 var_134 = 0;
    wp::float64 var_135;
    wp::float64 var_136;
    const wp::int32 var_137 = 1;
    wp::float64 var_138;
    const wp::int32 var_139 = 1;
    wp::float64 var_140;
    wp::float64 var_141;
    wp::float64 var_142;
    const wp::int32 var_143 = 2;
    wp::float64 var_144;
    const wp::int32 var_145 = 2;
    wp::float64 var_146;
    wp::float64 var_147;
    wp::float64 var_148;
    const wp::int32 var_149 = 3;
    wp::vec_t<3,wp::float64> var_150;
    wp::float64 var_151;
    const wp::int32 var_152 = 0;
    wp::float64 var_153;
    const wp::int32 var_154 = 1;
    const wp::int32 var_155 = 0;
    wp::float64 var_156;
    const wp::int32 var_157 = 1;
    wp::float64 var_158;
    const wp::int32 var_159 = 3;
    wp::float64 var_160;
    const wp::int32 var_161 = 0;
    wp::float64 var_162;
    const wp::int32 var_163 = 1;
    wp::float64 var_164;
    wp::float64 var_165;
    wp::float64 var_166;
    const wp::float32 var_167 = 0.0;
    wp::float64 var_168;
    bool var_169;
    const wp::float32 var_170 = 1.0;
    wp::float64 var_171;
    bool var_172;
    const wp::float32 var_173 = 0.0;
    wp::float64 var_174;
    bool var_175;
    bool var_176;
    const wp::int32 var_177 = 4;
    wp::vec_t<3,wp::float64> var_178;
    wp::vec_t<3,wp::float64> var_179;
    const wp::int32 var_180 = 0;
    wp::float64 var_181;
    const wp::int32 var_182 = 0;
    wp::float64 var_183;
    wp::float64 var_184;
    const wp::int32 var_185 = 1;
    wp::float64 var_186;
    const wp::int32 var_187 = 1;
    wp::float64 var_188;
    wp::float64 var_189;
    wp::float64 var_190;
    const wp::int32 var_191 = 2;
    wp::float64 var_192;
    const wp::int32 var_193 = 2;
    wp::float64 var_194;
    wp::float64 var_195;
    wp::float64 var_196;
    const wp::int32 var_197 = 0;
    const wp::int32 var_198 = 0;
    wp::float64 var_199;
    const wp::int32 var_200 = 0;
    wp::float64 var_201;
    wp::float64 var_202;
    const wp::int32 var_203 = 1;
    wp::float64 var_204;
    const wp::int32 var_205 = 1;
    wp::float64 var_206;
    wp::float64 var_207;
    wp::float64 var_208;
    const wp::int32 var_209 = 2;
    wp::float64 var_210;
    const wp::int32 var_211 = 2;
    wp::float64 var_212;
    wp::float64 var_213;
    wp::float64 var_214;
    const wp::int32 var_215 = 2;
    const wp::int32 var_216 = 2;
    wp::float64 var_217;
    const wp::int32 var_218 = 1;
    const wp::int32 var_219 = 0;
    wp::float64 var_220;
    const wp::int32 var_221 = 0;
    wp::float64 var_222;
    wp::float64 var_223;
    const wp::int32 var_224 = 1;
    wp::float64 var_225;
    const wp::int32 var_226 = 1;
    wp::float64 var_227;
    wp::float64 var_228;
    wp::float64 var_229;
    const wp::int32 var_230 = 2;
    wp::float64 var_231;
    const wp::int32 var_232 = 2;
    wp::float64 var_233;
    wp::float64 var_234;
    wp::float64 var_235;
    const wp::int32 var_236 = 3;
    wp::vec_t<3,wp::float64> var_237;
    wp::float64 var_238;
    const wp::int32 var_239 = 0;
    wp::float64 var_240;
    const wp::int32 var_241 = 1;
    const wp::int32 var_242 = 0;
    wp::float64 var_243;
    const wp::int32 var_244 = 1;
    wp::float64 var_245;
    const wp::int32 var_246 = 3;
    wp::float64 var_247;
    const wp::int32 var_248 = 0;
    wp::float64 var_249;
    const wp::int32 var_250 = 1;
    wp::float64 var_251;
    wp::float64 var_252;
    wp::float64 var_253;
    const wp::float32 var_254 = 0.0;
    wp::float64 var_255;
    bool var_256;
    const wp::float32 var_257 = 1.0;
    wp::float64 var_258;
    bool var_259;
    const wp::float32 var_260 = 0.0;
    wp::float64 var_261;
    bool var_262;
    bool var_263;
    const wp::int32 var_264 = 5;
    const wp::float32 var_265 = 0.0;
    wp::float64 var_266;
    bool var_267;
    const wp::float32 var_268 = 1.0;
    wp::float64 var_269;
    bool var_270;
    bool var_271;
    const wp::int32 var_272 = 0;
    const wp::float32 var_273 = 0.0;
    wp::float64 var_274;
    bool var_275;
    const wp::float32 var_276 = 1.0;
    wp::float64 var_277;
    bool var_278;
    bool var_279;
    const wp::int32 var_280 = 1;
    const wp::float32 var_281 = 0.0;
    wp::float64 var_282;
    bool var_283;
    const wp::float32 var_284 = 1.0;
    wp::float64 var_285;
    bool var_286;
    bool var_287;
    const wp::int32 var_288 = 2;
    const wp::int32 var_289 = 6;
    wp::vec_t<3,wp::float64> var_290;
    wp::vec_t<3,wp::float64> var_291;
    wp::vec_t<3,wp::float64> var_292;
    wp::vec_t<3,wp::float64> var_293;
    wp::vec_t<3,wp::float64> var_294;
    wp::vec_t<3,wp::float64> var_295;
    //---------
    // dual vars
    wp::vec_t<3,wp::float64> adj_0 = {};
    wp::vec_t<3,wp::float64> adj_1 = {};
    wp::vec_t<3,wp::float64> adj_2 = {};
    wp::vec_t<3,wp::float64> adj_3 = {};
    wp::vec_t<4,wp::float64> adj_4 = {};
    wp::vec_t<2,wp::float64> adj_5 = {};
    wp::int32 adj_6 = {};
    wp::float64 adj_7 = {};
    wp::int32 adj_8 = {};
    wp::float64 adj_9 = {};
    wp::float64 adj_10 = {};
    wp::int32 adj_11 = {};
    wp::float64 adj_12 = {};
    wp::int32 adj_13 = {};
    wp::float64 adj_14 = {};
    wp::float64 adj_15 = {};
    wp::float64 adj_16 = {};
    wp::int32 adj_17 = {};
    wp::float64 adj_18 = {};
    wp::int32 adj_19 = {};
    wp::float64 adj_20 = {};
    wp::float64 adj_21 = {};
    wp::float64 adj_22 = {};
    wp::int32 adj_23 = {};
    wp::int32 adj_24 = {};
    wp::float64 adj_25 = {};
    wp::int32 adj_26 = {};
    wp::float64 adj_27 = {};
    wp::float64 adj_28 = {};
    wp::int32 adj_29 = {};
    wp::float64 adj_30 = {};
    wp::int32 adj_31 = {};
    wp::float64 adj_32 = {};
    wp::float64 adj_33 = {};
    wp::float64 adj_34 = {};
    wp::int32 adj_35 = {};
    wp::float64 adj_36 = {};
    wp::int32 adj_37 = {};
    wp::float64 adj_38 = {};
    wp::float64 adj_39 = {};
    wp::float64 adj_40 = {};
    wp::int32 adj_41 = {};
    wp::int32 adj_42 = {};
    wp::float64 adj_43 = {};
    wp::int32 adj_44 = {};
    wp::int32 adj_45 = {};
    wp::float64 adj_46 = {};
    wp::int32 adj_47 = {};
    wp::float64 adj_48 = {};
    wp::float64 adj_49 = {};
    wp::int32 adj_50 = {};
    wp::float64 adj_51 = {};
    wp::int32 adj_52 = {};
    wp::float64 adj_53 = {};
    wp::float64 adj_54 = {};
    wp::float64 adj_55 = {};
    wp::int32 adj_56 = {};
    wp::float64 adj_57 = {};
    wp::int32 adj_58 = {};
    wp::float64 adj_59 = {};
    wp::float64 adj_60 = {};
    wp::float64 adj_61 = {};
    wp::int32 adj_62 = {};
    wp::vec_t<3,wp::float64> adj_63 = {};
    wp::float64 adj_64 = {};
    wp::int32 adj_65 = {};
    wp::float64 adj_66 = {};
    wp::int32 adj_67 = {};
    wp::int32 adj_68 = {};
    wp::float64 adj_69 = {};
    wp::int32 adj_70 = {};
    wp::float64 adj_71 = {};
    wp::int32 adj_72 = {};
    wp::float64 adj_73 = {};
    wp::int32 adj_74 = {};
    wp::float64 adj_75 = {};
    wp::int32 adj_76 = {};
    wp::float64 adj_77 = {};
    wp::float64 adj_78 = {};
    wp::float64 adj_79 = {};
    wp::float32 adj_80 = {};
    wp::float64 adj_81 = {};
    bool adj_82 = {};
    wp::float32 adj_83 = {};
    wp::float64 adj_84 = {};
    bool adj_85 = {};
    wp::float32 adj_86 = {};
    wp::float64 adj_87 = {};
    bool adj_88 = {};
    bool adj_89 = {};
    wp::int32 adj_90 = {};
    wp::vec_t<3,wp::float64> adj_91 = {};
    wp::vec_t<3,wp::float64> adj_92 = {};
    wp::int32 adj_93 = {};
    wp::float64 adj_94 = {};
    wp::int32 adj_95 = {};
    wp::float64 adj_96 = {};
    wp::float64 adj_97 = {};
    wp::int32 adj_98 = {};
    wp::float64 adj_99 = {};
    wp::int32 adj_100 = {};
    wp::float64 adj_101 = {};
    wp::float64 adj_102 = {};
    wp::float64 adj_103 = {};
    wp::int32 adj_104 = {};
    wp::float64 adj_105 = {};
    wp::int32 adj_106 = {};
    wp::float64 adj_107 = {};
    wp::float64 adj_108 = {};
    wp::float64 adj_109 = {};
    wp::int32 adj_110 = {};
    wp::int32 adj_111 = {};
    wp::float64 adj_112 = {};
    wp::int32 adj_113 = {};
    wp::float64 adj_114 = {};
    wp::float64 adj_115 = {};
    wp::int32 adj_116 = {};
    wp::float64 adj_117 = {};
    wp::int32 adj_118 = {};
    wp::float64 adj_119 = {};
    wp::float64 adj_120 = {};
    wp::float64 adj_121 = {};
    wp::int32 adj_122 = {};
    wp::float64 adj_123 = {};
    wp::int32 adj_124 = {};
    wp::float64 adj_125 = {};
    wp::float64 adj_126 = {};
    wp::float64 adj_127 = {};
    wp::int32 adj_128 = {};
    wp::int32 adj_129 = {};
    wp::float64 adj_130 = {};
    wp::int32 adj_131 = {};
    wp::int32 adj_132 = {};
    wp::float64 adj_133 = {};
    wp::int32 adj_134 = {};
    wp::float64 adj_135 = {};
    wp::float64 adj_136 = {};
    wp::int32 adj_137 = {};
    wp::float64 adj_138 = {};
    wp::int32 adj_139 = {};
    wp::float64 adj_140 = {};
    wp::float64 adj_141 = {};
    wp::float64 adj_142 = {};
    wp::int32 adj_143 = {};
    wp::float64 adj_144 = {};
    wp::int32 adj_145 = {};
    wp::float64 adj_146 = {};
    wp::float64 adj_147 = {};
    wp::float64 adj_148 = {};
    wp::int32 adj_149 = {};
    wp::vec_t<3,wp::float64> adj_150 = {};
    wp::float64 adj_151 = {};
    wp::int32 adj_152 = {};
    wp::float64 adj_153 = {};
    wp::int32 adj_154 = {};
    wp::int32 adj_155 = {};
    wp::float64 adj_156 = {};
    wp::int32 adj_157 = {};
    wp::float64 adj_158 = {};
    wp::int32 adj_159 = {};
    wp::float64 adj_160 = {};
    wp::int32 adj_161 = {};
    wp::float64 adj_162 = {};
    wp::int32 adj_163 = {};
    wp::float64 adj_164 = {};
    wp::float64 adj_165 = {};
    wp::float64 adj_166 = {};
    wp::float32 adj_167 = {};
    wp::float64 adj_168 = {};
    bool adj_169 = {};
    wp::float32 adj_170 = {};
    wp::float64 adj_171 = {};
    bool adj_172 = {};
    wp::float32 adj_173 = {};
    wp::float64 adj_174 = {};
    bool adj_175 = {};
    bool adj_176 = {};
    wp::int32 adj_177 = {};
    wp::vec_t<3,wp::float64> adj_178 = {};
    wp::vec_t<3,wp::float64> adj_179 = {};
    wp::int32 adj_180 = {};
    wp::float64 adj_181 = {};
    wp::int32 adj_182 = {};
    wp::float64 adj_183 = {};
    wp::float64 adj_184 = {};
    wp::int32 adj_185 = {};
    wp::float64 adj_186 = {};
    wp::int32 adj_187 = {};
    wp::float64 adj_188 = {};
    wp::float64 adj_189 = {};
    wp::float64 adj_190 = {};
    wp::int32 adj_191 = {};
    wp::float64 adj_192 = {};
    wp::int32 adj_193 = {};
    wp::float64 adj_194 = {};
    wp::float64 adj_195 = {};
    wp::float64 adj_196 = {};
    wp::int32 adj_197 = {};
    wp::int32 adj_198 = {};
    wp::float64 adj_199 = {};
    wp::int32 adj_200 = {};
    wp::float64 adj_201 = {};
    wp::float64 adj_202 = {};
    wp::int32 adj_203 = {};
    wp::float64 adj_204 = {};
    wp::int32 adj_205 = {};
    wp::float64 adj_206 = {};
    wp::float64 adj_207 = {};
    wp::float64 adj_208 = {};
    wp::int32 adj_209 = {};
    wp::float64 adj_210 = {};
    wp::int32 adj_211 = {};
    wp::float64 adj_212 = {};
    wp::float64 adj_213 = {};
    wp::float64 adj_214 = {};
    wp::int32 adj_215 = {};
    wp::int32 adj_216 = {};
    wp::float64 adj_217 = {};
    wp::int32 adj_218 = {};
    wp::int32 adj_219 = {};
    wp::float64 adj_220 = {};
    wp::int32 adj_221 = {};
    wp::float64 adj_222 = {};
    wp::float64 adj_223 = {};
    wp::int32 adj_224 = {};
    wp::float64 adj_225 = {};
    wp::int32 adj_226 = {};
    wp::float64 adj_227 = {};
    wp::float64 adj_228 = {};
    wp::float64 adj_229 = {};
    wp::int32 adj_230 = {};
    wp::float64 adj_231 = {};
    wp::int32 adj_232 = {};
    wp::float64 adj_233 = {};
    wp::float64 adj_234 = {};
    wp::float64 adj_235 = {};
    wp::int32 adj_236 = {};
    wp::vec_t<3,wp::float64> adj_237 = {};
    wp::float64 adj_238 = {};
    wp::int32 adj_239 = {};
    wp::float64 adj_240 = {};
    wp::int32 adj_241 = {};
    wp::int32 adj_242 = {};
    wp::float64 adj_243 = {};
    wp::int32 adj_244 = {};
    wp::float64 adj_245 = {};
    wp::int32 adj_246 = {};
    wp::float64 adj_247 = {};
    wp::int32 adj_248 = {};
    wp::float64 adj_249 = {};
    wp::int32 adj_250 = {};
    wp::float64 adj_251 = {};
    wp::float64 adj_252 = {};
    wp::float64 adj_253 = {};
    wp::float32 adj_254 = {};
    wp::float64 adj_255 = {};
    bool adj_256 = {};
    wp::float32 adj_257 = {};
    wp::float64 adj_258 = {};
    bool adj_259 = {};
    wp::float32 adj_260 = {};
    wp::float64 adj_261 = {};
    bool adj_262 = {};
    bool adj_263 = {};
    wp::int32 adj_264 = {};
    wp::float32 adj_265 = {};
    wp::float64 adj_266 = {};
    bool adj_267 = {};
    wp::float32 adj_268 = {};
    wp::float64 adj_269 = {};
    bool adj_270 = {};
    bool adj_271 = {};
    wp::int32 adj_272 = {};
    wp::float32 adj_273 = {};
    wp::float64 adj_274 = {};
    bool adj_275 = {};
    wp::float32 adj_276 = {};
    wp::float64 adj_277 = {};
    bool adj_278 = {};
    bool adj_279 = {};
    wp::int32 adj_280 = {};
    wp::float32 adj_281 = {};
    wp::float64 adj_282 = {};
    bool adj_283 = {};
    wp::float32 adj_284 = {};
    wp::float64 adj_285 = {};
    bool adj_286 = {};
    bool adj_287 = {};
    wp::int32 adj_288 = {};
    wp::int32 adj_289 = {};
    wp::vec_t<3,wp::float64> adj_290 = {};
    wp::vec_t<3,wp::float64> adj_291 = {};
    wp::vec_t<3,wp::float64> adj_292 = {};
    wp::vec_t<3,wp::float64> adj_293 = {};
    wp::vec_t<3,wp::float64> adj_294 = {};
    wp::vec_t<3,wp::float64> adj_295 = {};
    //---------
    // forward
    // def point_triangle_distance_type(p: wp.vec3d, t0: wp.vec3d, t1: wp.vec3d, t2: wp.vec3d) -> int:       <L 19>
    // basis_row0 = t1 - t0                                                                   <L 20>
    var_0 = wp::sub(var_t1, var_t0);
    // basis_row1 = t2 - t0                                                                   <L 21>
    var_1 = wp::sub(var_t2, var_t0);
    // nVec = wp.cross(basis_row0, basis_row1)                                                <L 22>
    var_2 = wp::cross(var_0, var_1);
    // basis_row1 = wp.cross(basis_row0, nVec)                                                <L 23>
    var_3 = wp::cross(var_0, var_2);
    // sys = wp.vec4d()                                                                       <L 25>
    var_4 = wp::vec_t<4,wp::float64>();
    // rhs = wp.vec2d()                                                                       <L 26>
    var_5 = wp::vec_t<2,wp::float64>();
    // sys[0] = basis_row0[0] * basis_row0[0] + basis_row0[1] * basis_row0[1] + basis_row0[2] * basis_row0[2]       <L 27>
    var_7 = wp::extract(var_0, var_6);
    var_9 = wp::extract(var_0, var_8);
    var_10 = wp::mul(var_7, var_9);
    var_12 = wp::extract(var_0, var_11);
    var_14 = wp::extract(var_0, var_13);
    var_15 = wp::mul(var_12, var_14);
    var_16 = wp::add(var_10, var_15);
    var_18 = wp::extract(var_0, var_17);
    var_20 = wp::extract(var_0, var_19);
    var_21 = wp::mul(var_18, var_20);
    var_22 = wp::add(var_16, var_21);
    wp::assign_inplace(var_4, var_23, var_22);
    // sys[2] = basis_row0[0] * basis_row1[0] + basis_row0[1] * basis_row1[1] + basis_row0[2] * basis_row1[2]       <L 28>
    var_25 = wp::extract(var_0, var_24);
    var_27 = wp::extract(var_3, var_26);
    var_28 = wp::mul(var_25, var_27);
    var_30 = wp::extract(var_0, var_29);
    var_32 = wp::extract(var_3, var_31);
    var_33 = wp::mul(var_30, var_32);
    var_34 = wp::add(var_28, var_33);
    var_36 = wp::extract(var_0, var_35);
    var_38 = wp::extract(var_3, var_37);
    var_39 = wp::mul(var_36, var_38);
    var_40 = wp::add(var_34, var_39);
    wp::assign_inplace(var_4, var_41, var_40);
    // sys[1] = sys[2]                                                                        <L 29>
    var_43 = wp::extract(var_4, var_42);
    wp::assign_inplace(var_4, var_44, var_43);
    // sys[3] = basis_row1[0] * basis_row1[0] + basis_row1[1] * basis_row1[1] + basis_row1[2] * basis_row1[2]       <L 30>
    var_46 = wp::extract(var_3, var_45);
    var_48 = wp::extract(var_3, var_47);
    var_49 = wp::mul(var_46, var_48);
    var_51 = wp::extract(var_3, var_50);
    var_53 = wp::extract(var_3, var_52);
    var_54 = wp::mul(var_51, var_53);
    var_55 = wp::add(var_49, var_54);
    var_57 = wp::extract(var_3, var_56);
    var_59 = wp::extract(var_3, var_58);
    var_60 = wp::mul(var_57, var_59);
    var_61 = wp::add(var_55, var_60);
    wp::assign_inplace(var_4, var_62, var_61);
    // b = p - t0                                                                             <L 32>
    var_63 = wp::sub(var_p, var_t0);
    // rhs[0] = wp.dot(basis_row0, b)                                                         <L 33>
    var_64 = wp::dot(var_0, var_63);
    wp::assign_inplace(var_5, var_65, var_64);
    // rhs[1] = wp.dot(basis_row1, b)                                                         <L 34>
    var_66 = wp::dot(var_3, var_63);
    wp::assign_inplace(var_5, var_67, var_66);
    // param_col00, param_col01 = solveLdlt2D(sys[0], sys[1], sys[3], rhs[0], rhs[1])         <L 35>
    var_69 = wp::extract(var_4, var_68);
    var_71 = wp::extract(var_4, var_70);
    var_73 = wp::extract(var_4, var_72);
    var_75 = wp::extract(var_5, var_74);
    var_77 = wp::extract(var_5, var_76);
    solveLdlt2D_0(var_69, var_71, var_73, var_75, var_77, var_78, var_79);
    // if param_col00 > wp.float64(0.0) and param_col00 < wp.float64(1.0) and param_col01 >= wp.float64(0.0):       <L 36>
    var_81 = wp::float64(var_80);
    var_82 = (var_78 > var_81);
    var_84 = wp::float64(var_83);
    var_85 = (var_78 < var_84);
    var_87 = wp::float64(var_86);
    var_88 = (var_79 >= var_87);
    var_89 = var_82 && var_85 && var_88;
    if (var_89) {
        // return 3  # PE t0t1                                                                <L 37>
        goto label0;
    }
    if (!var_89) {
        // basis_row0 = t2 - t1                                                               <L 39>
        var_91 = wp::sub(var_t2, var_t1);
        // basis_row1 = wp.cross(basis_row0, nVec)                                            <L 40>
        var_92 = wp::cross(var_91, var_2);
        // sys[0] = basis_row0[0] * basis_row0[0] + basis_row0[1] * basis_row0[1] + basis_row0[2] * basis_row0[2]       <L 42>
        var_94 = wp::extract(var_91, var_93);
        var_96 = wp::extract(var_91, var_95);
        var_97 = wp::mul(var_94, var_96);
        var_99 = wp::extract(var_91, var_98);
        var_101 = wp::extract(var_91, var_100);
        var_102 = wp::mul(var_99, var_101);
        var_103 = wp::add(var_97, var_102);
        var_105 = wp::extract(var_91, var_104);
        var_107 = wp::extract(var_91, var_106);
        var_108 = wp::mul(var_105, var_107);
        var_109 = wp::add(var_103, var_108);
        wp::assign_inplace(var_4, var_110, var_109);
        // sys[2] = basis_row0[0] * basis_row1[0] + basis_row0[1] * basis_row1[1] + basis_row0[2] * basis_row1[2]       <L 43>
        var_112 = wp::extract(var_91, var_111);
        var_114 = wp::extract(var_92, var_113);
        var_115 = wp::mul(var_112, var_114);
        var_117 = wp::extract(var_91, var_116);
        var_119 = wp::extract(var_92, var_118);
        var_120 = wp::mul(var_117, var_119);
        var_121 = wp::add(var_115, var_120);
        var_123 = wp::extract(var_91, var_122);
        var_125 = wp::extract(var_92, var_124);
        var_126 = wp::mul(var_123, var_125);
        var_127 = wp::add(var_121, var_126);
        wp::assign_inplace(var_4, var_128, var_127);
        // sys[1] = sys[2]                                                                    <L 44>
        var_130 = wp::extract(var_4, var_129);
        wp::assign_inplace(var_4, var_131, var_130);
        // sys[3] = basis_row1[0] * basis_row1[0] + basis_row1[1] * basis_row1[1] + basis_row1[2] * basis_row1[2]       <L 45>
        var_133 = wp::extract(var_92, var_132);
        var_135 = wp::extract(var_92, var_134);
        var_136 = wp::mul(var_133, var_135);
        var_138 = wp::extract(var_92, var_137);
        var_140 = wp::extract(var_92, var_139);
        var_141 = wp::mul(var_138, var_140);
        var_142 = wp::add(var_136, var_141);
        var_144 = wp::extract(var_92, var_143);
        var_146 = wp::extract(var_92, var_145);
        var_147 = wp::mul(var_144, var_146);
        var_148 = wp::add(var_142, var_147);
        wp::assign_inplace(var_4, var_149, var_148);
        // b = p - t1                                                                         <L 46>
        var_150 = wp::sub(var_p, var_t1);
        // rhs[0] = wp.dot(basis_row0, b)                                                     <L 47>
        var_151 = wp::dot(var_91, var_150);
        wp::assign_inplace(var_5, var_152, var_151);
        // rhs[1] = wp.dot(basis_row1, b)                                                     <L 48>
        var_153 = wp::dot(var_92, var_150);
        wp::assign_inplace(var_5, var_154, var_153);
        // param_col10, param_col11 = solveLdlt2D(sys[0], sys[1], sys[3], rhs[0], rhs[1])       <L 49>
        var_156 = wp::extract(var_4, var_155);
        var_158 = wp::extract(var_4, var_157);
        var_160 = wp::extract(var_4, var_159);
        var_162 = wp::extract(var_5, var_161);
        var_164 = wp::extract(var_5, var_163);
        solveLdlt2D_0(var_156, var_158, var_160, var_162, var_164, var_165, var_166);
        // if param_col10 > wp.float64(0.0) and param_col10 < wp.float64(1.0) and param_col11 >= wp.float64(0.0):       <L 50>
        var_168 = wp::float64(var_167);
        var_169 = (var_165 > var_168);
        var_171 = wp::float64(var_170);
        var_172 = (var_165 < var_171);
        var_174 = wp::float64(var_173);
        var_175 = (var_166 >= var_174);
        var_176 = var_169 && var_172 && var_175;
        if (var_176) {
            // return 4  # PE t1t2                                                            <L 51>
            goto label1;
        }
        if (!var_176) {
            // basis_row0 = t0 - t2                                                           <L 53>
            var_178 = wp::sub(var_t0, var_t2);
            // basis_row1 = wp.cross(basis_row0, nVec)                                        <L 54>
            var_179 = wp::cross(var_178, var_2);
            // sys[0] = basis_row0[0] * basis_row0[0] + basis_row0[1] * basis_row0[1] + basis_row0[2] * basis_row0[2]       <L 55>
            var_181 = wp::extract(var_178, var_180);
            var_183 = wp::extract(var_178, var_182);
            var_184 = wp::mul(var_181, var_183);
            var_186 = wp::extract(var_178, var_185);
            var_188 = wp::extract(var_178, var_187);
            var_189 = wp::mul(var_186, var_188);
            var_190 = wp::add(var_184, var_189);
            var_192 = wp::extract(var_178, var_191);
            var_194 = wp::extract(var_178, var_193);
            var_195 = wp::mul(var_192, var_194);
            var_196 = wp::add(var_190, var_195);
            wp::assign_inplace(var_4, var_197, var_196);
            // sys[2] = basis_row0[0] * basis_row1[0] + basis_row0[1] * basis_row1[1] + basis_row0[2] * basis_row1[2]       <L 56>
            var_199 = wp::extract(var_178, var_198);
            var_201 = wp::extract(var_179, var_200);
            var_202 = wp::mul(var_199, var_201);
            var_204 = wp::extract(var_178, var_203);
            var_206 = wp::extract(var_179, var_205);
            var_207 = wp::mul(var_204, var_206);
            var_208 = wp::add(var_202, var_207);
            var_210 = wp::extract(var_178, var_209);
            var_212 = wp::extract(var_179, var_211);
            var_213 = wp::mul(var_210, var_212);
            var_214 = wp::add(var_208, var_213);
            wp::assign_inplace(var_4, var_215, var_214);
            // sys[1] = sys[2]                                                                <L 57>
            var_217 = wp::extract(var_4, var_216);
            wp::assign_inplace(var_4, var_218, var_217);
            // sys[3] = basis_row1[0] * basis_row1[0] + basis_row1[1] * basis_row1[1] + basis_row1[2] * basis_row1[2]       <L 58>
            var_220 = wp::extract(var_179, var_219);
            var_222 = wp::extract(var_179, var_221);
            var_223 = wp::mul(var_220, var_222);
            var_225 = wp::extract(var_179, var_224);
            var_227 = wp::extract(var_179, var_226);
            var_228 = wp::mul(var_225, var_227);
            var_229 = wp::add(var_223, var_228);
            var_231 = wp::extract(var_179, var_230);
            var_233 = wp::extract(var_179, var_232);
            var_234 = wp::mul(var_231, var_233);
            var_235 = wp::add(var_229, var_234);
            wp::assign_inplace(var_4, var_236, var_235);
            // b = p - t2                                                                     <L 59>
            var_237 = wp::sub(var_p, var_t2);
            // rhs[0] = wp.dot(basis_row0, b)                                                 <L 60>
            var_238 = wp::dot(var_178, var_237);
            wp::assign_inplace(var_5, var_239, var_238);
            // rhs[1] = wp.dot(basis_row1, b)                                                 <L 61>
            var_240 = wp::dot(var_179, var_237);
            wp::assign_inplace(var_5, var_241, var_240);
            // param_col20, param_col21 = solveLdlt2D(sys[0], sys[1], sys[3], rhs[0], rhs[1])       <L 62>
            var_243 = wp::extract(var_4, var_242);
            var_245 = wp::extract(var_4, var_244);
            var_247 = wp::extract(var_4, var_246);
            var_249 = wp::extract(var_5, var_248);
            var_251 = wp::extract(var_5, var_250);
            solveLdlt2D_0(var_243, var_245, var_247, var_249, var_251, var_252, var_253);
            // if param_col20 > wp.float64(0.0) and param_col20 < wp.float64(1.0) and param_col21 >= wp.float64(0.0):       <L 64>
            var_255 = wp::float64(var_254);
            var_256 = (var_252 > var_255);
            var_258 = wp::float64(var_257);
            var_259 = (var_252 < var_258);
            var_261 = wp::float64(var_260);
            var_262 = (var_253 >= var_261);
            var_263 = var_256 && var_259 && var_262;
            if (var_263) {
                // return 5  # PE t2t0                                                        <L 65>
                goto label2;
            }
            if (!var_263) {
                // if param_col00 <= wp.float64(0.0) and param_col20 >= wp.float64(1.0):       <L 67>
                var_266 = wp::float64(var_265);
                var_267 = (var_78 <= var_266);
                var_269 = wp::float64(var_268);
                var_270 = (var_252 >= var_269);
                var_271 = var_267 && var_270;
                if (var_271) {
                    // return 0  # PP t0                                                      <L 68>
                    goto label3;
                }
                if (!var_271) {
                    // elif param_col10 <= wp.float64(0.0) and param_col00 >= wp.float64(1.0):       <L 69>
                    var_274 = wp::float64(var_273);
                    var_275 = (var_165 <= var_274);
                    var_277 = wp::float64(var_276);
                    var_278 = (var_78 >= var_277);
                    var_279 = var_275 && var_278;
                    if (var_279) {
                        // return 1  # PP t1                                                  <L 70>
                        goto label4;
                    }
                    if (!var_279) {
                        // elif param_col20 <= wp.float64(0.0) and param_col10 >= wp.float64(1.0):       <L 71>
                        var_282 = wp::float64(var_281);
                        var_283 = (var_252 <= var_282);
                        var_285 = wp::float64(var_284);
                        var_286 = (var_165 >= var_285);
                        var_287 = var_283 && var_286;
                        if (var_287) {
                            // return 2  # PP t2                                              <L 72>
                            goto label5;
                        }
                        if (!var_287) {
                            // return 6  # PT                                                 <L 74>
                            goto label6;
                        }
                    }
                }
            }
        }
        var_290 = wp::where(var_176, var_91, var_178);
        var_291 = wp::where(var_176, var_92, var_179);
        var_292 = wp::where(var_176, var_150, var_237);
    }
    var_293 = wp::where(var_89, var_0, var_290);
    var_294 = wp::where(var_89, var_3, var_291);
    var_295 = wp::where(var_89, var_63, var_292);
    //---------
    // reverse
    wp::adj_where(var_89, var_63, var_292, adj_89, adj_63, adj_292, adj_295);
    wp::adj_where(var_89, var_3, var_291, adj_89, adj_3, adj_291, adj_294);
    wp::adj_where(var_89, var_0, var_290, adj_89, adj_0, adj_290, adj_293);
    if (!var_89) {
        wp::adj_where(var_176, var_150, var_237, adj_176, adj_150, adj_237, adj_292);
        wp::adj_where(var_176, var_92, var_179, adj_176, adj_92, adj_179, adj_291);
        wp::adj_where(var_176, var_91, var_178, adj_176, adj_91, adj_178, adj_290);
        if (!var_176) {
            if (!var_263) {
                if (!var_271) {
                    if (!var_279) {
                        if (!var_287) {
                            label6:;
                            adj_289 += adj_ret;
                            // adj: return 6  # PT                                            <L 74>
                        }
                        if (var_287) {
                            label5:;
                            adj_288 += adj_ret;
                            // adj: return 2  # PP t2                                         <L 72>
                        }
                        wp::adj_float64(var_284, adj_284, adj_285);
                        wp::adj_float64(var_281, adj_281, adj_282);
                        // adj: elif param_col20 <= wp.float64(0.0) and param_col10 >= wp.float64(1.0):  <L 71>
                    }
                    if (var_279) {
                        label4:;
                        adj_280 += adj_ret;
                        // adj: return 1  # PP t1                                             <L 70>
                    }
                    wp::adj_float64(var_276, adj_276, adj_277);
                    wp::adj_float64(var_273, adj_273, adj_274);
                    // adj: elif param_col10 <= wp.float64(0.0) and param_col00 >= wp.float64(1.0):  <L 69>
                }
                if (var_271) {
                    label3:;
                    adj_272 += adj_ret;
                    // adj: return 0  # PP t0                                                 <L 68>
                }
                wp::adj_float64(var_268, adj_268, adj_269);
                wp::adj_float64(var_265, adj_265, adj_266);
                // adj: if param_col00 <= wp.float64(0.0) and param_col20 >= wp.float64(1.0):  <L 67>
            }
            if (var_263) {
                label2:;
                adj_264 += adj_ret;
                // adj: return 5  # PE t2t0                                                   <L 65>
            }
            wp::adj_float64(var_260, adj_260, adj_261);
            wp::adj_float64(var_257, adj_257, adj_258);
            wp::adj_float64(var_254, adj_254, adj_255);
            // adj: if param_col20 > wp.float64(0.0) and param_col20 < wp.float64(1.0) and param_col21 >= wp.float64(0.0):  <L 64>
            adj_solveLdlt2D_0(var_243, var_245, var_247, var_249, var_251, var_252, var_253, adj_243, adj_245, adj_247, adj_249, adj_251, adj_252, adj_253);
            wp::adj_extract(var_5, var_250, adj_5, adj_250, adj_251);
            wp::adj_extract(var_5, var_248, adj_5, adj_248, adj_249);
            wp::adj_extract(var_4, var_246, adj_4, adj_246, adj_247);
            wp::adj_extract(var_4, var_244, adj_4, adj_244, adj_245);
            wp::adj_extract(var_4, var_242, adj_4, adj_242, adj_243);
            // adj: param_col20, param_col21 = solveLdlt2D(sys[0], sys[1], sys[3], rhs[0], rhs[1])  <L 62>
            wp::adj_assign_inplace(var_5, var_241, var_240, adj_5, adj_241, adj_240);
            wp::adj_dot(var_179, var_237, adj_179, adj_237, adj_240);
            // adj: rhs[1] = wp.dot(basis_row1, b)                                            <L 61>
            wp::adj_assign_inplace(var_5, var_239, var_238, adj_5, adj_239, adj_238);
            wp::adj_dot(var_178, var_237, adj_178, adj_237, adj_238);
            // adj: rhs[0] = wp.dot(basis_row0, b)                                            <L 60>
            wp::adj_sub(var_p, var_t2, adj_p, adj_t2, adj_237);
            // adj: b = p - t2                                                                <L 59>
            wp::adj_assign_inplace(var_4, var_236, var_235, adj_4, adj_236, adj_235);
            wp::adj_add(var_229, var_234, adj_229, adj_234, adj_235);
            wp::adj_mul(var_231, var_233, adj_231, adj_233, adj_234);
            wp::adj_extract(var_179, var_232, adj_179, adj_232, adj_233);
            wp::adj_extract(var_179, var_230, adj_179, adj_230, adj_231);
            wp::adj_add(var_223, var_228, adj_223, adj_228, adj_229);
            wp::adj_mul(var_225, var_227, adj_225, adj_227, adj_228);
            wp::adj_extract(var_179, var_226, adj_179, adj_226, adj_227);
            wp::adj_extract(var_179, var_224, adj_179, adj_224, adj_225);
            wp::adj_mul(var_220, var_222, adj_220, adj_222, adj_223);
            wp::adj_extract(var_179, var_221, adj_179, adj_221, adj_222);
            wp::adj_extract(var_179, var_219, adj_179, adj_219, adj_220);
            // adj: sys[3] = basis_row1[0] * basis_row1[0] + basis_row1[1] * basis_row1[1] + basis_row1[2] * basis_row1[2]  <L 58>
            wp::adj_assign_inplace(var_4, var_218, var_217, adj_4, adj_218, adj_217);
            wp::adj_extract(var_4, var_216, adj_4, adj_216, adj_217);
            // adj: sys[1] = sys[2]                                                           <L 57>
            wp::adj_assign_inplace(var_4, var_215, var_214, adj_4, adj_215, adj_214);
            wp::adj_add(var_208, var_213, adj_208, adj_213, adj_214);
            wp::adj_mul(var_210, var_212, adj_210, adj_212, adj_213);
            wp::adj_extract(var_179, var_211, adj_179, adj_211, adj_212);
            wp::adj_extract(var_178, var_209, adj_178, adj_209, adj_210);
            wp::adj_add(var_202, var_207, adj_202, adj_207, adj_208);
            wp::adj_mul(var_204, var_206, adj_204, adj_206, adj_207);
            wp::adj_extract(var_179, var_205, adj_179, adj_205, adj_206);
            wp::adj_extract(var_178, var_203, adj_178, adj_203, adj_204);
            wp::adj_mul(var_199, var_201, adj_199, adj_201, adj_202);
            wp::adj_extract(var_179, var_200, adj_179, adj_200, adj_201);
            wp::adj_extract(var_178, var_198, adj_178, adj_198, adj_199);
            // adj: sys[2] = basis_row0[0] * basis_row1[0] + basis_row0[1] * basis_row1[1] + basis_row0[2] * basis_row1[2]  <L 56>
            wp::adj_assign_inplace(var_4, var_197, var_196, adj_4, adj_197, adj_196);
            wp::adj_add(var_190, var_195, adj_190, adj_195, adj_196);
            wp::adj_mul(var_192, var_194, adj_192, adj_194, adj_195);
            wp::adj_extract(var_178, var_193, adj_178, adj_193, adj_194);
            wp::adj_extract(var_178, var_191, adj_178, adj_191, adj_192);
            wp::adj_add(var_184, var_189, adj_184, adj_189, adj_190);
            wp::adj_mul(var_186, var_188, adj_186, adj_188, adj_189);
            wp::adj_extract(var_178, var_187, adj_178, adj_187, adj_188);
            wp::adj_extract(var_178, var_185, adj_178, adj_185, adj_186);
            wp::adj_mul(var_181, var_183, adj_181, adj_183, adj_184);
            wp::adj_extract(var_178, var_182, adj_178, adj_182, adj_183);
            wp::adj_extract(var_178, var_180, adj_178, adj_180, adj_181);
            // adj: sys[0] = basis_row0[0] * basis_row0[0] + basis_row0[1] * basis_row0[1] + basis_row0[2] * basis_row0[2]  <L 55>
            wp::adj_cross(var_178, var_2, adj_178, adj_2, adj_179);
            // adj: basis_row1 = wp.cross(basis_row0, nVec)                                   <L 54>
            wp::adj_sub(var_t0, var_t2, adj_t0, adj_t2, adj_178);
            // adj: basis_row0 = t0 - t2                                                      <L 53>
        }
        if (var_176) {
            label1:;
            adj_177 += adj_ret;
            // adj: return 4  # PE t1t2                                                       <L 51>
        }
        wp::adj_float64(var_173, adj_173, adj_174);
        wp::adj_float64(var_170, adj_170, adj_171);
        wp::adj_float64(var_167, adj_167, adj_168);
        // adj: if param_col10 > wp.float64(0.0) and param_col10 < wp.float64(1.0) and param_col11 >= wp.float64(0.0):  <L 50>
        adj_solveLdlt2D_0(var_156, var_158, var_160, var_162, var_164, var_165, var_166, adj_156, adj_158, adj_160, adj_162, adj_164, adj_165, adj_166);
        wp::adj_extract(var_5, var_163, adj_5, adj_163, adj_164);
        wp::adj_extract(var_5, var_161, adj_5, adj_161, adj_162);
        wp::adj_extract(var_4, var_159, adj_4, adj_159, adj_160);
        wp::adj_extract(var_4, var_157, adj_4, adj_157, adj_158);
        wp::adj_extract(var_4, var_155, adj_4, adj_155, adj_156);
        // adj: param_col10, param_col11 = solveLdlt2D(sys[0], sys[1], sys[3], rhs[0], rhs[1])  <L 49>
        wp::adj_assign_inplace(var_5, var_154, var_153, adj_5, adj_154, adj_153);
        wp::adj_dot(var_92, var_150, adj_92, adj_150, adj_153);
        // adj: rhs[1] = wp.dot(basis_row1, b)                                                <L 48>
        wp::adj_assign_inplace(var_5, var_152, var_151, adj_5, adj_152, adj_151);
        wp::adj_dot(var_91, var_150, adj_91, adj_150, adj_151);
        // adj: rhs[0] = wp.dot(basis_row0, b)                                                <L 47>
        wp::adj_sub(var_p, var_t1, adj_p, adj_t1, adj_150);
        // adj: b = p - t1                                                                    <L 46>
        wp::adj_assign_inplace(var_4, var_149, var_148, adj_4, adj_149, adj_148);
        wp::adj_add(var_142, var_147, adj_142, adj_147, adj_148);
        wp::adj_mul(var_144, var_146, adj_144, adj_146, adj_147);
        wp::adj_extract(var_92, var_145, adj_92, adj_145, adj_146);
        wp::adj_extract(var_92, var_143, adj_92, adj_143, adj_144);
        wp::adj_add(var_136, var_141, adj_136, adj_141, adj_142);
        wp::adj_mul(var_138, var_140, adj_138, adj_140, adj_141);
        wp::adj_extract(var_92, var_139, adj_92, adj_139, adj_140);
        wp::adj_extract(var_92, var_137, adj_92, adj_137, adj_138);
        wp::adj_mul(var_133, var_135, adj_133, adj_135, adj_136);
        wp::adj_extract(var_92, var_134, adj_92, adj_134, adj_135);
        wp::adj_extract(var_92, var_132, adj_92, adj_132, adj_133);
        // adj: sys[3] = basis_row1[0] * basis_row1[0] + basis_row1[1] * basis_row1[1] + basis_row1[2] * basis_row1[2]  <L 45>
        wp::adj_assign_inplace(var_4, var_131, var_130, adj_4, adj_131, adj_130);
        wp::adj_extract(var_4, var_129, adj_4, adj_129, adj_130);
        // adj: sys[1] = sys[2]                                                               <L 44>
        wp::adj_assign_inplace(var_4, var_128, var_127, adj_4, adj_128, adj_127);
        wp::adj_add(var_121, var_126, adj_121, adj_126, adj_127);
        wp::adj_mul(var_123, var_125, adj_123, adj_125, adj_126);
        wp::adj_extract(var_92, var_124, adj_92, adj_124, adj_125);
        wp::adj_extract(var_91, var_122, adj_91, adj_122, adj_123);
        wp::adj_add(var_115, var_120, adj_115, adj_120, adj_121);
        wp::adj_mul(var_117, var_119, adj_117, adj_119, adj_120);
        wp::adj_extract(var_92, var_118, adj_92, adj_118, adj_119);
        wp::adj_extract(var_91, var_116, adj_91, adj_116, adj_117);
        wp::adj_mul(var_112, var_114, adj_112, adj_114, adj_115);
        wp::adj_extract(var_92, var_113, adj_92, adj_113, adj_114);
        wp::adj_extract(var_91, var_111, adj_91, adj_111, adj_112);
        // adj: sys[2] = basis_row0[0] * basis_row1[0] + basis_row0[1] * basis_row1[1] + basis_row0[2] * basis_row1[2]  <L 43>
        wp::adj_assign_inplace(var_4, var_110, var_109, adj_4, adj_110, adj_109);
        wp::adj_add(var_103, var_108, adj_103, adj_108, adj_109);
        wp::adj_mul(var_105, var_107, adj_105, adj_107, adj_108);
        wp::adj_extract(var_91, var_106, adj_91, adj_106, adj_107);
        wp::adj_extract(var_91, var_104, adj_91, adj_104, adj_105);
        wp::adj_add(var_97, var_102, adj_97, adj_102, adj_103);
        wp::adj_mul(var_99, var_101, adj_99, adj_101, adj_102);
        wp::adj_extract(var_91, var_100, adj_91, adj_100, adj_101);
        wp::adj_extract(var_91, var_98, adj_91, adj_98, adj_99);
        wp::adj_mul(var_94, var_96, adj_94, adj_96, adj_97);
        wp::adj_extract(var_91, var_95, adj_91, adj_95, adj_96);
        wp::adj_extract(var_91, var_93, adj_91, adj_93, adj_94);
        // adj: sys[0] = basis_row0[0] * basis_row0[0] + basis_row0[1] * basis_row0[1] + basis_row0[2] * basis_row0[2]  <L 42>
        wp::adj_cross(var_91, var_2, adj_91, adj_2, adj_92);
        // adj: basis_row1 = wp.cross(basis_row0, nVec)                                       <L 40>
        wp::adj_sub(var_t2, var_t1, adj_t2, adj_t1, adj_91);
        // adj: basis_row0 = t2 - t1                                                          <L 39>
    }
    if (var_89) {
        label0:;
        adj_90 += adj_ret;
        // adj: return 3  # PE t0t1                                                           <L 37>
    }
    wp::adj_float64(var_86, adj_86, adj_87);
    wp::adj_float64(var_83, adj_83, adj_84);
    wp::adj_float64(var_80, adj_80, adj_81);
    // adj: if param_col00 > wp.float64(0.0) and param_col00 < wp.float64(1.0) and param_col01 >= wp.float64(0.0):  <L 36>
    adj_solveLdlt2D_0(var_69, var_71, var_73, var_75, var_77, var_78, var_79, adj_69, adj_71, adj_73, adj_75, adj_77, adj_78, adj_79);
    wp::adj_extract(var_5, var_76, adj_5, adj_76, adj_77);
    wp::adj_extract(var_5, var_74, adj_5, adj_74, adj_75);
    wp::adj_extract(var_4, var_72, adj_4, adj_72, adj_73);
    wp::adj_extract(var_4, var_70, adj_4, adj_70, adj_71);
    wp::adj_extract(var_4, var_68, adj_4, adj_68, adj_69);
    // adj: param_col00, param_col01 = solveLdlt2D(sys[0], sys[1], sys[3], rhs[0], rhs[1])    <L 35>
    wp::adj_assign_inplace(var_5, var_67, var_66, adj_5, adj_67, adj_66);
    wp::adj_dot(var_3, var_63, adj_3, adj_63, adj_66);
    // adj: rhs[1] = wp.dot(basis_row1, b)                                                    <L 34>
    wp::adj_assign_inplace(var_5, var_65, var_64, adj_5, adj_65, adj_64);
    wp::adj_dot(var_0, var_63, adj_0, adj_63, adj_64);
    // adj: rhs[0] = wp.dot(basis_row0, b)                                                    <L 33>
    wp::adj_sub(var_p, var_t0, adj_p, adj_t0, adj_63);
    // adj: b = p - t0                                                                        <L 32>
    wp::adj_assign_inplace(var_4, var_62, var_61, adj_4, adj_62, adj_61);
    wp::adj_add(var_55, var_60, adj_55, adj_60, adj_61);
    wp::adj_mul(var_57, var_59, adj_57, adj_59, adj_60);
    wp::adj_extract(var_3, var_58, adj_3, adj_58, adj_59);
    wp::adj_extract(var_3, var_56, adj_3, adj_56, adj_57);
    wp::adj_add(var_49, var_54, adj_49, adj_54, adj_55);
    wp::adj_mul(var_51, var_53, adj_51, adj_53, adj_54);
    wp::adj_extract(var_3, var_52, adj_3, adj_52, adj_53);
    wp::adj_extract(var_3, var_50, adj_3, adj_50, adj_51);
    wp::adj_mul(var_46, var_48, adj_46, adj_48, adj_49);
    wp::adj_extract(var_3, var_47, adj_3, adj_47, adj_48);
    wp::adj_extract(var_3, var_45, adj_3, adj_45, adj_46);
    // adj: sys[3] = basis_row1[0] * basis_row1[0] + basis_row1[1] * basis_row1[1] + basis_row1[2] * basis_row1[2]  <L 30>
    wp::adj_assign_inplace(var_4, var_44, var_43, adj_4, adj_44, adj_43);
    wp::adj_extract(var_4, var_42, adj_4, adj_42, adj_43);
    // adj: sys[1] = sys[2]                                                                   <L 29>
    wp::adj_assign_inplace(var_4, var_41, var_40, adj_4, adj_41, adj_40);
    wp::adj_add(var_34, var_39, adj_34, adj_39, adj_40);
    wp::adj_mul(var_36, var_38, adj_36, adj_38, adj_39);
    wp::adj_extract(var_3, var_37, adj_3, adj_37, adj_38);
    wp::adj_extract(var_0, var_35, adj_0, adj_35, adj_36);
    wp::adj_add(var_28, var_33, adj_28, adj_33, adj_34);
    wp::adj_mul(var_30, var_32, adj_30, adj_32, adj_33);
    wp::adj_extract(var_3, var_31, adj_3, adj_31, adj_32);
    wp::adj_extract(var_0, var_29, adj_0, adj_29, adj_30);
    wp::adj_mul(var_25, var_27, adj_25, adj_27, adj_28);
    wp::adj_extract(var_3, var_26, adj_3, adj_26, adj_27);
    wp::adj_extract(var_0, var_24, adj_0, adj_24, adj_25);
    // adj: sys[2] = basis_row0[0] * basis_row1[0] + basis_row0[1] * basis_row1[1] + basis_row0[2] * basis_row1[2]  <L 28>
    wp::adj_assign_inplace(var_4, var_23, var_22, adj_4, adj_23, adj_22);
    wp::adj_add(var_16, var_21, adj_16, adj_21, adj_22);
    wp::adj_mul(var_18, var_20, adj_18, adj_20, adj_21);
    wp::adj_extract(var_0, var_19, adj_0, adj_19, adj_20);
    wp::adj_extract(var_0, var_17, adj_0, adj_17, adj_18);
    wp::adj_add(var_10, var_15, adj_10, adj_15, adj_16);
    wp::adj_mul(var_12, var_14, adj_12, adj_14, adj_15);
    wp::adj_extract(var_0, var_13, adj_0, adj_13, adj_14);
    wp::adj_extract(var_0, var_11, adj_0, adj_11, adj_12);
    wp::adj_mul(var_7, var_9, adj_7, adj_9, adj_10);
    wp::adj_extract(var_0, var_8, adj_0, adj_8, adj_9);
    wp::adj_extract(var_0, var_6, adj_0, adj_6, adj_7);
    // adj: sys[0] = basis_row0[0] * basis_row0[0] + basis_row0[1] * basis_row0[1] + basis_row0[2] * basis_row0[2]  <L 27>
    // adj: rhs = wp.vec2d()                                                                  <L 26>
    // adj: sys = wp.vec4d()                                                                  <L 25>
    wp::adj_cross(var_0, var_2, adj_0, adj_2, adj_3);
    // adj: basis_row1 = wp.cross(basis_row0, nVec)                                           <L 23>
    wp::adj_cross(var_0, var_1, adj_0, adj_1, adj_2);
    // adj: nVec = wp.cross(basis_row0, basis_row1)                                           <L 22>
    wp::adj_sub(var_t2, var_t0, adj_t2, adj_t0, adj_1);
    // adj: basis_row1 = t2 - t0                                                              <L 21>
    wp::adj_sub(var_t1, var_t0, adj_t1, adj_t0, adj_0);
    // adj: basis_row0 = t1 - t0                                                              <L 20>
    // adj: def point_triangle_distance_type(p: wp.vec3d, t0: wp.vec3d, t1: wp.vec3d, t2: wp.vec3d) -> int:  <L 19>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/point_point_distance.py:4
static CUDA_CALLABLE wp::float64 point_point_distance_0(
    wp::vec_t<3,wp::float64> var_a,
    wp::vec_t<3,wp::float64> var_b)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::float64 var_1;
    //---------
    // forward
    // def point_point_distance(a: wp.vec3d, b: wp.vec3d):                                    <L 5>
    // return wp.length_sq(a - b)                                                             <L 6>
    var_0 = wp::sub(var_a, var_b);
    var_1 = wp::length_sq(var_0);
    return var_1;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/point_point_distance.py:4
static CUDA_CALLABLE void adj_point_point_distance_0(
    wp::vec_t<3,wp::float64> var_a,
    wp::vec_t<3,wp::float64> var_b,
    wp::vec_t<3,wp::float64> & adj_a,
    wp::vec_t<3,wp::float64> & adj_b,
    wp::float64 & adj_ret)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::float64 var_1;
    //---------
    // dual vars
    wp::vec_t<3,wp::float64> adj_0 = {};
    wp::float64 adj_1 = {};
    //---------
    // forward
    // def point_point_distance(a: wp.vec3d, b: wp.vec3d):                                    <L 5>
    // return wp.length_sq(a - b)                                                             <L 6>
    var_0 = wp::sub(var_a, var_b);
    var_1 = wp::length_sq(var_0);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_1 += adj_ret;
    wp::adj_length_sq(var_0, adj_0, adj_1);
    wp::adj_sub(var_a, var_b, adj_a, adj_b, adj_0);
    // adj: return wp.length_sq(a - b)                                                        <L 6>
    // adj: def point_point_distance(a: wp.vec3d, b: wp.vec3d):                               <L 5>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/point_line_distance.py:287
static CUDA_CALLABLE wp::float64 point_line_distance_0(
    wp::vec_t<3,wp::float64> var_p,
    wp::vec_t<3,wp::float64> var_e0,
    wp::vec_t<3,wp::float64> var_e1)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::vec_t<3,wp::float64> var_1;
    wp::vec_t<3,wp::float64> var_2;
    wp::vec_t<3,wp::float64> var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    //---------
    // forward
    // def point_line_distance(p: wp.vec3d, e0: wp.vec3d, e1: wp.vec3d):                      <L 288>
    // pe0 = e0 - p                                                                           <L 290>
    var_0 = wp::sub(var_e0, var_p);
    // pe1 = e1 - p                                                                           <L 291>
    var_1 = wp::sub(var_e1, var_p);
    // e0e1 = e1 - e0                                                                         <L 292>
    var_2 = wp::sub(var_e1, var_e0);
    // nor = wp.cross(pe0, pe1)                                                               <L 293>
    var_3 = wp::cross(var_0, var_1);
    // return wp.length_sq(nor) / wp.length_sq(e0e1)                                          <L 294>
    var_4 = wp::length_sq(var_3);
    var_5 = wp::length_sq(var_2);
    var_6 = wp::div(var_4, var_5);
    return var_6;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/point_line_distance.py:287
static CUDA_CALLABLE void adj_point_line_distance_0(
    wp::vec_t<3,wp::float64> var_p,
    wp::vec_t<3,wp::float64> var_e0,
    wp::vec_t<3,wp::float64> var_e1,
    wp::vec_t<3,wp::float64> & adj_p,
    wp::vec_t<3,wp::float64> & adj_e0,
    wp::vec_t<3,wp::float64> & adj_e1,
    wp::float64 & adj_ret)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::vec_t<3,wp::float64> var_1;
    wp::vec_t<3,wp::float64> var_2;
    wp::vec_t<3,wp::float64> var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    //---------
    // dual vars
    wp::vec_t<3,wp::float64> adj_0 = {};
    wp::vec_t<3,wp::float64> adj_1 = {};
    wp::vec_t<3,wp::float64> adj_2 = {};
    wp::vec_t<3,wp::float64> adj_3 = {};
    wp::float64 adj_4 = {};
    wp::float64 adj_5 = {};
    wp::float64 adj_6 = {};
    //---------
    // forward
    // def point_line_distance(p: wp.vec3d, e0: wp.vec3d, e1: wp.vec3d):                      <L 288>
    // pe0 = e0 - p                                                                           <L 290>
    var_0 = wp::sub(var_e0, var_p);
    // pe1 = e1 - p                                                                           <L 291>
    var_1 = wp::sub(var_e1, var_p);
    // e0e1 = e1 - e0                                                                         <L 292>
    var_2 = wp::sub(var_e1, var_e0);
    // nor = wp.cross(pe0, pe1)                                                               <L 293>
    var_3 = wp::cross(var_0, var_1);
    // return wp.length_sq(nor) / wp.length_sq(e0e1)                                          <L 294>
    var_4 = wp::length_sq(var_3);
    var_5 = wp::length_sq(var_2);
    var_6 = wp::div(var_4, var_5);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_6 += adj_ret;
    wp::adj_div(var_4, var_5, var_6, adj_4, adj_5, adj_6);
    wp::adj_length_sq(var_2, adj_2, adj_5);
    wp::adj_length_sq(var_3, adj_3, adj_4);
    // adj: return wp.length_sq(nor) / wp.length_sq(e0e1)                                     <L 294>
    wp::adj_cross(var_0, var_1, adj_0, adj_1, adj_3);
    // adj: nor = wp.cross(pe0, pe1)                                                          <L 293>
    wp::adj_sub(var_e1, var_e0, adj_e1, adj_e0, adj_2);
    // adj: e0e1 = e1 - e0                                                                    <L 292>
    wp::adj_sub(var_e1, var_p, adj_e1, adj_p, adj_1);
    // adj: pe1 = e1 - p                                                                      <L 291>
    wp::adj_sub(var_e0, var_p, adj_e0, adj_p, adj_0);
    // adj: pe0 = e0 - p                                                                      <L 290>
    // adj: def point_line_distance(p: wp.vec3d, e0: wp.vec3d, e1: wp.vec3d):                 <L 288>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/point_plane_distance.py:555
static CUDA_CALLABLE wp::float64 point_plane_distance_0(
    wp::vec_t<3,wp::float64> var_p,
    wp::vec_t<3,wp::float64> var_t0,
    wp::vec_t<3,wp::float64> var_t1,
    wp::vec_t<3,wp::float64> var_t2)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::vec_t<3,wp::float64> var_1;
    wp::vec_t<3,wp::float64> var_2;
    wp::vec_t<3,wp::float64> var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    wp::float64 var_7;
    //---------
    // forward
    // def point_plane_distance(p: wp.vec3d, t0: wp.vec3d, t1: wp.vec3d, t2: wp.vec3d):       <L 556>
    // t0t1 = t1 - t0                                                                         <L 561>
    var_0 = wp::sub(var_t1, var_t0);
    // t0t2 = t2 - t0                                                                         <L 562>
    var_1 = wp::sub(var_t2, var_t0);
    // t0p = p - t0                                                                           <L 563>
    var_2 = wp::sub(var_p, var_t0);
    // b = wp.cross(t0t1, t0t2)                                                               <L 564>
    var_3 = wp::cross(var_0, var_1);
    // aTb = wp.dot(t0p, b)                                                                   <L 565>
    var_4 = wp::dot(var_2, var_3);
    // return aTb * aTb / wp.length_sq(b)                                                     <L 566>
    var_5 = wp::mul(var_4, var_4);
    var_6 = wp::length_sq(var_3);
    var_7 = wp::div(var_5, var_6);
    return var_7;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/point_plane_distance.py:555
static CUDA_CALLABLE void adj_point_plane_distance_0(
    wp::vec_t<3,wp::float64> var_p,
    wp::vec_t<3,wp::float64> var_t0,
    wp::vec_t<3,wp::float64> var_t1,
    wp::vec_t<3,wp::float64> var_t2,
    wp::vec_t<3,wp::float64> & adj_p,
    wp::vec_t<3,wp::float64> & adj_t0,
    wp::vec_t<3,wp::float64> & adj_t1,
    wp::vec_t<3,wp::float64> & adj_t2,
    wp::float64 & adj_ret)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::vec_t<3,wp::float64> var_1;
    wp::vec_t<3,wp::float64> var_2;
    wp::vec_t<3,wp::float64> var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    wp::float64 var_7;
    //---------
    // dual vars
    wp::vec_t<3,wp::float64> adj_0 = {};
    wp::vec_t<3,wp::float64> adj_1 = {};
    wp::vec_t<3,wp::float64> adj_2 = {};
    wp::vec_t<3,wp::float64> adj_3 = {};
    wp::float64 adj_4 = {};
    wp::float64 adj_5 = {};
    wp::float64 adj_6 = {};
    wp::float64 adj_7 = {};
    //---------
    // forward
    // def point_plane_distance(p: wp.vec3d, t0: wp.vec3d, t1: wp.vec3d, t2: wp.vec3d):       <L 556>
    // t0t1 = t1 - t0                                                                         <L 561>
    var_0 = wp::sub(var_t1, var_t0);
    // t0t2 = t2 - t0                                                                         <L 562>
    var_1 = wp::sub(var_t2, var_t0);
    // t0p = p - t0                                                                           <L 563>
    var_2 = wp::sub(var_p, var_t0);
    // b = wp.cross(t0t1, t0t2)                                                               <L 564>
    var_3 = wp::cross(var_0, var_1);
    // aTb = wp.dot(t0p, b)                                                                   <L 565>
    var_4 = wp::dot(var_2, var_3);
    // return aTb * aTb / wp.length_sq(b)                                                     <L 566>
    var_5 = wp::mul(var_4, var_4);
    var_6 = wp::length_sq(var_3);
    var_7 = wp::div(var_5, var_6);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_7 += adj_ret;
    wp::adj_div(var_5, var_6, var_7, adj_5, adj_6, adj_7);
    wp::adj_length_sq(var_3, adj_3, adj_6);
    wp::adj_mul(var_4, var_4, adj_4, adj_4, adj_5);
    // adj: return aTb * aTb / wp.length_sq(b)                                                <L 566>
    wp::adj_dot(var_2, var_3, adj_2, adj_3, adj_4);
    // adj: aTb = wp.dot(t0p, b)                                                              <L 565>
    wp::adj_cross(var_0, var_1, adj_0, adj_1, adj_3);
    // adj: b = wp.cross(t0t1, t0t2)                                                          <L 564>
    wp::adj_sub(var_p, var_t0, adj_p, adj_t0, adj_2);
    // adj: t0p = p - t0                                                                      <L 563>
    wp::adj_sub(var_t2, var_t0, adj_t2, adj_t0, adj_1);
    // adj: t0t2 = t2 - t0                                                                    <L 562>
    wp::adj_sub(var_t1, var_t0, adj_t1, adj_t0, adj_0);
    // adj: t0t1 = t1 - t0                                                                    <L 561>
    // adj: def point_plane_distance(p: wp.vec3d, t0: wp.vec3d, t1: wp.vec3d, t2: wp.vec3d):  <L 556>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/point_triangle_distance.py:9
static CUDA_CALLABLE wp::float64 point_triangle_distance_0(
    wp::vec_t<3,wp::float64> var_p,
    wp::vec_t<3,wp::float64> var_t0,
    wp::vec_t<3,wp::float64> var_t1,
    wp::vec_t<3,wp::float64> var_t2)
{
    //---------
    // primal vars
    wp::int32 var_0;
    const wp::int32 var_1 = 0;
    bool var_2;
    wp::float64 var_3;
    const wp::int32 var_4 = 1;
    bool var_5;
    wp::float64 var_6;
    const wp::int32 var_7 = 2;
    bool var_8;
    wp::float64 var_9;
    const wp::int32 var_10 = 3;
    bool var_11;
    wp::float64 var_12;
    const wp::int32 var_13 = 4;
    bool var_14;
    wp::float64 var_15;
    const wp::int32 var_16 = 5;
    bool var_17;
    wp::float64 var_18;
    const wp::int32 var_19 = 6;
    bool var_20;
    wp::float64 var_21;
    const wp::float32 var_22 = 1e+20;
    wp::float64 var_23;
    //---------
    // forward
    // def point_triangle_distance(p: wp.vec3d, t0: wp.vec3d, t1: wp.vec3d, t2: wp.vec3d) -> wp.float64:       <L 10>
    // dt = point_triangle_distance_type(p, t0, t1, t2)                                       <L 11>
    var_0 = point_triangle_distance_type_0(var_p, var_t0, var_t1, var_t2);
    // if dt == 0:                                                                            <L 12>
    var_2 = (var_0 == var_1);
    if (var_2) {
        // return point_point_distance(p, t0)                                                 <L 13>
        var_3 = point_point_distance_0(var_p, var_t0);
        return var_3;
    }
    if (!var_2) {
        // elif dt == 1:                                                                      <L 14>
        var_5 = (var_0 == var_4);
        if (var_5) {
            // return point_point_distance(p, t1)                                             <L 15>
            var_6 = point_point_distance_0(var_p, var_t1);
            return var_6;
        }
        if (!var_5) {
            // elif dt == 2:                                                                  <L 16>
            var_8 = (var_0 == var_7);
            if (var_8) {
                // return point_point_distance(p, t2)                                         <L 17>
                var_9 = point_point_distance_0(var_p, var_t2);
                return var_9;
            }
            if (!var_8) {
                // elif dt == 3:                                                              <L 18>
                var_11 = (var_0 == var_10);
                if (var_11) {
                    // return point_line_distance(p, t0, t1)                                  <L 19>
                    var_12 = point_line_distance_0(var_p, var_t0, var_t1);
                    return var_12;
                }
                if (!var_11) {
                    // elif dt == 4:                                                          <L 20>
                    var_14 = (var_0 == var_13);
                    if (var_14) {
                        // return point_line_distance(p, t1, t2)                              <L 21>
                        var_15 = point_line_distance_0(var_p, var_t1, var_t2);
                        return var_15;
                    }
                    if (!var_14) {
                        // elif dt == 5:                                                      <L 22>
                        var_17 = (var_0 == var_16);
                        if (var_17) {
                            // return point_line_distance(p, t2, t0)                          <L 23>
                            var_18 = point_line_distance_0(var_p, var_t2, var_t0);
                            return var_18;
                        }
                        if (!var_17) {
                            // elif dt == 6:                                                  <L 24>
                            var_20 = (var_0 == var_19);
                            if (var_20) {
                                // return point_plane_distance(p, t0, t1, t2)                 <L 25>
                                var_21 = point_plane_distance_0(var_p, var_t0, var_t1, var_t2);
                                return var_21;
                            }
                            if (!var_20) {
                                // return wp.float64(1e20)                                    <L 27>
                                var_23 = wp::float64(var_22);
                                return var_23;
                            }
                        }
                    }
                }
            }
        }
    }
    return {};
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/point_triangle_distance.py:9
static CUDA_CALLABLE void adj_point_triangle_distance_0(
    wp::vec_t<3,wp::float64> var_p,
    wp::vec_t<3,wp::float64> var_t0,
    wp::vec_t<3,wp::float64> var_t1,
    wp::vec_t<3,wp::float64> var_t2,
    wp::vec_t<3,wp::float64> & adj_p,
    wp::vec_t<3,wp::float64> & adj_t0,
    wp::vec_t<3,wp::float64> & adj_t1,
    wp::vec_t<3,wp::float64> & adj_t2,
    wp::float64 & adj_ret)
{
    //---------
    // primal vars
    wp::int32 var_0;
    const wp::int32 var_1 = 0;
    bool var_2;
    wp::float64 var_3;
    const wp::int32 var_4 = 1;
    bool var_5;
    wp::float64 var_6;
    const wp::int32 var_7 = 2;
    bool var_8;
    wp::float64 var_9;
    const wp::int32 var_10 = 3;
    bool var_11;
    wp::float64 var_12;
    const wp::int32 var_13 = 4;
    bool var_14;
    wp::float64 var_15;
    const wp::int32 var_16 = 5;
    bool var_17;
    wp::float64 var_18;
    const wp::int32 var_19 = 6;
    bool var_20;
    wp::float64 var_21;
    const wp::float32 var_22 = 1e+20;
    wp::float64 var_23;
    //---------
    // dual vars
    wp::int32 adj_0 = {};
    wp::int32 adj_1 = {};
    bool adj_2 = {};
    wp::float64 adj_3 = {};
    wp::int32 adj_4 = {};
    bool adj_5 = {};
    wp::float64 adj_6 = {};
    wp::int32 adj_7 = {};
    bool adj_8 = {};
    wp::float64 adj_9 = {};
    wp::int32 adj_10 = {};
    bool adj_11 = {};
    wp::float64 adj_12 = {};
    wp::int32 adj_13 = {};
    bool adj_14 = {};
    wp::float64 adj_15 = {};
    wp::int32 adj_16 = {};
    bool adj_17 = {};
    wp::float64 adj_18 = {};
    wp::int32 adj_19 = {};
    bool adj_20 = {};
    wp::float64 adj_21 = {};
    wp::float32 adj_22 = {};
    wp::float64 adj_23 = {};
    //---------
    // forward
    // def point_triangle_distance(p: wp.vec3d, t0: wp.vec3d, t1: wp.vec3d, t2: wp.vec3d) -> wp.float64:       <L 10>
    // dt = point_triangle_distance_type(p, t0, t1, t2)                                       <L 11>
    var_0 = point_triangle_distance_type_0(var_p, var_t0, var_t1, var_t2);
    // if dt == 0:                                                                            <L 12>
    var_2 = (var_0 == var_1);
    if (var_2) {
        // return point_point_distance(p, t0)                                                 <L 13>
        var_3 = point_point_distance_0(var_p, var_t0);
        goto label0;
    }
    if (!var_2) {
        // elif dt == 1:                                                                      <L 14>
        var_5 = (var_0 == var_4);
        if (var_5) {
            // return point_point_distance(p, t1)                                             <L 15>
            var_6 = point_point_distance_0(var_p, var_t1);
            goto label1;
        }
        if (!var_5) {
            // elif dt == 2:                                                                  <L 16>
            var_8 = (var_0 == var_7);
            if (var_8) {
                // return point_point_distance(p, t2)                                         <L 17>
                var_9 = point_point_distance_0(var_p, var_t2);
                goto label2;
            }
            if (!var_8) {
                // elif dt == 3:                                                              <L 18>
                var_11 = (var_0 == var_10);
                if (var_11) {
                    // return point_line_distance(p, t0, t1)                                  <L 19>
                    var_12 = point_line_distance_0(var_p, var_t0, var_t1);
                    goto label3;
                }
                if (!var_11) {
                    // elif dt == 4:                                                          <L 20>
                    var_14 = (var_0 == var_13);
                    if (var_14) {
                        // return point_line_distance(p, t1, t2)                              <L 21>
                        var_15 = point_line_distance_0(var_p, var_t1, var_t2);
                        goto label4;
                    }
                    if (!var_14) {
                        // elif dt == 5:                                                      <L 22>
                        var_17 = (var_0 == var_16);
                        if (var_17) {
                            // return point_line_distance(p, t2, t0)                          <L 23>
                            var_18 = point_line_distance_0(var_p, var_t2, var_t0);
                            goto label5;
                        }
                        if (!var_17) {
                            // elif dt == 6:                                                  <L 24>
                            var_20 = (var_0 == var_19);
                            if (var_20) {
                                // return point_plane_distance(p, t0, t1, t2)                 <L 25>
                                var_21 = point_plane_distance_0(var_p, var_t0, var_t1, var_t2);
                                goto label6;
                            }
                            if (!var_20) {
                                // return wp.float64(1e20)                                    <L 27>
                                var_23 = wp::float64(var_22);
                                goto label7;
                            }
                        }
                    }
                }
            }
        }
    }
    //---------
    // reverse
    if (!var_2) {
        if (!var_5) {
            if (!var_8) {
                if (!var_11) {
                    if (!var_14) {
                        if (!var_17) {
                            if (!var_20) {
                                label7:;
                                adj_23 += adj_ret;
                                wp::adj_float64(var_22, adj_22, adj_23);
                                // adj: return wp.float64(1e20)                               <L 27>
                            }
                            if (var_20) {
                                label6:;
                                adj_21 += adj_ret;
                                adj_point_plane_distance_0(var_p, var_t0, var_t1, var_t2, adj_p, adj_t0, adj_t1, adj_t2, adj_21);
                                // adj: return point_plane_distance(p, t0, t1, t2)            <L 25>
                            }
                            // adj: elif dt == 6:                                             <L 24>
                        }
                        if (var_17) {
                            label5:;
                            adj_18 += adj_ret;
                            adj_point_line_distance_0(var_p, var_t2, var_t0, adj_p, adj_t2, adj_t0, adj_18);
                            // adj: return point_line_distance(p, t2, t0)                     <L 23>
                        }
                        // adj: elif dt == 5:                                                 <L 22>
                    }
                    if (var_14) {
                        label4:;
                        adj_15 += adj_ret;
                        adj_point_line_distance_0(var_p, var_t1, var_t2, adj_p, adj_t1, adj_t2, adj_15);
                        // adj: return point_line_distance(p, t1, t2)                         <L 21>
                    }
                    // adj: elif dt == 4:                                                     <L 20>
                }
                if (var_11) {
                    label3:;
                    adj_12 += adj_ret;
                    adj_point_line_distance_0(var_p, var_t0, var_t1, adj_p, adj_t0, adj_t1, adj_12);
                    // adj: return point_line_distance(p, t0, t1)                             <L 19>
                }
                // adj: elif dt == 3:                                                         <L 18>
            }
            if (var_8) {
                label2:;
                adj_9 += adj_ret;
                adj_point_point_distance_0(var_p, var_t2, adj_p, adj_t2, adj_9);
                // adj: return point_point_distance(p, t2)                                    <L 17>
            }
            // adj: elif dt == 2:                                                             <L 16>
        }
        if (var_5) {
            label1:;
            adj_6 += adj_ret;
            adj_point_point_distance_0(var_p, var_t1, adj_p, adj_t1, adj_6);
            // adj: return point_point_distance(p, t1)                                        <L 15>
        }
        // adj: elif dt == 1:                                                                 <L 14>
    }
    if (var_2) {
        label0:;
        adj_3 += adj_ret;
        adj_point_point_distance_0(var_p, var_t0, adj_p, adj_t0, adj_3);
        // adj: return point_point_distance(p, t0)                                            <L 13>
    }
    // adj: if dt == 0:                                                                       <L 12>
    adj_point_triangle_distance_type_0(var_p, var_t0, var_t1, var_t2, adj_p, adj_t0, adj_t1, adj_t2, adj_0);
    // adj: dt = point_triangle_distance_type(p, t0, t1, t2)                                  <L 11>
    // adj: def point_triangle_distance(p: wp.vec3d, t0: wp.vec3d, t1: wp.vec3d, t2: wp.vec3d) -> wp.float64:  <L 10>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/point_triangle_ccd.py:6
static CUDA_CALLABLE wp::float64 point_triangle_ccd_0(
    wp::vec_t<3,wp::float64> var_p,
    wp::vec_t<3,wp::float64> var_t0,
    wp::vec_t<3,wp::float64> var_t1,
    wp::vec_t<3,wp::float64> var_t2,
    wp::vec_t<3,wp::float64> var_dp,
    wp::vec_t<3,wp::float64> var_dt0,
    wp::vec_t<3,wp::float64> var_dt1,
    wp::vec_t<3,wp::float64> var_dt2,
    wp::float64 var_eta,
    wp::float64 var_thickness)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::vec_t<3,wp::float64> var_1;
    wp::vec_t<3,wp::float64> var_2;
    const wp::float32 var_3 = 4.0;
    wp::float64 var_4;
    wp::vec_t<3,wp::float64> var_5;
    wp::vec_t<3,wp::float64> var_6;
    wp::vec_t<3,wp::float64> var_7;
    wp::vec_t<3,wp::float64> var_8;
    wp::vec_t<3,wp::float64> var_9;
    wp::vec_t<3,wp::float64> var_10;
    wp::float64 var_11;
    const wp::int32 var_12 = 0;
    wp::float64 var_13;
    const wp::int32 var_14 = 1;
    wp::float64 var_15;
    const wp::int32 var_16 = 2;
    wp::float64 var_17;
    const wp::int32 var_18 = 0;
    wp::float64 var_19;
    const wp::int32 var_20 = 1;
    wp::float64 var_21;
    wp::float64 var_22;
    const wp::int32 var_23 = 2;
    wp::float64 var_24;
    wp::float64 var_25;
    wp::float64 var_26;
    wp::float64 var_27;
    const wp::float32 var_28 = 0.0;
    wp::float64 var_29;
    bool var_30;
    const wp::float32 var_31 = 1.0;
    wp::float64 var_32;
    wp::float64 var_33;
    wp::float64 var_34;
    wp::float64 var_35;
    wp::float64 var_36;
    wp::float64 var_37;
    wp::float64 var_38;
    wp::float64 var_39;
    const wp::float32 var_40 = 0.0;
    wp::float64 var_41;
    const wp::int32 var_42 = 100000;
    wp::range_t var_43;
    wp::int32 var_44;
    const wp::float32 var_45 = 1.0;
    wp::float64 var_46;
    wp::float64 var_47;
    wp::float64 var_48;
    wp::float64 var_49;
    wp::float64 var_50;
    wp::float64 var_51;
    wp::float64 var_52;
    wp::float64 var_53;
    wp::vec_t<3,wp::float64> var_54;
    wp::vec_t<3,wp::float64> var_55;
    wp::vec_t<3,wp::float64> var_56;
    wp::vec_t<3,wp::float64> var_57;
    wp::vec_t<3,wp::float64> var_58;
    wp::vec_t<3,wp::float64> var_59;
    wp::vec_t<3,wp::float64> var_60;
    wp::vec_t<3,wp::float64> var_61;
    wp::float64 var_62;
    wp::float64 var_63;
    wp::float64 var_64;
    wp::float64 var_65;
    wp::float64 var_66;
    wp::float64 var_67;
    bool var_68;
    bool var_69;
    wp::vec_t<3,wp::float64> var_70;
    wp::vec_t<3,wp::float64> var_71;
    wp::vec_t<3,wp::float64> var_72;
    wp::vec_t<3,wp::float64> var_73;
    wp::float64 var_74;
    wp::float64 var_75;
    wp::float64 var_76;
    const wp::float32 var_77 = 1.0;
    wp::float64 var_78;
    bool var_79;
    const wp::float32 var_80 = 1.0;
    wp::float64 var_81;
    //---------
    // forward
    // def point_triangle_ccd(                                                                <L 7>
    // mov = (dt0 + dt1 + dt2 + dp) / wp.float64(4.0)                                         <L 19>
    var_0 = wp::add(var_dt0, var_dt1);
    var_1 = wp::add(var_0, var_dt2);
    var_2 = wp::add(var_1, var_dp);
    var_4 = wp::float64(var_3);
    var_5 = wp::div(var_2, var_4);
    // dt0 -= mov                                                                             <L 20>
    var_6 = wp::sub(var_dt0, var_5);
    // dt1 -= mov                                                                             <L 21>
    var_7 = wp::sub(var_dt1, var_5);
    // dt2 -= mov                                                                             <L 22>
    var_8 = wp::sub(var_dt2, var_5);
    // dp -= mov                                                                              <L 23>
    var_9 = wp::sub(var_dp, var_5);
    // disp_mag2_vec = wp.vec3d()                                                             <L 25>
    var_10 = wp::vec_t<3,wp::float64>();
    // disp_mag2_vec[0] = wp.length_sq(dt0)                                                   <L 26>
    var_11 = wp::length_sq(var_6);
    wp::assign_inplace(var_10, var_12, var_11);
    // disp_mag2_vec[1] = wp.length_sq(dt1)                                                   <L 27>
    var_13 = wp::length_sq(var_7);
    wp::assign_inplace(var_10, var_14, var_13);
    // disp_mag2_vec[2] = wp.length_sq(dt2)                                                   <L 28>
    var_15 = wp::length_sq(var_8);
    wp::assign_inplace(var_10, var_16, var_15);
    // max_disp_mag = wp.length(dp) + wp.sqrt(wp.max(wp.max(disp_mag2_vec[0], disp_mag2_vec[1]), disp_mag2_vec[2]))       <L 30>
    var_17 = wp::length(var_9);
    var_19 = wp::extract(var_10, var_18);
    var_21 = wp::extract(var_10, var_20);
    var_22 = wp::max(var_19, var_21);
    var_24 = wp::extract(var_10, var_23);
    var_25 = wp::max(var_22, var_24);
    var_26 = wp::sqrt(var_25);
    var_27 = wp::add(var_17, var_26);
    // if max_disp_mag == wp.float64(0.0):                                                    <L 31>
    var_29 = wp::float64(var_28);
    var_30 = (var_27 == var_29);
    if (var_30) {
        // return wp.float64(1.0)                                                             <L 32>
        var_32 = wp::float64(var_31);
        return var_32;
    }
    // dist2_cur = point_triangle_distance(p, t0, t1, t2)                                     <L 34>
    var_33 = point_triangle_distance_0(var_p, var_t0, var_t1, var_t2);
    // dist_cur = wp.sqrt(dist2_cur)                                                          <L 35>
    var_34 = wp::sqrt(var_33);
    // gap = eta * (dist2_cur - thickness * thickness) / (dist_cur + thickness)               <L 36>
    var_35 = wp::mul(var_thickness, var_thickness);
    var_36 = wp::sub(var_33, var_35);
    var_37 = wp::mul(var_eta, var_36);
    var_38 = wp::add(var_34, var_thickness);
    var_39 = wp::div(var_37, var_38);
    // toc = wp.float64(0.0)                                                                  <L 37>
    var_41 = wp::float64(var_40);
    // for _ in range(100000):                                                                <L 39>
    var_43 = wp::range(var_42);
    start_for_1:;
        if (iter_cmp(var_43) == 0) goto end_for_1;
        var_44 = wp::iter_next(var_43);
        // toc_lower_bound = (wp.float64(1.0) - eta) * (dist2_cur - thickness * thickness) / ((dist_cur + thickness) * max_disp_mag)       <L 40>
        var_46 = wp::float64(var_45);
        var_47 = wp::sub(var_46, var_eta);
        var_48 = wp::mul(var_thickness, var_thickness);
        var_49 = wp::sub(var_33, var_48);
        var_50 = wp::mul(var_47, var_49);
        var_51 = wp::add(var_34, var_thickness);
        var_52 = wp::mul(var_51, var_27);
        var_53 = wp::div(var_50, var_52);
        // p += toc_lower_bound * dp                                                          <L 41>
        var_54 = wp::mul(var_53, var_9);
        var_55 = wp::add(var_p, var_54);
        // t0 += toc_lower_bound * dt0                                                        <L 42>
        var_56 = wp::mul(var_53, var_6);
        var_57 = wp::add(var_t0, var_56);
        // t1 += toc_lower_bound * dt1                                                        <L 43>
        var_58 = wp::mul(var_53, var_7);
        var_59 = wp::add(var_t1, var_58);
        // t2 += toc_lower_bound * dt2                                                        <L 44>
        var_60 = wp::mul(var_53, var_8);
        var_61 = wp::add(var_t2, var_60);
        // dist2_cur = point_triangle_distance(p, t0, t1, t2)                                 <L 46>
        var_62 = point_triangle_distance_0(var_55, var_57, var_59, var_61);
        // dist_cur = wp.sqrt(dist2_cur)                                                      <L 47>
        var_63 = wp::sqrt(var_62);
        // if toc and ((dist2_cur - thickness * thickness) / (dist_cur + thickness) < gap):       <L 48>
        var_64 = wp::mul(var_thickness, var_thickness);
        var_65 = wp::sub(var_62, var_64);
        var_66 = wp::add(var_63, var_thickness);
        var_67 = wp::div(var_65, var_66);
        var_68 = (var_67 < var_39);
        var_69 = var_41 && var_68;
        if (var_69) {
            // break                                                                          <L 49>
            wp::assign(var_p, var_55);
            wp::assign(var_t0, var_57);
            wp::assign(var_t1, var_59);
            wp::assign(var_t2, var_61);
            wp::assign(var_33, var_62);
            wp::assign(var_34, var_63);
            goto end_for_1;
        }
        var_70 = wp::where(var_69, var_p, var_55);
        var_71 = wp::where(var_69, var_t0, var_57);
        var_72 = wp::where(var_69, var_t1, var_59);
        var_73 = wp::where(var_69, var_t2, var_61);
        var_74 = wp::where(var_69, var_33, var_62);
        var_75 = wp::where(var_69, var_34, var_63);
        // toc += toc_lower_bound                                                             <L 51>
        var_76 = wp::add(var_41, var_53);
        // if toc > wp.float64(1.0):                                                          <L 52>
        var_78 = wp::float64(var_77);
        var_79 = (var_76 > var_78);
        if (var_79) {
            // return wp.float64(1.0)                                                         <L 53>
            var_81 = wp::float64(var_80);
            return var_81;
        }
        wp::assign(var_p, var_70);
        wp::assign(var_t0, var_71);
        wp::assign(var_t1, var_72);
        wp::assign(var_t2, var_73);
        wp::assign(var_33, var_74);
        wp::assign(var_34, var_75);
        wp::assign(var_41, var_76);
        goto start_for_1;
    end_for_1:;
    // return toc                                                                             <L 55>
    return var_41;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/point_triangle_ccd.py:6
static CUDA_CALLABLE void adj_point_triangle_ccd_0(
    wp::vec_t<3,wp::float64> var_p,
    wp::vec_t<3,wp::float64> var_t0,
    wp::vec_t<3,wp::float64> var_t1,
    wp::vec_t<3,wp::float64> var_t2,
    wp::vec_t<3,wp::float64> var_dp,
    wp::vec_t<3,wp::float64> var_dt0,
    wp::vec_t<3,wp::float64> var_dt1,
    wp::vec_t<3,wp::float64> var_dt2,
    wp::float64 var_eta,
    wp::float64 var_thickness,
    wp::vec_t<3,wp::float64> & adj_p,
    wp::vec_t<3,wp::float64> & adj_t0,
    wp::vec_t<3,wp::float64> & adj_t1,
    wp::vec_t<3,wp::float64> & adj_t2,
    wp::vec_t<3,wp::float64> & adj_dp,
    wp::vec_t<3,wp::float64> & adj_dt0,
    wp::vec_t<3,wp::float64> & adj_dt1,
    wp::vec_t<3,wp::float64> & adj_dt2,
    wp::float64 & adj_eta,
    wp::float64 & adj_thickness,
    wp::float64 & adj_ret)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::vec_t<3,wp::float64> var_1;
    wp::vec_t<3,wp::float64> var_2;
    const wp::float32 var_3 = 4.0;
    wp::float64 var_4;
    wp::vec_t<3,wp::float64> var_5;
    wp::vec_t<3,wp::float64> var_6;
    wp::vec_t<3,wp::float64> var_7;
    wp::vec_t<3,wp::float64> var_8;
    wp::vec_t<3,wp::float64> var_9;
    wp::vec_t<3,wp::float64> var_10;
    wp::float64 var_11;
    const wp::int32 var_12 = 0;
    wp::float64 var_13;
    const wp::int32 var_14 = 1;
    wp::float64 var_15;
    const wp::int32 var_16 = 2;
    wp::float64 var_17;
    const wp::int32 var_18 = 0;
    wp::float64 var_19;
    const wp::int32 var_20 = 1;
    wp::float64 var_21;
    wp::float64 var_22;
    const wp::int32 var_23 = 2;
    wp::float64 var_24;
    wp::float64 var_25;
    wp::float64 var_26;
    wp::float64 var_27;
    const wp::float32 var_28 = 0.0;
    wp::float64 var_29;
    bool var_30;
    const wp::float32 var_31 = 1.0;
    wp::float64 var_32;
    wp::float64 var_33;
    wp::float64 var_34;
    wp::float64 var_35;
    wp::float64 var_36;
    wp::float64 var_37;
    wp::float64 var_38;
    wp::float64 var_39;
    const wp::float32 var_40 = 0.0;
    wp::float64 var_41;
    const wp::int32 var_42 = 100000;
    wp::range_t var_43;
    wp::int32 var_44;
    const wp::float32 var_45 = 1.0;
    wp::float64 var_46;
    wp::float64 var_47;
    wp::float64 var_48;
    wp::float64 var_49;
    wp::float64 var_50;
    wp::float64 var_51;
    wp::float64 var_52;
    wp::float64 var_53;
    wp::vec_t<3,wp::float64> var_54;
    wp::vec_t<3,wp::float64> var_55;
    wp::vec_t<3,wp::float64> var_56;
    wp::vec_t<3,wp::float64> var_57;
    wp::vec_t<3,wp::float64> var_58;
    wp::vec_t<3,wp::float64> var_59;
    wp::vec_t<3,wp::float64> var_60;
    wp::vec_t<3,wp::float64> var_61;
    wp::float64 var_62;
    wp::float64 var_63;
    wp::float64 var_64;
    wp::float64 var_65;
    wp::float64 var_66;
    wp::float64 var_67;
    bool var_68;
    bool var_69;
    wp::vec_t<3,wp::float64> var_70;
    wp::vec_t<3,wp::float64> var_71;
    wp::vec_t<3,wp::float64> var_72;
    wp::vec_t<3,wp::float64> var_73;
    wp::float64 var_74;
    wp::float64 var_75;
    wp::float64 var_76;
    const wp::float32 var_77 = 1.0;
    wp::float64 var_78;
    bool var_79;
    const wp::float32 var_80 = 1.0;
    wp::float64 var_81;
    //---------
    // dual vars
    wp::vec_t<3,wp::float64> adj_0 = {};
    wp::vec_t<3,wp::float64> adj_1 = {};
    wp::vec_t<3,wp::float64> adj_2 = {};
    wp::float32 adj_3 = {};
    wp::float64 adj_4 = {};
    wp::vec_t<3,wp::float64> adj_5 = {};
    wp::vec_t<3,wp::float64> adj_6 = {};
    wp::vec_t<3,wp::float64> adj_7 = {};
    wp::vec_t<3,wp::float64> adj_8 = {};
    wp::vec_t<3,wp::float64> adj_9 = {};
    wp::vec_t<3,wp::float64> adj_10 = {};
    wp::float64 adj_11 = {};
    wp::int32 adj_12 = {};
    wp::float64 adj_13 = {};
    wp::int32 adj_14 = {};
    wp::float64 adj_15 = {};
    wp::int32 adj_16 = {};
    wp::float64 adj_17 = {};
    wp::int32 adj_18 = {};
    wp::float64 adj_19 = {};
    wp::int32 adj_20 = {};
    wp::float64 adj_21 = {};
    wp::float64 adj_22 = {};
    wp::int32 adj_23 = {};
    wp::float64 adj_24 = {};
    wp::float64 adj_25 = {};
    wp::float64 adj_26 = {};
    wp::float64 adj_27 = {};
    wp::float32 adj_28 = {};
    wp::float64 adj_29 = {};
    bool adj_30 = {};
    wp::float32 adj_31 = {};
    wp::float64 adj_32 = {};
    wp::float64 adj_33 = {};
    wp::float64 adj_34 = {};
    wp::float64 adj_35 = {};
    wp::float64 adj_36 = {};
    wp::float64 adj_37 = {};
    wp::float64 adj_38 = {};
    wp::float64 adj_39 = {};
    wp::float32 adj_40 = {};
    wp::float64 adj_41 = {};
    wp::int32 adj_42 = {};
    wp::range_t adj_43 = {};
    wp::int32 adj_44 = {};
    wp::float32 adj_45 = {};
    wp::float64 adj_46 = {};
    wp::float64 adj_47 = {};
    wp::float64 adj_48 = {};
    wp::float64 adj_49 = {};
    wp::float64 adj_50 = {};
    wp::float64 adj_51 = {};
    wp::float64 adj_52 = {};
    wp::float64 adj_53 = {};
    wp::vec_t<3,wp::float64> adj_54 = {};
    wp::vec_t<3,wp::float64> adj_55 = {};
    wp::vec_t<3,wp::float64> adj_56 = {};
    wp::vec_t<3,wp::float64> adj_57 = {};
    wp::vec_t<3,wp::float64> adj_58 = {};
    wp::vec_t<3,wp::float64> adj_59 = {};
    wp::vec_t<3,wp::float64> adj_60 = {};
    wp::vec_t<3,wp::float64> adj_61 = {};
    wp::float64 adj_62 = {};
    wp::float64 adj_63 = {};
    wp::float64 adj_64 = {};
    wp::float64 adj_65 = {};
    wp::float64 adj_66 = {};
    wp::float64 adj_67 = {};
    bool adj_68 = {};
    bool adj_69 = {};
    wp::vec_t<3,wp::float64> adj_70 = {};
    wp::vec_t<3,wp::float64> adj_71 = {};
    wp::vec_t<3,wp::float64> adj_72 = {};
    wp::vec_t<3,wp::float64> adj_73 = {};
    wp::float64 adj_74 = {};
    wp::float64 adj_75 = {};
    wp::float64 adj_76 = {};
    wp::float32 adj_77 = {};
    wp::float64 adj_78 = {};
    bool adj_79 = {};
    wp::float32 adj_80 = {};
    wp::float64 adj_81 = {};
    //---------
    // forward
    // def point_triangle_ccd(                                                                <L 7>
    // mov = (dt0 + dt1 + dt2 + dp) / wp.float64(4.0)                                         <L 19>
    var_0 = wp::add(var_dt0, var_dt1);
    var_1 = wp::add(var_0, var_dt2);
    var_2 = wp::add(var_1, var_dp);
    var_4 = wp::float64(var_3);
    var_5 = wp::div(var_2, var_4);
    // dt0 -= mov                                                                             <L 20>
    var_6 = wp::sub(var_dt0, var_5);
    // dt1 -= mov                                                                             <L 21>
    var_7 = wp::sub(var_dt1, var_5);
    // dt2 -= mov                                                                             <L 22>
    var_8 = wp::sub(var_dt2, var_5);
    // dp -= mov                                                                              <L 23>
    var_9 = wp::sub(var_dp, var_5);
    // disp_mag2_vec = wp.vec3d()                                                             <L 25>
    var_10 = wp::vec_t<3,wp::float64>();
    // disp_mag2_vec[0] = wp.length_sq(dt0)                                                   <L 26>
    var_11 = wp::length_sq(var_6);
    wp::assign_inplace(var_10, var_12, var_11);
    // disp_mag2_vec[1] = wp.length_sq(dt1)                                                   <L 27>
    var_13 = wp::length_sq(var_7);
    wp::assign_inplace(var_10, var_14, var_13);
    // disp_mag2_vec[2] = wp.length_sq(dt2)                                                   <L 28>
    var_15 = wp::length_sq(var_8);
    wp::assign_inplace(var_10, var_16, var_15);
    // max_disp_mag = wp.length(dp) + wp.sqrt(wp.max(wp.max(disp_mag2_vec[0], disp_mag2_vec[1]), disp_mag2_vec[2]))       <L 30>
    var_17 = wp::length(var_9);
    var_19 = wp::extract(var_10, var_18);
    var_21 = wp::extract(var_10, var_20);
    var_22 = wp::max(var_19, var_21);
    var_24 = wp::extract(var_10, var_23);
    var_25 = wp::max(var_22, var_24);
    var_26 = wp::sqrt(var_25);
    var_27 = wp::add(var_17, var_26);
    // if max_disp_mag == wp.float64(0.0):                                                    <L 31>
    var_29 = wp::float64(var_28);
    var_30 = (var_27 == var_29);
    if (var_30) {
        // return wp.float64(1.0)                                                             <L 32>
        var_32 = wp::float64(var_31);
        goto label0;
    }
    // dist2_cur = point_triangle_distance(p, t0, t1, t2)                                     <L 34>
    var_33 = point_triangle_distance_0(var_p, var_t0, var_t1, var_t2);
    // dist_cur = wp.sqrt(dist2_cur)                                                          <L 35>
    var_34 = wp::sqrt(var_33);
    // gap = eta * (dist2_cur - thickness * thickness) / (dist_cur + thickness)               <L 36>
    var_35 = wp::mul(var_thickness, var_thickness);
    var_36 = wp::sub(var_33, var_35);
    var_37 = wp::mul(var_eta, var_36);
    var_38 = wp::add(var_34, var_thickness);
    var_39 = wp::div(var_37, var_38);
    // toc = wp.float64(0.0)                                                                  <L 37>
    var_41 = wp::float64(var_40);
    // for _ in range(100000):                                                                <L 39>
    var_43 = wp::range(var_42);
    // return toc                                                                             <L 55>
    goto label4;
    //---------
    // reverse
    label4:;
    adj_41 += adj_ret;
    // adj: return toc                                                                        <L 55>
    var_43 = wp::iter_reverse(var_43);
    start_for_1:;
        if (iter_cmp(var_43) == 0) goto end_for_1;
        var_44 = wp::iter_next(var_43);
    	adj_45 = {};
    	adj_46 = {};
    	adj_47 = {};
    	adj_48 = {};
    	adj_49 = {};
    	adj_50 = {};
    	adj_51 = {};
    	adj_52 = {};
    	adj_53 = {};
    	adj_54 = {};
    	adj_55 = {};
    	adj_56 = {};
    	adj_57 = {};
    	adj_58 = {};
    	adj_59 = {};
    	adj_60 = {};
    	adj_61 = {};
    	adj_62 = {};
    	adj_63 = {};
    	adj_64 = {};
    	adj_65 = {};
    	adj_66 = {};
    	adj_67 = {};
    	adj_68 = {};
    	adj_69 = {};
    	adj_70 = {};
    	adj_71 = {};
    	adj_72 = {};
    	adj_73 = {};
    	adj_74 = {};
    	adj_75 = {};
    	adj_76 = {};
    	adj_77 = {};
    	adj_78 = {};
    	adj_79 = {};
    	adj_80 = {};
    	adj_81 = {};
        // toc_lower_bound = (wp.float64(1.0) - eta) * (dist2_cur - thickness * thickness) / ((dist_cur + thickness) * max_disp_mag)       <L 40>
        var_46 = wp::float64(var_45);
        var_47 = wp::sub(var_46, var_eta);
        var_48 = wp::mul(var_thickness, var_thickness);
        var_49 = wp::sub(var_33, var_48);
        var_50 = wp::mul(var_47, var_49);
        var_51 = wp::add(var_34, var_thickness);
        var_52 = wp::mul(var_51, var_27);
        var_53 = wp::div(var_50, var_52);
        // p += toc_lower_bound * dp                                                          <L 41>
        var_54 = wp::mul(var_53, var_9);
        var_55 = wp::add(var_p, var_54);
        // t0 += toc_lower_bound * dt0                                                        <L 42>
        var_56 = wp::mul(var_53, var_6);
        var_57 = wp::add(var_t0, var_56);
        // t1 += toc_lower_bound * dt1                                                        <L 43>
        var_58 = wp::mul(var_53, var_7);
        var_59 = wp::add(var_t1, var_58);
        // t2 += toc_lower_bound * dt2                                                        <L 44>
        var_60 = wp::mul(var_53, var_8);
        var_61 = wp::add(var_t2, var_60);
        // dist2_cur = point_triangle_distance(p, t0, t1, t2)                                 <L 46>
        var_62 = point_triangle_distance_0(var_55, var_57, var_59, var_61);
        // dist_cur = wp.sqrt(dist2_cur)                                                      <L 47>
        var_63 = wp::sqrt(var_62);
        // if toc and ((dist2_cur - thickness * thickness) / (dist_cur + thickness) < gap):       <L 48>
        var_64 = wp::mul(var_thickness, var_thickness);
        var_65 = wp::sub(var_62, var_64);
        var_66 = wp::add(var_63, var_thickness);
        var_67 = wp::div(var_65, var_66);
        var_68 = (var_67 < var_39);
        var_69 = var_41 && var_68;
        if (var_69) {
            // break                                                                          <L 49>
            wp::assign(var_p, var_55);
            wp::assign(var_t0, var_57);
            wp::assign(var_t1, var_59);
            wp::assign(var_t2, var_61);
            wp::assign(var_33, var_62);
            wp::assign(var_34, var_63);
            goto end_for_1;
        }
        var_70 = wp::where(var_69, var_p, var_55);
        var_71 = wp::where(var_69, var_t0, var_57);
        var_72 = wp::where(var_69, var_t1, var_59);
        var_73 = wp::where(var_69, var_t2, var_61);
        var_74 = wp::where(var_69, var_33, var_62);
        var_75 = wp::where(var_69, var_34, var_63);
        // toc += toc_lower_bound                                                             <L 51>
        var_76 = wp::add(var_41, var_53);
        // if toc > wp.float64(1.0):                                                          <L 52>
        var_78 = wp::float64(var_77);
        var_79 = (var_76 > var_78);
        if (var_79) {
            // return wp.float64(1.0)                                                         <L 53>
            var_81 = wp::float64(var_80);
            goto label3;
        }
        wp::assign(var_p, var_70);
        wp::assign(var_t0, var_71);
        wp::assign(var_t1, var_72);
        wp::assign(var_t2, var_73);
        wp::assign(var_33, var_74);
        wp::assign(var_34, var_75);
        wp::assign(var_41, var_76);
        wp::adj_assign(var_41, var_76, adj_41, adj_76);
        wp::adj_assign(var_34, var_75, adj_34, adj_75);
        wp::adj_assign(var_33, var_74, adj_33, adj_74);
        wp::adj_assign(var_t2, var_73, adj_t2, adj_73);
        wp::adj_assign(var_t1, var_72, adj_t1, adj_72);
        wp::adj_assign(var_t0, var_71, adj_t0, adj_71);
        wp::adj_assign(var_p, var_70, adj_p, adj_70);
        if (var_79) {
            label3:;
            adj_81 += adj_ret;
            wp::adj_float64(var_80, adj_80, adj_81);
            // adj: return wp.float64(1.0)                                                    <L 53>
        }
        wp::adj_float64(var_77, adj_77, adj_78);
        // adj: if toc > wp.float64(1.0):                                                     <L 52>
        wp::adj_add(var_41, var_53, adj_41, adj_53, adj_76);
        // adj: toc += toc_lower_bound                                                        <L 51>
        wp::adj_where(var_69, var_34, var_63, adj_69, adj_34, adj_63, adj_75);
        wp::adj_where(var_69, var_33, var_62, adj_69, adj_33, adj_62, adj_74);
        wp::adj_where(var_69, var_t2, var_61, adj_69, adj_t2, adj_61, adj_73);
        wp::adj_where(var_69, var_t1, var_59, adj_69, adj_t1, adj_59, adj_72);
        wp::adj_where(var_69, var_t0, var_57, adj_69, adj_t0, adj_57, adj_71);
        wp::adj_where(var_69, var_p, var_55, adj_69, adj_p, adj_55, adj_70);
        if (var_69) {
            wp::adj_assign(var_34, var_63, adj_34, adj_63);
            wp::adj_assign(var_33, var_62, adj_33, adj_62);
            wp::adj_assign(var_t2, var_61, adj_t2, adj_61);
            wp::adj_assign(var_t1, var_59, adj_t1, adj_59);
            wp::adj_assign(var_t0, var_57, adj_t0, adj_57);
            wp::adj_assign(var_p, var_55, adj_p, adj_55);
            // adj: break                                                                     <L 49>
        }
        wp::adj_div(var_65, var_66, var_67, adj_65, adj_66, adj_67);
        wp::adj_add(var_63, var_thickness, adj_63, adj_thickness, adj_66);
        wp::adj_sub(var_62, var_64, adj_62, adj_64, adj_65);
        wp::adj_mul(var_thickness, var_thickness, adj_thickness, adj_thickness, adj_64);
        // adj: if toc and ((dist2_cur - thickness * thickness) / (dist_cur + thickness) < gap):  <L 48>
        wp::adj_sqrt(var_62, var_63, adj_62, adj_63);
        // adj: dist_cur = wp.sqrt(dist2_cur)                                                 <L 47>
        adj_point_triangle_distance_0(var_55, var_57, var_59, var_61, adj_55, adj_57, adj_59, adj_61, adj_62);
        // adj: dist2_cur = point_triangle_distance(p, t0, t1, t2)                            <L 46>
        wp::adj_add(var_t2, var_60, adj_t2, adj_60, adj_61);
        wp::adj_mul(var_53, var_8, adj_53, adj_8, adj_60);
        // adj: t2 += toc_lower_bound * dt2                                                   <L 44>
        wp::adj_add(var_t1, var_58, adj_t1, adj_58, adj_59);
        wp::adj_mul(var_53, var_7, adj_53, adj_7, adj_58);
        // adj: t1 += toc_lower_bound * dt1                                                   <L 43>
        wp::adj_add(var_t0, var_56, adj_t0, adj_56, adj_57);
        wp::adj_mul(var_53, var_6, adj_53, adj_6, adj_56);
        // adj: t0 += toc_lower_bound * dt0                                                   <L 42>
        wp::adj_add(var_p, var_54, adj_p, adj_54, adj_55);
        wp::adj_mul(var_53, var_9, adj_53, adj_9, adj_54);
        // adj: p += toc_lower_bound * dp                                                     <L 41>
        wp::adj_div(var_50, var_52, var_53, adj_50, adj_52, adj_53);
        wp::adj_mul(var_51, var_27, adj_51, adj_27, adj_52);
        wp::adj_add(var_34, var_thickness, adj_34, adj_thickness, adj_51);
        wp::adj_mul(var_47, var_49, adj_47, adj_49, adj_50);
        wp::adj_sub(var_33, var_48, adj_33, adj_48, adj_49);
        wp::adj_mul(var_thickness, var_thickness, adj_thickness, adj_thickness, adj_48);
        wp::adj_sub(var_46, var_eta, adj_46, adj_eta, adj_47);
        wp::adj_float64(var_45, adj_45, adj_46);
        // adj: toc_lower_bound = (wp.float64(1.0) - eta) * (dist2_cur - thickness * thickness) / ((dist_cur + thickness) * max_disp_mag)  <L 40>
    	goto start_for_1;
    end_for_1:;
    wp::adj_range(var_42, adj_42, adj_43);
    // adj: for _ in range(100000):                                                           <L 39>
    wp::adj_float64(var_40, adj_40, adj_41);
    // adj: toc = wp.float64(0.0)                                                             <L 37>
    wp::adj_div(var_37, var_38, var_39, adj_37, adj_38, adj_39);
    wp::adj_add(var_34, var_thickness, adj_34, adj_thickness, adj_38);
    wp::adj_mul(var_eta, var_36, adj_eta, adj_36, adj_37);
    wp::adj_sub(var_33, var_35, adj_33, adj_35, adj_36);
    wp::adj_mul(var_thickness, var_thickness, adj_thickness, adj_thickness, adj_35);
    // adj: gap = eta * (dist2_cur - thickness * thickness) / (dist_cur + thickness)          <L 36>
    wp::adj_sqrt(var_33, var_34, adj_33, adj_34);
    // adj: dist_cur = wp.sqrt(dist2_cur)                                                     <L 35>
    adj_point_triangle_distance_0(var_p, var_t0, var_t1, var_t2, adj_p, adj_t0, adj_t1, adj_t2, adj_33);
    // adj: dist2_cur = point_triangle_distance(p, t0, t1, t2)                                <L 34>
    if (var_30) {
        label0:;
        adj_32 += adj_ret;
        wp::adj_float64(var_31, adj_31, adj_32);
        // adj: return wp.float64(1.0)                                                        <L 32>
    }
    wp::adj_float64(var_28, adj_28, adj_29);
    // adj: if max_disp_mag == wp.float64(0.0):                                               <L 31>
    wp::adj_add(var_17, var_26, adj_17, adj_26, adj_27);
    wp::adj_sqrt(var_25, var_26, adj_25, adj_26);
    wp::adj_max(var_22, var_24, adj_22, adj_24, adj_25);
    wp::adj_extract(var_10, var_23, adj_10, adj_23, adj_24);
    wp::adj_max(var_19, var_21, adj_19, adj_21, adj_22);
    wp::adj_extract(var_10, var_20, adj_10, adj_20, adj_21);
    wp::adj_extract(var_10, var_18, adj_10, adj_18, adj_19);
    wp::adj_length(var_9, var_17, adj_9, adj_17);
    // adj: max_disp_mag = wp.length(dp) + wp.sqrt(wp.max(wp.max(disp_mag2_vec[0], disp_mag2_vec[1]), disp_mag2_vec[2]))  <L 30>
    wp::adj_assign_inplace(var_10, var_16, var_15, adj_10, adj_16, adj_15);
    wp::adj_length_sq(var_8, adj_8, adj_15);
    // adj: disp_mag2_vec[2] = wp.length_sq(dt2)                                              <L 28>
    wp::adj_assign_inplace(var_10, var_14, var_13, adj_10, adj_14, adj_13);
    wp::adj_length_sq(var_7, adj_7, adj_13);
    // adj: disp_mag2_vec[1] = wp.length_sq(dt1)                                              <L 27>
    wp::adj_assign_inplace(var_10, var_12, var_11, adj_10, adj_12, adj_11);
    wp::adj_length_sq(var_6, adj_6, adj_11);
    // adj: disp_mag2_vec[0] = wp.length_sq(dt0)                                              <L 26>
    // adj: disp_mag2_vec = wp.vec3d()                                                        <L 25>
    wp::adj_sub(var_dp, var_5, adj_dp, adj_5, adj_9);
    // adj: dp -= mov                                                                         <L 23>
    wp::adj_sub(var_dt2, var_5, adj_dt2, adj_5, adj_8);
    // adj: dt2 -= mov                                                                        <L 22>
    wp::adj_sub(var_dt1, var_5, adj_dt1, adj_5, adj_7);
    // adj: dt1 -= mov                                                                        <L 21>
    wp::adj_sub(var_dt0, var_5, adj_dt0, adj_5, adj_6);
    // adj: dt0 -= mov                                                                        <L 20>
    wp::adj_div(var_2, var_4, adj_2, adj_4, adj_5);
    wp::adj_float64(var_3, adj_3, adj_4);
    wp::adj_add(var_1, var_dp, adj_1, adj_dp, adj_2);
    wp::adj_add(var_0, var_dt2, adj_0, adj_dt2, adj_1);
    wp::adj_add(var_dt0, var_dt1, adj_dt0, adj_dt1, adj_0);
    // adj: mov = (dt0 + dt1 + dt2 + dp) / wp.float64(4.0)                                    <L 19>
    // adj: def point_triangle_ccd(                                                           <L 7>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/distance_type.py:78
static CUDA_CALLABLE wp::int32 edge_edge_distance_type_0(
    wp::vec_t<3,wp::float64> var_ea0,
    wp::vec_t<3,wp::float64> var_ea1,
    wp::vec_t<3,wp::float64> var_eb0,
    wp::vec_t<3,wp::float64> var_eb1)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::vec_t<3,wp::float64> var_1;
    wp::vec_t<3,wp::float64> var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    wp::float64 var_7;
    wp::float64 var_8;
    wp::float64 var_9;
    wp::float64 var_10;
    wp::float64 var_11;
    const wp::int32 var_12 = 8;
    const wp::float32 var_13 = 0.0;
    wp::float64 var_14;
    const wp::float32 var_15 = 0.0;
    wp::float64 var_16;
    wp::float64 var_17;
    wp::float64 var_18;
    wp::float64 var_19;
    const wp::float32 var_20 = 0.0;
    wp::float64 var_21;
    bool var_22;
    wp::float64 var_23;
    wp::float64 var_24;
    const wp::int32 var_25 = 2;
    wp::float64 var_26;
    wp::int32 var_27;
    wp::float64 var_28;
    bool var_29;
    wp::float64 var_30;
    wp::float64 var_31;
    const wp::int32 var_32 = 5;
    wp::float64 var_33;
    wp::int32 var_34;
    wp::float64 var_35;
    wp::float64 var_36;
    wp::float64 var_37;
    wp::float64 var_38;
    wp::vec_t<3,wp::float64> var_39;
    const wp::float32 var_40 = 0.0;
    wp::float64 var_41;
    bool var_42;
    bool var_43;
    wp::float64 var_44;
    const wp::float32 var_45 = 0.0;
    wp::float64 var_46;
    bool var_47;
    wp::float64 var_48;
    const wp::float32 var_49 = 1e-20;
    wp::float64 var_50;
    wp::float64 var_51;
    wp::float64 var_52;
    bool var_53;
    bool var_54;
    bool var_55;
    const wp::float32 var_56 = 2.0;
    wp::float64 var_57;
    wp::float64 var_58;
    bool var_59;
    wp::float64 var_60;
    wp::float64 var_61;
    const wp::int32 var_62 = 2;
    wp::float64 var_63;
    wp::int32 var_64;
    wp::float64 var_65;
    wp::float64 var_66;
    wp::float64 var_67;
    const wp::int32 var_68 = 5;
    wp::float64 var_69;
    wp::int32 var_70;
    wp::float64 var_71;
    wp::float64 var_72;
    wp::int32 var_73;
    wp::float64 var_74;
    wp::float64 var_75;
    wp::int32 var_76;
    wp::float64 var_77;
    wp::float64 var_78;
    wp::int32 var_79;
    wp::float64 var_80;
    const wp::float32 var_81 = 0.0;
    wp::float64 var_82;
    bool var_83;
    wp::float64 var_84;
    const wp::float32 var_85 = 0.0;
    wp::float64 var_86;
    bool var_87;
    const wp::int32 var_88 = 0;
    wp::float64 var_89;
    bool var_90;
    const wp::int32 var_91 = 3;
    const wp::int32 var_92 = 6;
    bool var_93;
    wp::float64 var_94;
    wp::float64 var_95;
    const wp::float32 var_96 = 0.0;
    wp::float64 var_97;
    bool var_98;
    const wp::int32 var_99 = 1;
    wp::float64 var_100;
    wp::float64 var_101;
    bool var_102;
    const wp::int32 var_103 = 4;
    const wp::int32 var_104 = 7;
    //---------
    // forward
    // def edge_edge_distance_type(ea0: wp.vec3d, ea1: wp.vec3d, eb0: wp.vec3d, eb1: wp.vec3d) -> int:       <L 79>
    // u = ea1 - ea0                                                                          <L 80>
    var_0 = wp::sub(var_ea1, var_ea0);
    // v = eb1 - eb0                                                                          <L 81>
    var_1 = wp::sub(var_eb1, var_eb0);
    // w = ea0 - eb0                                                                          <L 82>
    var_2 = wp::sub(var_ea0, var_eb0);
    // a = wp.length_sq(u)  # always >= 0                                                     <L 84>
    var_3 = wp::length_sq(var_0);
    // b = wp.dot(u, v)                                                                       <L 85>
    var_4 = wp::dot(var_0, var_1);
    // c = wp.length_sq(v)  # always >= 0                                                     <L 86>
    var_5 = wp::length_sq(var_1);
    // d = wp.dot(u, w)                                                                       <L 87>
    var_6 = wp::dot(var_0, var_2);
    // e = wp.dot(v, w)                                                                       <L 88>
    var_7 = wp::dot(var_1, var_2);
    // D = a * c - b * b  # always >= 0                                                       <L 89>
    var_8 = wp::mul(var_3, var_5);
    var_9 = wp::mul(var_4, var_4);
    var_10 = wp::sub(var_8, var_9);
    // tD = D  # tc = tN / tD, default tD = D >= 0                                            <L 90>
    var_11 = wp::copy(var_10);
    // defaultCase = 8                                                                        <L 91>
    // sN, tN = wp.float64(0.0), wp.float64(0.0)                                              <L 92>
    var_14 = wp::float64(var_13);
    var_16 = wp::float64(var_15);
    // sN = b * e - c * d                                                                     <L 95>
    var_17 = wp::mul(var_4, var_7);
    var_18 = wp::mul(var_5, var_6);
    var_19 = wp::sub(var_17, var_18);
    // if sN <= wp.float64(0.0):  # sc < 0 => the s=0 edge is visible                         <L 96>
    var_21 = wp::float64(var_20);
    var_22 = (var_19 <= var_21);
    if (var_22) {
        // tN = e                                                                             <L 97>
        var_23 = wp::copy(var_7);
        // tD = c                                                                             <L 98>
        var_24 = wp::copy(var_5);
        // defaultCase = 2                                                                    <L 99>
    }
    var_26 = wp::where(var_22, var_24, var_11);
    var_27 = wp::where(var_22, var_25, var_12);
    var_28 = wp::where(var_22, var_23, var_16);
    if (!var_22) {
        // elif sN >= D:  # sc > 1  => the s=1 edge is visible                                <L 100>
        var_29 = (var_19 >= var_10);
        if (var_29) {
            // tN = e + b                                                                     <L 101>
            var_30 = wp::add(var_7, var_4);
            // tD = c                                                                         <L 102>
            var_31 = wp::copy(var_5);
            // defaultCase = 5                                                                <L 103>
        }
        var_33 = wp::where(var_29, var_31, var_26);
        var_34 = wp::where(var_29, var_32, var_27);
        var_35 = wp::where(var_29, var_30, var_28);
        if (!var_29) {
            // tN = a * e - b * d                                                             <L 105>
            var_36 = wp::mul(var_3, var_7);
            var_37 = wp::mul(var_4, var_6);
            var_38 = wp::sub(var_36, var_37);
            // uv = wp.cross(u, v)                                                            <L 106>
            var_39 = wp::cross(var_0, var_1);
            // if tN > wp.float64(0.0) and tN < tD and (wp.dot(uv, w) == wp.float64(0.0) or wp.length_sq(uv) < wp.float64(1e-20) * a * c):       <L 108>
            var_41 = wp::float64(var_40);
            var_42 = (var_38 > var_41);
            var_43 = (var_38 < var_33);
            var_44 = wp::dot(var_39, var_2);
            var_46 = wp::float64(var_45);
            var_47 = (var_44 == var_46);
            var_48 = wp::length_sq(var_39);
            var_50 = wp::float64(var_49);
            var_51 = wp::mul(var_50, var_3);
            var_52 = wp::mul(var_51, var_5);
            var_53 = (var_48 < var_52);
            var_54 = var_47 || var_53;
            var_55 = var_42 && var_43 && var_54;
            if (var_55) {
                // if sN < D / wp.float64(2.0):                                               <L 113>
                var_57 = wp::float64(var_56);
                var_58 = wp::div(var_10, var_57);
                var_59 = (var_19 < var_58);
                if (var_59) {
                    // tN = e                                                                 <L 114>
                    var_60 = wp::copy(var_7);
                    // tD = c                                                                 <L 115>
                    var_61 = wp::copy(var_5);
                    // defaultCase = 2                                                        <L 116>
                }
                var_63 = wp::where(var_59, var_61, var_33);
                var_64 = wp::where(var_59, var_62, var_34);
                var_65 = wp::where(var_59, var_60, var_38);
                if (!var_59) {
                    // tN = e + b                                                             <L 118>
                    var_66 = wp::add(var_7, var_4);
                    // tD = c                                                                 <L 119>
                    var_67 = wp::copy(var_5);
                    // defaultCase = 5                                                        <L 120>
                }
                var_69 = wp::where(var_59, var_63, var_67);
                var_70 = wp::where(var_59, var_64, var_68);
                var_71 = wp::where(var_59, var_65, var_66);
            }
            var_72 = wp::where(var_55, var_69, var_33);
            var_73 = wp::where(var_55, var_70, var_34);
            var_74 = wp::where(var_55, var_71, var_38);
        }
        var_75 = wp::where(var_29, var_33, var_72);
        var_76 = wp::where(var_29, var_34, var_73);
        var_77 = wp::where(var_29, var_35, var_74);
    }
    var_78 = wp::where(var_22, var_26, var_75);
    var_79 = wp::where(var_22, var_27, var_76);
    var_80 = wp::where(var_22, var_28, var_77);
    // if tN <= wp.float64(0.0):  # tc < 0 => the t=0 edge is visible                         <L 123>
    var_82 = wp::float64(var_81);
    var_83 = (var_80 <= var_82);
    if (var_83) {
        // if -d <= wp.float64(0.0):                                                          <L 125>
        var_84 = wp::neg(var_6);
        var_86 = wp::float64(var_85);
        var_87 = (var_84 <= var_86);
        if (var_87) {
            // return 0                                                                       <L 126>
            return var_88;
        }
        if (!var_87) {
            // elif -d >= a:                                                                  <L 127>
            var_89 = wp::neg(var_6);
            var_90 = (var_89 >= var_3);
            if (var_90) {
                // return 3                                                                   <L 128>
                return var_91;
            }
            if (!var_90) {
                // return 6                                                                   <L 130>
                return var_92;
            }
        }
    }
    if (!var_83) {
        // elif tN >= tD:  # tc > 1  => the t=1 edge is visible                               <L 131>
        var_93 = (var_80 >= var_78);
        if (var_93) {
            // if (-d + b) <= wp.float64(0.0):                                                <L 133>
            var_94 = wp::neg(var_6);
            var_95 = wp::add(var_94, var_4);
            var_97 = wp::float64(var_96);
            var_98 = (var_95 <= var_97);
            if (var_98) {
                // return 1                                                                   <L 134>
                return var_99;
            }
            if (!var_98) {
                // elif (-d + b) >= a:                                                        <L 135>
                var_100 = wp::neg(var_6);
                var_101 = wp::add(var_100, var_4);
                var_102 = (var_101 >= var_3);
                if (var_102) {
                    // return 4                                                               <L 136>
                    return var_103;
                }
                if (!var_102) {
                    // return 7                                                               <L 138>
                    return var_104;
                }
            }
        }
    }
    // return defaultCase                                                                     <L 140>
    return var_79;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/distance_type.py:78
static CUDA_CALLABLE void adj_edge_edge_distance_type_0(
    wp::vec_t<3,wp::float64> var_ea0,
    wp::vec_t<3,wp::float64> var_ea1,
    wp::vec_t<3,wp::float64> var_eb0,
    wp::vec_t<3,wp::float64> var_eb1,
    wp::vec_t<3,wp::float64> & adj_ea0,
    wp::vec_t<3,wp::float64> & adj_ea1,
    wp::vec_t<3,wp::float64> & adj_eb0,
    wp::vec_t<3,wp::float64> & adj_eb1,
    wp::int32 & adj_ret)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::vec_t<3,wp::float64> var_1;
    wp::vec_t<3,wp::float64> var_2;
    wp::float64 var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    wp::float64 var_7;
    wp::float64 var_8;
    wp::float64 var_9;
    wp::float64 var_10;
    wp::float64 var_11;
    const wp::int32 var_12 = 8;
    const wp::float32 var_13 = 0.0;
    wp::float64 var_14;
    const wp::float32 var_15 = 0.0;
    wp::float64 var_16;
    wp::float64 var_17;
    wp::float64 var_18;
    wp::float64 var_19;
    const wp::float32 var_20 = 0.0;
    wp::float64 var_21;
    bool var_22;
    wp::float64 var_23;
    wp::float64 var_24;
    const wp::int32 var_25 = 2;
    wp::float64 var_26;
    wp::int32 var_27;
    wp::float64 var_28;
    bool var_29;
    wp::float64 var_30;
    wp::float64 var_31;
    const wp::int32 var_32 = 5;
    wp::float64 var_33;
    wp::int32 var_34;
    wp::float64 var_35;
    wp::float64 var_36;
    wp::float64 var_37;
    wp::float64 var_38;
    wp::vec_t<3,wp::float64> var_39;
    const wp::float32 var_40 = 0.0;
    wp::float64 var_41;
    bool var_42;
    bool var_43;
    wp::float64 var_44;
    const wp::float32 var_45 = 0.0;
    wp::float64 var_46;
    bool var_47;
    wp::float64 var_48;
    const wp::float32 var_49 = 1e-20;
    wp::float64 var_50;
    wp::float64 var_51;
    wp::float64 var_52;
    bool var_53;
    bool var_54;
    bool var_55;
    const wp::float32 var_56 = 2.0;
    wp::float64 var_57;
    wp::float64 var_58;
    bool var_59;
    wp::float64 var_60;
    wp::float64 var_61;
    const wp::int32 var_62 = 2;
    wp::float64 var_63;
    wp::int32 var_64;
    wp::float64 var_65;
    wp::float64 var_66;
    wp::float64 var_67;
    const wp::int32 var_68 = 5;
    wp::float64 var_69;
    wp::int32 var_70;
    wp::float64 var_71;
    wp::float64 var_72;
    wp::int32 var_73;
    wp::float64 var_74;
    wp::float64 var_75;
    wp::int32 var_76;
    wp::float64 var_77;
    wp::float64 var_78;
    wp::int32 var_79;
    wp::float64 var_80;
    const wp::float32 var_81 = 0.0;
    wp::float64 var_82;
    bool var_83;
    wp::float64 var_84;
    const wp::float32 var_85 = 0.0;
    wp::float64 var_86;
    bool var_87;
    const wp::int32 var_88 = 0;
    wp::float64 var_89;
    bool var_90;
    const wp::int32 var_91 = 3;
    const wp::int32 var_92 = 6;
    bool var_93;
    wp::float64 var_94;
    wp::float64 var_95;
    const wp::float32 var_96 = 0.0;
    wp::float64 var_97;
    bool var_98;
    const wp::int32 var_99 = 1;
    wp::float64 var_100;
    wp::float64 var_101;
    bool var_102;
    const wp::int32 var_103 = 4;
    const wp::int32 var_104 = 7;
    //---------
    // dual vars
    wp::vec_t<3,wp::float64> adj_0 = {};
    wp::vec_t<3,wp::float64> adj_1 = {};
    wp::vec_t<3,wp::float64> adj_2 = {};
    wp::float64 adj_3 = {};
    wp::float64 adj_4 = {};
    wp::float64 adj_5 = {};
    wp::float64 adj_6 = {};
    wp::float64 adj_7 = {};
    wp::float64 adj_8 = {};
    wp::float64 adj_9 = {};
    wp::float64 adj_10 = {};
    wp::float64 adj_11 = {};
    wp::int32 adj_12 = {};
    wp::float32 adj_13 = {};
    wp::float64 adj_14 = {};
    wp::float32 adj_15 = {};
    wp::float64 adj_16 = {};
    wp::float64 adj_17 = {};
    wp::float64 adj_18 = {};
    wp::float64 adj_19 = {};
    wp::float32 adj_20 = {};
    wp::float64 adj_21 = {};
    bool adj_22 = {};
    wp::float64 adj_23 = {};
    wp::float64 adj_24 = {};
    wp::int32 adj_25 = {};
    wp::float64 adj_26 = {};
    wp::int32 adj_27 = {};
    wp::float64 adj_28 = {};
    bool adj_29 = {};
    wp::float64 adj_30 = {};
    wp::float64 adj_31 = {};
    wp::int32 adj_32 = {};
    wp::float64 adj_33 = {};
    wp::int32 adj_34 = {};
    wp::float64 adj_35 = {};
    wp::float64 adj_36 = {};
    wp::float64 adj_37 = {};
    wp::float64 adj_38 = {};
    wp::vec_t<3,wp::float64> adj_39 = {};
    wp::float32 adj_40 = {};
    wp::float64 adj_41 = {};
    bool adj_42 = {};
    bool adj_43 = {};
    wp::float64 adj_44 = {};
    wp::float32 adj_45 = {};
    wp::float64 adj_46 = {};
    bool adj_47 = {};
    wp::float64 adj_48 = {};
    wp::float32 adj_49 = {};
    wp::float64 adj_50 = {};
    wp::float64 adj_51 = {};
    wp::float64 adj_52 = {};
    bool adj_53 = {};
    bool adj_54 = {};
    bool adj_55 = {};
    wp::float32 adj_56 = {};
    wp::float64 adj_57 = {};
    wp::float64 adj_58 = {};
    bool adj_59 = {};
    wp::float64 adj_60 = {};
    wp::float64 adj_61 = {};
    wp::int32 adj_62 = {};
    wp::float64 adj_63 = {};
    wp::int32 adj_64 = {};
    wp::float64 adj_65 = {};
    wp::float64 adj_66 = {};
    wp::float64 adj_67 = {};
    wp::int32 adj_68 = {};
    wp::float64 adj_69 = {};
    wp::int32 adj_70 = {};
    wp::float64 adj_71 = {};
    wp::float64 adj_72 = {};
    wp::int32 adj_73 = {};
    wp::float64 adj_74 = {};
    wp::float64 adj_75 = {};
    wp::int32 adj_76 = {};
    wp::float64 adj_77 = {};
    wp::float64 adj_78 = {};
    wp::int32 adj_79 = {};
    wp::float64 adj_80 = {};
    wp::float32 adj_81 = {};
    wp::float64 adj_82 = {};
    bool adj_83 = {};
    wp::float64 adj_84 = {};
    wp::float32 adj_85 = {};
    wp::float64 adj_86 = {};
    bool adj_87 = {};
    wp::int32 adj_88 = {};
    wp::float64 adj_89 = {};
    bool adj_90 = {};
    wp::int32 adj_91 = {};
    wp::int32 adj_92 = {};
    bool adj_93 = {};
    wp::float64 adj_94 = {};
    wp::float64 adj_95 = {};
    wp::float32 adj_96 = {};
    wp::float64 adj_97 = {};
    bool adj_98 = {};
    wp::int32 adj_99 = {};
    wp::float64 adj_100 = {};
    wp::float64 adj_101 = {};
    bool adj_102 = {};
    wp::int32 adj_103 = {};
    wp::int32 adj_104 = {};
    //---------
    // forward
    // def edge_edge_distance_type(ea0: wp.vec3d, ea1: wp.vec3d, eb0: wp.vec3d, eb1: wp.vec3d) -> int:       <L 79>
    // u = ea1 - ea0                                                                          <L 80>
    var_0 = wp::sub(var_ea1, var_ea0);
    // v = eb1 - eb0                                                                          <L 81>
    var_1 = wp::sub(var_eb1, var_eb0);
    // w = ea0 - eb0                                                                          <L 82>
    var_2 = wp::sub(var_ea0, var_eb0);
    // a = wp.length_sq(u)  # always >= 0                                                     <L 84>
    var_3 = wp::length_sq(var_0);
    // b = wp.dot(u, v)                                                                       <L 85>
    var_4 = wp::dot(var_0, var_1);
    // c = wp.length_sq(v)  # always >= 0                                                     <L 86>
    var_5 = wp::length_sq(var_1);
    // d = wp.dot(u, w)                                                                       <L 87>
    var_6 = wp::dot(var_0, var_2);
    // e = wp.dot(v, w)                                                                       <L 88>
    var_7 = wp::dot(var_1, var_2);
    // D = a * c - b * b  # always >= 0                                                       <L 89>
    var_8 = wp::mul(var_3, var_5);
    var_9 = wp::mul(var_4, var_4);
    var_10 = wp::sub(var_8, var_9);
    // tD = D  # tc = tN / tD, default tD = D >= 0                                            <L 90>
    var_11 = wp::copy(var_10);
    // defaultCase = 8                                                                        <L 91>
    // sN, tN = wp.float64(0.0), wp.float64(0.0)                                              <L 92>
    var_14 = wp::float64(var_13);
    var_16 = wp::float64(var_15);
    // sN = b * e - c * d                                                                     <L 95>
    var_17 = wp::mul(var_4, var_7);
    var_18 = wp::mul(var_5, var_6);
    var_19 = wp::sub(var_17, var_18);
    // if sN <= wp.float64(0.0):  # sc < 0 => the s=0 edge is visible                         <L 96>
    var_21 = wp::float64(var_20);
    var_22 = (var_19 <= var_21);
    if (var_22) {
        // tN = e                                                                             <L 97>
        var_23 = wp::copy(var_7);
        // tD = c                                                                             <L 98>
        var_24 = wp::copy(var_5);
        // defaultCase = 2                                                                    <L 99>
    }
    var_26 = wp::where(var_22, var_24, var_11);
    var_27 = wp::where(var_22, var_25, var_12);
    var_28 = wp::where(var_22, var_23, var_16);
    if (!var_22) {
        // elif sN >= D:  # sc > 1  => the s=1 edge is visible                                <L 100>
        var_29 = (var_19 >= var_10);
        if (var_29) {
            // tN = e + b                                                                     <L 101>
            var_30 = wp::add(var_7, var_4);
            // tD = c                                                                         <L 102>
            var_31 = wp::copy(var_5);
            // defaultCase = 5                                                                <L 103>
        }
        var_33 = wp::where(var_29, var_31, var_26);
        var_34 = wp::where(var_29, var_32, var_27);
        var_35 = wp::where(var_29, var_30, var_28);
        if (!var_29) {
            // tN = a * e - b * d                                                             <L 105>
            var_36 = wp::mul(var_3, var_7);
            var_37 = wp::mul(var_4, var_6);
            var_38 = wp::sub(var_36, var_37);
            // uv = wp.cross(u, v)                                                            <L 106>
            var_39 = wp::cross(var_0, var_1);
            // if tN > wp.float64(0.0) and tN < tD and (wp.dot(uv, w) == wp.float64(0.0) or wp.length_sq(uv) < wp.float64(1e-20) * a * c):       <L 108>
            var_41 = wp::float64(var_40);
            var_42 = (var_38 > var_41);
            var_43 = (var_38 < var_33);
            var_44 = wp::dot(var_39, var_2);
            var_46 = wp::float64(var_45);
            var_47 = (var_44 == var_46);
            var_48 = wp::length_sq(var_39);
            var_50 = wp::float64(var_49);
            var_51 = wp::mul(var_50, var_3);
            var_52 = wp::mul(var_51, var_5);
            var_53 = (var_48 < var_52);
            var_54 = var_47 || var_53;
            var_55 = var_42 && var_43 && var_54;
            if (var_55) {
                // if sN < D / wp.float64(2.0):                                               <L 113>
                var_57 = wp::float64(var_56);
                var_58 = wp::div(var_10, var_57);
                var_59 = (var_19 < var_58);
                if (var_59) {
                    // tN = e                                                                 <L 114>
                    var_60 = wp::copy(var_7);
                    // tD = c                                                                 <L 115>
                    var_61 = wp::copy(var_5);
                    // defaultCase = 2                                                        <L 116>
                }
                var_63 = wp::where(var_59, var_61, var_33);
                var_64 = wp::where(var_59, var_62, var_34);
                var_65 = wp::where(var_59, var_60, var_38);
                if (!var_59) {
                    // tN = e + b                                                             <L 118>
                    var_66 = wp::add(var_7, var_4);
                    // tD = c                                                                 <L 119>
                    var_67 = wp::copy(var_5);
                    // defaultCase = 5                                                        <L 120>
                }
                var_69 = wp::where(var_59, var_63, var_67);
                var_70 = wp::where(var_59, var_64, var_68);
                var_71 = wp::where(var_59, var_65, var_66);
            }
            var_72 = wp::where(var_55, var_69, var_33);
            var_73 = wp::where(var_55, var_70, var_34);
            var_74 = wp::where(var_55, var_71, var_38);
        }
        var_75 = wp::where(var_29, var_33, var_72);
        var_76 = wp::where(var_29, var_34, var_73);
        var_77 = wp::where(var_29, var_35, var_74);
    }
    var_78 = wp::where(var_22, var_26, var_75);
    var_79 = wp::where(var_22, var_27, var_76);
    var_80 = wp::where(var_22, var_28, var_77);
    // if tN <= wp.float64(0.0):  # tc < 0 => the t=0 edge is visible                         <L 123>
    var_82 = wp::float64(var_81);
    var_83 = (var_80 <= var_82);
    if (var_83) {
        // if -d <= wp.float64(0.0):                                                          <L 125>
        var_84 = wp::neg(var_6);
        var_86 = wp::float64(var_85);
        var_87 = (var_84 <= var_86);
        if (var_87) {
            // return 0                                                                       <L 126>
            goto label0;
        }
        if (!var_87) {
            // elif -d >= a:                                                                  <L 127>
            var_89 = wp::neg(var_6);
            var_90 = (var_89 >= var_3);
            if (var_90) {
                // return 3                                                                   <L 128>
                goto label1;
            }
            if (!var_90) {
                // return 6                                                                   <L 130>
                goto label2;
            }
        }
    }
    if (!var_83) {
        // elif tN >= tD:  # tc > 1  => the t=1 edge is visible                               <L 131>
        var_93 = (var_80 >= var_78);
        if (var_93) {
            // if (-d + b) <= wp.float64(0.0):                                                <L 133>
            var_94 = wp::neg(var_6);
            var_95 = wp::add(var_94, var_4);
            var_97 = wp::float64(var_96);
            var_98 = (var_95 <= var_97);
            if (var_98) {
                // return 1                                                                   <L 134>
                goto label3;
            }
            if (!var_98) {
                // elif (-d + b) >= a:                                                        <L 135>
                var_100 = wp::neg(var_6);
                var_101 = wp::add(var_100, var_4);
                var_102 = (var_101 >= var_3);
                if (var_102) {
                    // return 4                                                               <L 136>
                    goto label4;
                }
                if (!var_102) {
                    // return 7                                                               <L 138>
                    goto label5;
                }
            }
        }
    }
    // return defaultCase                                                                     <L 140>
    goto label6;
    //---------
    // reverse
    label6:;
    adj_79 += adj_ret;
    // adj: return defaultCase                                                                <L 140>
    if (!var_83) {
        if (var_93) {
            if (!var_98) {
                if (!var_102) {
                    label5:;
                    adj_104 += adj_ret;
                    // adj: return 7                                                          <L 138>
                }
                if (var_102) {
                    label4:;
                    adj_103 += adj_ret;
                    // adj: return 4                                                          <L 136>
                }
                wp::adj_add(var_100, var_4, adj_100, adj_4, adj_101);
                wp::adj_neg(var_6, adj_6, adj_100);
                // adj: elif (-d + b) >= a:                                                   <L 135>
            }
            if (var_98) {
                label3:;
                adj_99 += adj_ret;
                // adj: return 1                                                              <L 134>
            }
            wp::adj_float64(var_96, adj_96, adj_97);
            wp::adj_add(var_94, var_4, adj_94, adj_4, adj_95);
            wp::adj_neg(var_6, adj_6, adj_94);
            // adj: if (-d + b) <= wp.float64(0.0):                                           <L 133>
        }
        // adj: elif tN >= tD:  # tc > 1  => the t=1 edge is visible                          <L 131>
    }
    if (var_83) {
        if (!var_87) {
            if (!var_90) {
                label2:;
                adj_92 += adj_ret;
                // adj: return 6                                                              <L 130>
            }
            if (var_90) {
                label1:;
                adj_91 += adj_ret;
                // adj: return 3                                                              <L 128>
            }
            wp::adj_neg(var_6, adj_6, adj_89);
            // adj: elif -d >= a:                                                             <L 127>
        }
        if (var_87) {
            label0:;
            adj_88 += adj_ret;
            // adj: return 0                                                                  <L 126>
        }
        wp::adj_float64(var_85, adj_85, adj_86);
        wp::adj_neg(var_6, adj_6, adj_84);
        // adj: if -d <= wp.float64(0.0):                                                     <L 125>
    }
    wp::adj_float64(var_81, adj_81, adj_82);
    // adj: if tN <= wp.float64(0.0):  # tc < 0 => the t=0 edge is visible                    <L 123>
    wp::adj_where(var_22, var_28, var_77, adj_22, adj_28, adj_77, adj_80);
    wp::adj_where(var_22, var_27, var_76, adj_22, adj_27, adj_76, adj_79);
    wp::adj_where(var_22, var_26, var_75, adj_22, adj_26, adj_75, adj_78);
    if (!var_22) {
        wp::adj_where(var_29, var_35, var_74, adj_29, adj_35, adj_74, adj_77);
        wp::adj_where(var_29, var_34, var_73, adj_29, adj_34, adj_73, adj_76);
        wp::adj_where(var_29, var_33, var_72, adj_29, adj_33, adj_72, adj_75);
        if (!var_29) {
            wp::adj_where(var_55, var_71, var_38, adj_55, adj_71, adj_38, adj_74);
            wp::adj_where(var_55, var_70, var_34, adj_55, adj_70, adj_34, adj_73);
            wp::adj_where(var_55, var_69, var_33, adj_55, adj_69, adj_33, adj_72);
            if (var_55) {
                wp::adj_where(var_59, var_65, var_66, adj_59, adj_65, adj_66, adj_71);
                wp::adj_where(var_59, var_64, var_68, adj_59, adj_64, adj_68, adj_70);
                wp::adj_where(var_59, var_63, var_67, adj_59, adj_63, adj_67, adj_69);
                if (!var_59) {
                    // adj: defaultCase = 5                                                   <L 120>
                    wp::adj_copy(var_5, adj_5, adj_67);
                    // adj: tD = c                                                            <L 119>
                    wp::adj_add(var_7, var_4, adj_7, adj_4, adj_66);
                    // adj: tN = e + b                                                        <L 118>
                }
                wp::adj_where(var_59, var_60, var_38, adj_59, adj_60, adj_38, adj_65);
                wp::adj_where(var_59, var_62, var_34, adj_59, adj_62, adj_34, adj_64);
                wp::adj_where(var_59, var_61, var_33, adj_59, adj_61, adj_33, adj_63);
                if (var_59) {
                    // adj: defaultCase = 2                                                   <L 116>
                    wp::adj_copy(var_5, adj_5, adj_61);
                    // adj: tD = c                                                            <L 115>
                    wp::adj_copy(var_7, adj_7, adj_60);
                    // adj: tN = e                                                            <L 114>
                }
                wp::adj_div(var_10, var_57, var_58, adj_10, adj_57, adj_58);
                wp::adj_float64(var_56, adj_56, adj_57);
                // adj: if sN < D / wp.float64(2.0):                                          <L 113>
            }
            wp::adj_mul(var_51, var_5, adj_51, adj_5, adj_52);
            wp::adj_mul(var_50, var_3, adj_50, adj_3, adj_51);
            wp::adj_float64(var_49, adj_49, adj_50);
            wp::adj_length_sq(var_39, adj_39, adj_48);
            wp::adj_float64(var_45, adj_45, adj_46);
            wp::adj_dot(var_39, var_2, adj_39, adj_2, adj_44);
            wp::adj_float64(var_40, adj_40, adj_41);
            // adj: if tN > wp.float64(0.0) and tN < tD and (wp.dot(uv, w) == wp.float64(0.0) or wp.length_sq(uv) < wp.float64(1e-20) * a * c):  <L 108>
            wp::adj_cross(var_0, var_1, adj_0, adj_1, adj_39);
            // adj: uv = wp.cross(u, v)                                                       <L 106>
            wp::adj_sub(var_36, var_37, adj_36, adj_37, adj_38);
            wp::adj_mul(var_4, var_6, adj_4, adj_6, adj_37);
            wp::adj_mul(var_3, var_7, adj_3, adj_7, adj_36);
            // adj: tN = a * e - b * d                                                        <L 105>
        }
        wp::adj_where(var_29, var_30, var_28, adj_29, adj_30, adj_28, adj_35);
        wp::adj_where(var_29, var_32, var_27, adj_29, adj_32, adj_27, adj_34);
        wp::adj_where(var_29, var_31, var_26, adj_29, adj_31, adj_26, adj_33);
        if (var_29) {
            // adj: defaultCase = 5                                                           <L 103>
            wp::adj_copy(var_5, adj_5, adj_31);
            // adj: tD = c                                                                    <L 102>
            wp::adj_add(var_7, var_4, adj_7, adj_4, adj_30);
            // adj: tN = e + b                                                                <L 101>
        }
        // adj: elif sN >= D:  # sc > 1  => the s=1 edge is visible                           <L 100>
    }
    wp::adj_where(var_22, var_23, var_16, adj_22, adj_23, adj_16, adj_28);
    wp::adj_where(var_22, var_25, var_12, adj_22, adj_25, adj_12, adj_27);
    wp::adj_where(var_22, var_24, var_11, adj_22, adj_24, adj_11, adj_26);
    if (var_22) {
        // adj: defaultCase = 2                                                               <L 99>
        wp::adj_copy(var_5, adj_5, adj_24);
        // adj: tD = c                                                                        <L 98>
        wp::adj_copy(var_7, adj_7, adj_23);
        // adj: tN = e                                                                        <L 97>
    }
    wp::adj_float64(var_20, adj_20, adj_21);
    // adj: if sN <= wp.float64(0.0):  # sc < 0 => the s=0 edge is visible                    <L 96>
    wp::adj_sub(var_17, var_18, adj_17, adj_18, adj_19);
    wp::adj_mul(var_5, var_6, adj_5, adj_6, adj_18);
    wp::adj_mul(var_4, var_7, adj_4, adj_7, adj_17);
    // adj: sN = b * e - c * d                                                                <L 95>
    wp::adj_float64(var_15, adj_15, adj_16);
    wp::adj_float64(var_13, adj_13, adj_14);
    // adj: sN, tN = wp.float64(0.0), wp.float64(0.0)                                         <L 92>
    // adj: defaultCase = 8                                                                   <L 91>
    wp::adj_copy(var_10, adj_10, adj_11);
    // adj: tD = D  # tc = tN / tD, default tD = D >= 0                                       <L 90>
    wp::adj_sub(var_8, var_9, adj_8, adj_9, adj_10);
    wp::adj_mul(var_4, var_4, adj_4, adj_4, adj_9);
    wp::adj_mul(var_3, var_5, adj_3, adj_5, adj_8);
    // adj: D = a * c - b * b  # always >= 0                                                  <L 89>
    wp::adj_dot(var_1, var_2, adj_1, adj_2, adj_7);
    // adj: e = wp.dot(v, w)                                                                  <L 88>
    wp::adj_dot(var_0, var_2, adj_0, adj_2, adj_6);
    // adj: d = wp.dot(u, w)                                                                  <L 87>
    wp::adj_length_sq(var_1, adj_1, adj_5);
    // adj: c = wp.length_sq(v)  # always >= 0                                                <L 86>
    wp::adj_dot(var_0, var_1, adj_0, adj_1, adj_4);
    // adj: b = wp.dot(u, v)                                                                  <L 85>
    wp::adj_length_sq(var_0, adj_0, adj_3);
    // adj: a = wp.length_sq(u)  # always >= 0                                                <L 84>
    wp::adj_sub(var_ea0, var_eb0, adj_ea0, adj_eb0, adj_2);
    // adj: w = ea0 - eb0                                                                     <L 82>
    wp::adj_sub(var_eb1, var_eb0, adj_eb1, adj_eb0, adj_1);
    // adj: v = eb1 - eb0                                                                     <L 81>
    wp::adj_sub(var_ea1, var_ea0, adj_ea1, adj_ea0, adj_0);
    // adj: u = ea1 - ea0                                                                     <L 80>
    // adj: def edge_edge_distance_type(ea0: wp.vec3d, ea1: wp.vec3d, eb0: wp.vec3d, eb1: wp.vec3d) -> int:  <L 79>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/line_line_distance.py:507
static CUDA_CALLABLE wp::float64 line_line_distance_0(
    wp::vec_t<3,wp::float64> var_ea0,
    wp::vec_t<3,wp::float64> var_ea1,
    wp::vec_t<3,wp::float64> var_eb0,
    wp::vec_t<3,wp::float64> var_eb1)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::vec_t<3,wp::float64> var_1;
    wp::vec_t<3,wp::float64> var_2;
    wp::vec_t<3,wp::float64> var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    wp::float64 var_7;
    //---------
    // forward
    // def line_line_distance(ea0: wp.vec3d, ea1: wp.vec3d, eb0: wp.vec3d, eb1: wp.vec3d):       <L 508>
    // da = ea1 - ea0                                                                         <L 509>
    var_0 = wp::sub(var_ea1, var_ea0);
    // db = eb1 - eb0                                                                         <L 510>
    var_1 = wp::sub(var_eb1, var_eb0);
    // d = eb0 - ea0                                                                          <L 511>
    var_2 = wp::sub(var_eb0, var_ea0);
    // b = wp.cross(da, db)                                                                   <L 513>
    var_3 = wp::cross(var_0, var_1);
    // aTb = wp.dot(d, b)                                                                     <L 514>
    var_4 = wp::dot(var_2, var_3);
    // return aTb * aTb / wp.length_sq(b)                                                     <L 515>
    var_5 = wp::mul(var_4, var_4);
    var_6 = wp::length_sq(var_3);
    var_7 = wp::div(var_5, var_6);
    return var_7;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/line_line_distance.py:507
static CUDA_CALLABLE void adj_line_line_distance_0(
    wp::vec_t<3,wp::float64> var_ea0,
    wp::vec_t<3,wp::float64> var_ea1,
    wp::vec_t<3,wp::float64> var_eb0,
    wp::vec_t<3,wp::float64> var_eb1,
    wp::vec_t<3,wp::float64> & adj_ea0,
    wp::vec_t<3,wp::float64> & adj_ea1,
    wp::vec_t<3,wp::float64> & adj_eb0,
    wp::vec_t<3,wp::float64> & adj_eb1,
    wp::float64 & adj_ret)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::vec_t<3,wp::float64> var_1;
    wp::vec_t<3,wp::float64> var_2;
    wp::vec_t<3,wp::float64> var_3;
    wp::float64 var_4;
    wp::float64 var_5;
    wp::float64 var_6;
    wp::float64 var_7;
    //---------
    // dual vars
    wp::vec_t<3,wp::float64> adj_0 = {};
    wp::vec_t<3,wp::float64> adj_1 = {};
    wp::vec_t<3,wp::float64> adj_2 = {};
    wp::vec_t<3,wp::float64> adj_3 = {};
    wp::float64 adj_4 = {};
    wp::float64 adj_5 = {};
    wp::float64 adj_6 = {};
    wp::float64 adj_7 = {};
    //---------
    // forward
    // def line_line_distance(ea0: wp.vec3d, ea1: wp.vec3d, eb0: wp.vec3d, eb1: wp.vec3d):       <L 508>
    // da = ea1 - ea0                                                                         <L 509>
    var_0 = wp::sub(var_ea1, var_ea0);
    // db = eb1 - eb0                                                                         <L 510>
    var_1 = wp::sub(var_eb1, var_eb0);
    // d = eb0 - ea0                                                                          <L 511>
    var_2 = wp::sub(var_eb0, var_ea0);
    // b = wp.cross(da, db)                                                                   <L 513>
    var_3 = wp::cross(var_0, var_1);
    // aTb = wp.dot(d, b)                                                                     <L 514>
    var_4 = wp::dot(var_2, var_3);
    // return aTb * aTb / wp.length_sq(b)                                                     <L 515>
    var_5 = wp::mul(var_4, var_4);
    var_6 = wp::length_sq(var_3);
    var_7 = wp::div(var_5, var_6);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_7 += adj_ret;
    wp::adj_div(var_5, var_6, var_7, adj_5, adj_6, adj_7);
    wp::adj_length_sq(var_3, adj_3, adj_6);
    wp::adj_mul(var_4, var_4, adj_4, adj_4, adj_5);
    // adj: return aTb * aTb / wp.length_sq(b)                                                <L 515>
    wp::adj_dot(var_2, var_3, adj_2, adj_3, adj_4);
    // adj: aTb = wp.dot(d, b)                                                                <L 514>
    wp::adj_cross(var_0, var_1, adj_0, adj_1, adj_3);
    // adj: b = wp.cross(da, db)                                                              <L 513>
    wp::adj_sub(var_eb0, var_ea0, adj_eb0, adj_ea0, adj_2);
    // adj: d = eb0 - ea0                                                                     <L 511>
    wp::adj_sub(var_eb1, var_eb0, adj_eb1, adj_eb0, adj_1);
    // adj: db = eb1 - eb0                                                                    <L 510>
    wp::adj_sub(var_ea1, var_ea0, adj_ea1, adj_ea0, adj_0);
    // adj: da = ea1 - ea0                                                                    <L 509>
    // adj: def line_line_distance(ea0: wp.vec3d, ea1: wp.vec3d, eb0: wp.vec3d, eb1: wp.vec3d):  <L 508>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/edge_edge_distance.py:9
static CUDA_CALLABLE wp::float64 edge_edge_distance_0(
    wp::vec_t<3,wp::float64> var_ea0,
    wp::vec_t<3,wp::float64> var_ea1,
    wp::vec_t<3,wp::float64> var_eb0,
    wp::vec_t<3,wp::float64> var_eb1)
{
    //---------
    // primal vars
    wp::int32 var_0;
    const wp::int32 var_1 = 0;
    bool var_2;
    wp::float64 var_3;
    const wp::int32 var_4 = 1;
    bool var_5;
    wp::float64 var_6;
    const wp::int32 var_7 = 2;
    bool var_8;
    wp::float64 var_9;
    const wp::int32 var_10 = 3;
    bool var_11;
    wp::float64 var_12;
    const wp::int32 var_13 = 4;
    bool var_14;
    wp::float64 var_15;
    const wp::int32 var_16 = 5;
    bool var_17;
    wp::float64 var_18;
    const wp::int32 var_19 = 6;
    bool var_20;
    wp::float64 var_21;
    const wp::int32 var_22 = 7;
    bool var_23;
    wp::float64 var_24;
    const wp::int32 var_25 = 8;
    bool var_26;
    wp::float64 var_27;
    const wp::float32 var_28 = 1e+20;
    wp::float64 var_29;
    //---------
    // forward
    // def edge_edge_distance(ea0: wp.vec3d, ea1: wp.vec3d, eb0: wp.vec3d, eb1: wp.vec3d):       <L 10>
    // dt = edge_edge_distance_type(ea0, ea1, eb0, eb1)                                       <L 11>
    var_0 = edge_edge_distance_type_0(var_ea0, var_ea1, var_eb0, var_eb1);
    // if dt == 0:                                                                            <L 12>
    var_2 = (var_0 == var_1);
    if (var_2) {
        // return point_point_distance(ea0, eb0)                                              <L 13>
        var_3 = point_point_distance_0(var_ea0, var_eb0);
        return var_3;
    }
    if (!var_2) {
        // elif dt == 1:                                                                      <L 14>
        var_5 = (var_0 == var_4);
        if (var_5) {
            // return point_point_distance(ea0, eb1)                                          <L 15>
            var_6 = point_point_distance_0(var_ea0, var_eb1);
            return var_6;
        }
        if (!var_5) {
            // elif dt == 2:                                                                  <L 16>
            var_8 = (var_0 == var_7);
            if (var_8) {
                // return point_line_distance(ea0, eb0, eb1)                                  <L 17>
                var_9 = point_line_distance_0(var_ea0, var_eb0, var_eb1);
                return var_9;
            }
            if (!var_8) {
                // elif dt == 3:                                                              <L 18>
                var_11 = (var_0 == var_10);
                if (var_11) {
                    // return point_point_distance(ea1, eb0)                                  <L 19>
                    var_12 = point_point_distance_0(var_ea1, var_eb0);
                    return var_12;
                }
                if (!var_11) {
                    // elif dt == 4:                                                          <L 20>
                    var_14 = (var_0 == var_13);
                    if (var_14) {
                        // return point_point_distance(ea1, eb1)                              <L 21>
                        var_15 = point_point_distance_0(var_ea1, var_eb1);
                        return var_15;
                    }
                    if (!var_14) {
                        // elif dt == 5:                                                      <L 22>
                        var_17 = (var_0 == var_16);
                        if (var_17) {
                            // return point_line_distance(ea1, eb0, eb1)                      <L 23>
                            var_18 = point_line_distance_0(var_ea1, var_eb0, var_eb1);
                            return var_18;
                        }
                        if (!var_17) {
                            // elif dt == 6:                                                  <L 24>
                            var_20 = (var_0 == var_19);
                            if (var_20) {
                                // return point_line_distance(eb0, ea0, ea1)                  <L 25>
                                var_21 = point_line_distance_0(var_eb0, var_ea0, var_ea1);
                                return var_21;
                            }
                            if (!var_20) {
                                // elif dt == 7:                                              <L 26>
                                var_23 = (var_0 == var_22);
                                if (var_23) {
                                    // return point_line_distance(eb1, ea0, ea1)              <L 27>
                                    var_24 = point_line_distance_0(var_eb1, var_ea0, var_ea1);
                                    return var_24;
                                }
                                if (!var_23) {
                                    // elif dt == 8:                                          <L 28>
                                    var_26 = (var_0 == var_25);
                                    if (var_26) {
                                        // return line_line_distance(ea0, ea1, eb0, eb1)       <L 29>
                                        var_27 = line_line_distance_0(var_ea0, var_ea1, var_eb0, var_eb1);
                                        return var_27;
                                    }
                                    if (!var_26) {
                                        // return wp.float64(1e20)                            <L 31>
                                        var_29 = wp::float64(var_28);
                                        return var_29;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return {};
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/edge_edge_distance.py:9
static CUDA_CALLABLE void adj_edge_edge_distance_0(
    wp::vec_t<3,wp::float64> var_ea0,
    wp::vec_t<3,wp::float64> var_ea1,
    wp::vec_t<3,wp::float64> var_eb0,
    wp::vec_t<3,wp::float64> var_eb1,
    wp::vec_t<3,wp::float64> & adj_ea0,
    wp::vec_t<3,wp::float64> & adj_ea1,
    wp::vec_t<3,wp::float64> & adj_eb0,
    wp::vec_t<3,wp::float64> & adj_eb1,
    wp::float64 & adj_ret)
{
    //---------
    // primal vars
    wp::int32 var_0;
    const wp::int32 var_1 = 0;
    bool var_2;
    wp::float64 var_3;
    const wp::int32 var_4 = 1;
    bool var_5;
    wp::float64 var_6;
    const wp::int32 var_7 = 2;
    bool var_8;
    wp::float64 var_9;
    const wp::int32 var_10 = 3;
    bool var_11;
    wp::float64 var_12;
    const wp::int32 var_13 = 4;
    bool var_14;
    wp::float64 var_15;
    const wp::int32 var_16 = 5;
    bool var_17;
    wp::float64 var_18;
    const wp::int32 var_19 = 6;
    bool var_20;
    wp::float64 var_21;
    const wp::int32 var_22 = 7;
    bool var_23;
    wp::float64 var_24;
    const wp::int32 var_25 = 8;
    bool var_26;
    wp::float64 var_27;
    const wp::float32 var_28 = 1e+20;
    wp::float64 var_29;
    //---------
    // dual vars
    wp::int32 adj_0 = {};
    wp::int32 adj_1 = {};
    bool adj_2 = {};
    wp::float64 adj_3 = {};
    wp::int32 adj_4 = {};
    bool adj_5 = {};
    wp::float64 adj_6 = {};
    wp::int32 adj_7 = {};
    bool adj_8 = {};
    wp::float64 adj_9 = {};
    wp::int32 adj_10 = {};
    bool adj_11 = {};
    wp::float64 adj_12 = {};
    wp::int32 adj_13 = {};
    bool adj_14 = {};
    wp::float64 adj_15 = {};
    wp::int32 adj_16 = {};
    bool adj_17 = {};
    wp::float64 adj_18 = {};
    wp::int32 adj_19 = {};
    bool adj_20 = {};
    wp::float64 adj_21 = {};
    wp::int32 adj_22 = {};
    bool adj_23 = {};
    wp::float64 adj_24 = {};
    wp::int32 adj_25 = {};
    bool adj_26 = {};
    wp::float64 adj_27 = {};
    wp::float32 adj_28 = {};
    wp::float64 adj_29 = {};
    //---------
    // forward
    // def edge_edge_distance(ea0: wp.vec3d, ea1: wp.vec3d, eb0: wp.vec3d, eb1: wp.vec3d):       <L 10>
    // dt = edge_edge_distance_type(ea0, ea1, eb0, eb1)                                       <L 11>
    var_0 = edge_edge_distance_type_0(var_ea0, var_ea1, var_eb0, var_eb1);
    // if dt == 0:                                                                            <L 12>
    var_2 = (var_0 == var_1);
    if (var_2) {
        // return point_point_distance(ea0, eb0)                                              <L 13>
        var_3 = point_point_distance_0(var_ea0, var_eb0);
        goto label0;
    }
    if (!var_2) {
        // elif dt == 1:                                                                      <L 14>
        var_5 = (var_0 == var_4);
        if (var_5) {
            // return point_point_distance(ea0, eb1)                                          <L 15>
            var_6 = point_point_distance_0(var_ea0, var_eb1);
            goto label1;
        }
        if (!var_5) {
            // elif dt == 2:                                                                  <L 16>
            var_8 = (var_0 == var_7);
            if (var_8) {
                // return point_line_distance(ea0, eb0, eb1)                                  <L 17>
                var_9 = point_line_distance_0(var_ea0, var_eb0, var_eb1);
                goto label2;
            }
            if (!var_8) {
                // elif dt == 3:                                                              <L 18>
                var_11 = (var_0 == var_10);
                if (var_11) {
                    // return point_point_distance(ea1, eb0)                                  <L 19>
                    var_12 = point_point_distance_0(var_ea1, var_eb0);
                    goto label3;
                }
                if (!var_11) {
                    // elif dt == 4:                                                          <L 20>
                    var_14 = (var_0 == var_13);
                    if (var_14) {
                        // return point_point_distance(ea1, eb1)                              <L 21>
                        var_15 = point_point_distance_0(var_ea1, var_eb1);
                        goto label4;
                    }
                    if (!var_14) {
                        // elif dt == 5:                                                      <L 22>
                        var_17 = (var_0 == var_16);
                        if (var_17) {
                            // return point_line_distance(ea1, eb0, eb1)                      <L 23>
                            var_18 = point_line_distance_0(var_ea1, var_eb0, var_eb1);
                            goto label5;
                        }
                        if (!var_17) {
                            // elif dt == 6:                                                  <L 24>
                            var_20 = (var_0 == var_19);
                            if (var_20) {
                                // return point_line_distance(eb0, ea0, ea1)                  <L 25>
                                var_21 = point_line_distance_0(var_eb0, var_ea0, var_ea1);
                                goto label6;
                            }
                            if (!var_20) {
                                // elif dt == 7:                                              <L 26>
                                var_23 = (var_0 == var_22);
                                if (var_23) {
                                    // return point_line_distance(eb1, ea0, ea1)              <L 27>
                                    var_24 = point_line_distance_0(var_eb1, var_ea0, var_ea1);
                                    goto label7;
                                }
                                if (!var_23) {
                                    // elif dt == 8:                                          <L 28>
                                    var_26 = (var_0 == var_25);
                                    if (var_26) {
                                        // return line_line_distance(ea0, ea1, eb0, eb1)       <L 29>
                                        var_27 = line_line_distance_0(var_ea0, var_ea1, var_eb0, var_eb1);
                                        goto label8;
                                    }
                                    if (!var_26) {
                                        // return wp.float64(1e20)                            <L 31>
                                        var_29 = wp::float64(var_28);
                                        goto label9;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    //---------
    // reverse
    if (!var_2) {
        if (!var_5) {
            if (!var_8) {
                if (!var_11) {
                    if (!var_14) {
                        if (!var_17) {
                            if (!var_20) {
                                if (!var_23) {
                                    if (!var_26) {
                                        label9:;
                                        adj_29 += adj_ret;
                                        wp::adj_float64(var_28, adj_28, adj_29);
                                        // adj: return wp.float64(1e20)                       <L 31>
                                    }
                                    if (var_26) {
                                        label8:;
                                        adj_27 += adj_ret;
                                        adj_line_line_distance_0(var_ea0, var_ea1, var_eb0, var_eb1, adj_ea0, adj_ea1, adj_eb0, adj_eb1, adj_27);
                                        // adj: return line_line_distance(ea0, ea1, eb0, eb1)  <L 29>
                                    }
                                    // adj: elif dt == 8:                                     <L 28>
                                }
                                if (var_23) {
                                    label7:;
                                    adj_24 += adj_ret;
                                    adj_point_line_distance_0(var_eb1, var_ea0, var_ea1, adj_eb1, adj_ea0, adj_ea1, adj_24);
                                    // adj: return point_line_distance(eb1, ea0, ea1)         <L 27>
                                }
                                // adj: elif dt == 7:                                         <L 26>
                            }
                            if (var_20) {
                                label6:;
                                adj_21 += adj_ret;
                                adj_point_line_distance_0(var_eb0, var_ea0, var_ea1, adj_eb0, adj_ea0, adj_ea1, adj_21);
                                // adj: return point_line_distance(eb0, ea0, ea1)             <L 25>
                            }
                            // adj: elif dt == 6:                                             <L 24>
                        }
                        if (var_17) {
                            label5:;
                            adj_18 += adj_ret;
                            adj_point_line_distance_0(var_ea1, var_eb0, var_eb1, adj_ea1, adj_eb0, adj_eb1, adj_18);
                            // adj: return point_line_distance(ea1, eb0, eb1)                 <L 23>
                        }
                        // adj: elif dt == 5:                                                 <L 22>
                    }
                    if (var_14) {
                        label4:;
                        adj_15 += adj_ret;
                        adj_point_point_distance_0(var_ea1, var_eb1, adj_ea1, adj_eb1, adj_15);
                        // adj: return point_point_distance(ea1, eb1)                         <L 21>
                    }
                    // adj: elif dt == 4:                                                     <L 20>
                }
                if (var_11) {
                    label3:;
                    adj_12 += adj_ret;
                    adj_point_point_distance_0(var_ea1, var_eb0, adj_ea1, adj_eb0, adj_12);
                    // adj: return point_point_distance(ea1, eb0)                             <L 19>
                }
                // adj: elif dt == 3:                                                         <L 18>
            }
            if (var_8) {
                label2:;
                adj_9 += adj_ret;
                adj_point_line_distance_0(var_ea0, var_eb0, var_eb1, adj_ea0, adj_eb0, adj_eb1, adj_9);
                // adj: return point_line_distance(ea0, eb0, eb1)                             <L 17>
            }
            // adj: elif dt == 2:                                                             <L 16>
        }
        if (var_5) {
            label1:;
            adj_6 += adj_ret;
            adj_point_point_distance_0(var_ea0, var_eb1, adj_ea0, adj_eb1, adj_6);
            // adj: return point_point_distance(ea0, eb1)                                     <L 15>
        }
        // adj: elif dt == 1:                                                                 <L 14>
    }
    if (var_2) {
        label0:;
        adj_3 += adj_ret;
        adj_point_point_distance_0(var_ea0, var_eb0, adj_ea0, adj_eb0, adj_3);
        // adj: return point_point_distance(ea0, eb0)                                         <L 13>
    }
    // adj: if dt == 0:                                                                       <L 12>
    adj_edge_edge_distance_type_0(var_ea0, var_ea1, var_eb0, var_eb1, adj_ea0, adj_ea1, adj_eb0, adj_eb1, adj_0);
    // adj: dt = edge_edge_distance_type(ea0, ea1, eb0, eb1)                                  <L 11>
    // adj: def edge_edge_distance(ea0: wp.vec3d, ea1: wp.vec3d, eb0: wp.vec3d, eb1: wp.vec3d):  <L 10>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/edge_edge_ccd.py:6
static CUDA_CALLABLE wp::float64 edge_edge_ccd_0(
    wp::vec_t<3,wp::float64> var_ea0,
    wp::vec_t<3,wp::float64> var_ea1,
    wp::vec_t<3,wp::float64> var_eb0,
    wp::vec_t<3,wp::float64> var_eb1,
    wp::vec_t<3,wp::float64> var_dea0,
    wp::vec_t<3,wp::float64> var_dea1,
    wp::vec_t<3,wp::float64> var_deb0,
    wp::vec_t<3,wp::float64> var_deb1,
    wp::float64 var_eta,
    wp::float64 var_thickness)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::vec_t<3,wp::float64> var_1;
    wp::vec_t<3,wp::float64> var_2;
    const wp::float32 var_3 = 4.0;
    wp::float64 var_4;
    wp::vec_t<3,wp::float64> var_5;
    wp::vec_t<3,wp::float64> var_6;
    wp::vec_t<3,wp::float64> var_7;
    wp::vec_t<3,wp::float64> var_8;
    wp::vec_t<3,wp::float64> var_9;
    wp::float64 var_10;
    wp::float64 var_11;
    wp::float64 var_12;
    wp::float64 var_13;
    wp::float64 var_14;
    wp::float64 var_15;
    wp::float64 var_16;
    wp::float64 var_17;
    wp::float64 var_18;
    const wp::float32 var_19 = 0.0;
    wp::float64 var_20;
    bool var_21;
    const wp::float32 var_22 = 1.0;
    wp::float64 var_23;
    wp::float64 var_24;
    wp::float64 var_25;
    wp::float64 var_26;
    wp::vec_t<4,wp::float64> var_27;
    wp::vec_t<3,wp::float64> var_28;
    wp::vec_t<3,wp::float64> var_29;
    wp::vec_t<3,wp::float64> var_30;
    wp::vec_t<3,wp::float64> var_31;
    const wp::float32 var_32 = 0.0;
    wp::float64 var_33;
    bool var_34;
    wp::vec_t<3,wp::float64> var_35;
    wp::vec_t<3,wp::float64> var_36;
    wp::vec_t<3,wp::float64> var_37;
    wp::vec_t<3,wp::float64> var_38;
    wp::float64 var_39;
    const wp::int32 var_40 = 0;
    wp::float64 var_41;
    const wp::int32 var_42 = 1;
    wp::float64 var_43;
    const wp::int32 var_44 = 2;
    wp::float64 var_45;
    const wp::int32 var_46 = 3;
    const wp::int32 var_47 = 0;
    wp::float64 var_48;
    const wp::int32 var_49 = 1;
    wp::float64 var_50;
    wp::float64 var_51;
    const wp::int32 var_52 = 2;
    wp::float64 var_53;
    const wp::int32 var_54 = 3;
    wp::float64 var_55;
    wp::float64 var_56;
    wp::float64 var_57;
    wp::float64 var_58;
    wp::float64 var_59;
    wp::float64 var_60;
    wp::float64 var_61;
    wp::vec_t<3,wp::float64> var_62;
    wp::vec_t<3,wp::float64> var_63;
    wp::vec_t<3,wp::float64> var_64;
    wp::vec_t<3,wp::float64> var_65;
    wp::float64 var_66;
    wp::float64 var_67;
    wp::float64 var_68;
    wp::float64 var_69;
    const wp::float32 var_70 = 0.0;
    wp::float64 var_71;
    const wp::int32 var_72 = 100000;
    wp::range_t var_73;
    wp::int32 var_74;
    const wp::float32 var_75 = 1.0;
    wp::float64 var_76;
    wp::float64 var_77;
    wp::float64 var_78;
    wp::float64 var_79;
    wp::float64 var_80;
    wp::float64 var_81;
    wp::vec_t<3,wp::float64> var_82;
    wp::vec_t<3,wp::float64> var_83;
    wp::vec_t<3,wp::float64> var_84;
    wp::vec_t<3,wp::float64> var_85;
    wp::vec_t<3,wp::float64> var_86;
    wp::vec_t<3,wp::float64> var_87;
    wp::vec_t<3,wp::float64> var_88;
    wp::vec_t<3,wp::float64> var_89;
    wp::float64 var_90;
    wp::float64 var_91;
    wp::float64 var_92;
    const wp::float32 var_93 = 0.0;
    wp::float64 var_94;
    bool var_95;
    wp::vec_t<3,wp::float64> var_96;
    wp::vec_t<3,wp::float64> var_97;
    wp::vec_t<3,wp::float64> var_98;
    wp::vec_t<3,wp::float64> var_99;
    wp::float64 var_100;
    const wp::int32 var_101 = 0;
    wp::float64 var_102;
    const wp::int32 var_103 = 1;
    wp::float64 var_104;
    const wp::int32 var_105 = 2;
    wp::float64 var_106;
    const wp::int32 var_107 = 3;
    const wp::int32 var_108 = 0;
    wp::float64 var_109;
    const wp::int32 var_110 = 1;
    wp::float64 var_111;
    wp::float64 var_112;
    const wp::int32 var_113 = 2;
    wp::float64 var_114;
    const wp::int32 var_115 = 3;
    wp::float64 var_116;
    wp::float64 var_117;
    wp::float64 var_118;
    wp::float64 var_119;
    wp::float64 var_120;
    wp::float64 var_121;
    wp::float64 var_122;
    wp::vec_t<3,wp::float64> var_123;
    wp::vec_t<3,wp::float64> var_124;
    wp::vec_t<3,wp::float64> var_125;
    wp::vec_t<3,wp::float64> var_126;
    wp::float64 var_127;
    wp::float64 var_128;
    wp::float64 var_129;
    bool var_130;
    bool var_131;
    wp::vec_t<3,wp::float64> var_132;
    wp::vec_t<3,wp::float64> var_133;
    wp::vec_t<3,wp::float64> var_134;
    wp::vec_t<3,wp::float64> var_135;
    wp::float64 var_136;
    wp::float64 var_137;
    wp::vec_t<3,wp::float64> var_138;
    wp::vec_t<3,wp::float64> var_139;
    wp::vec_t<3,wp::float64> var_140;
    wp::vec_t<3,wp::float64> var_141;
    wp::float64 var_142;
    wp::float64 var_143;
    const wp::float32 var_144 = 1.0;
    wp::float64 var_145;
    bool var_146;
    const wp::float32 var_147 = 1.0;
    wp::float64 var_148;
    //---------
    // forward
    // def edge_edge_ccd(                                                                     <L 7>
    // mov = (dea0 + dea1 + deb0 + deb1) / wp.float64(4.0)                                    <L 19>
    var_0 = wp::add(var_dea0, var_dea1);
    var_1 = wp::add(var_0, var_deb0);
    var_2 = wp::add(var_1, var_deb1);
    var_4 = wp::float64(var_3);
    var_5 = wp::div(var_2, var_4);
    // dea0 -= mov                                                                            <L 20>
    var_6 = wp::sub(var_dea0, var_5);
    // dea1 -= mov                                                                            <L 21>
    var_7 = wp::sub(var_dea1, var_5);
    // deb0 -= mov                                                                            <L 22>
    var_8 = wp::sub(var_deb0, var_5);
    // deb1 -= mov                                                                            <L 23>
    var_9 = wp::sub(var_deb1, var_5);
    // max_disp_mag = wp.sqrt(wp.max(wp.length_sq(dea0), wp.length_sq(dea1))) + wp.sqrt(wp.max(wp.length_sq(deb0), wp.length_sq(deb1)))       <L 25>
    var_10 = wp::length_sq(var_6);
    var_11 = wp::length_sq(var_7);
    var_12 = wp::max(var_10, var_11);
    var_13 = wp::sqrt(var_12);
    var_14 = wp::length_sq(var_8);
    var_15 = wp::length_sq(var_9);
    var_16 = wp::max(var_14, var_15);
    var_17 = wp::sqrt(var_16);
    var_18 = wp::add(var_13, var_17);
    // if max_disp_mag == wp.float64(0.0):                                                    <L 26>
    var_20 = wp::float64(var_19);
    var_21 = (var_18 == var_20);
    if (var_21) {
        // return wp.float64(1.0)                                                             <L 27>
        var_23 = wp::float64(var_22);
        return var_23;
    }
    // dist2_cur = edge_edge_distance(ea0, ea1, eb0, eb1)                                     <L 29>
    var_24 = edge_edge_distance_0(var_ea0, var_ea1, var_eb0, var_eb1);
    // dFunc = dist2_cur - thickness * thickness                                              <L 31>
    var_25 = wp::mul(var_thickness, var_thickness);
    var_26 = wp::sub(var_24, var_25);
    // dists = wp.vec4d()                                                                     <L 33>
    var_27 = wp::vec_t<4,wp::float64>();
    // eb0a0 = wp.vec3d()                                                                     <L 34>
    var_28 = wp::vec_t<3,wp::float64>();
    // eb1a0 = wp.vec3d()                                                                     <L 35>
    var_29 = wp::vec_t<3,wp::float64>();
    // eb0a1 = wp.vec3d()                                                                     <L 36>
    var_30 = wp::vec_t<3,wp::float64>();
    // eb1a1 = wp.vec3d()                                                                     <L 37>
    var_31 = wp::vec_t<3,wp::float64>();
    // if dFunc <= wp.float64(0.0):                                                           <L 38>
    var_33 = wp::float64(var_32);
    var_34 = (var_26 <= var_33);
    if (var_34) {
        // eb0a0 = ea0 - eb0                                                                  <L 41>
        var_35 = wp::sub(var_ea0, var_eb0);
        // eb1a0 = ea0 - eb1                                                                  <L 42>
        var_36 = wp::sub(var_ea0, var_eb1);
        // eb0a1 = ea1 - eb0                                                                  <L 43>
        var_37 = wp::sub(var_ea1, var_eb0);
        // eb1a1 = ea1 - eb1                                                                  <L 44>
        var_38 = wp::sub(var_ea1, var_eb1);
        // dists[0] = wp.length_sq(eb0a0)                                                     <L 46>
        var_39 = wp::length_sq(var_35);
        wp::assign_inplace(var_27, var_40, var_39);
        // dists[1] = wp.length_sq(eb1a0)                                                     <L 47>
        var_41 = wp::length_sq(var_36);
        wp::assign_inplace(var_27, var_42, var_41);
        // dists[2] = wp.length_sq(eb0a1)                                                     <L 48>
        var_43 = wp::length_sq(var_37);
        wp::assign_inplace(var_27, var_44, var_43);
        // dists[3] = wp.length_sq(eb1a1)                                                     <L 49>
        var_45 = wp::length_sq(var_38);
        wp::assign_inplace(var_27, var_46, var_45);
        // dist2_cur = wp.min(wp.min(dists[0], dists[1]), wp.min(dists[2], dists[3]))         <L 50>
        var_48 = wp::extract(var_27, var_47);
        var_50 = wp::extract(var_27, var_49);
        var_51 = wp::min(var_48, var_50);
        var_53 = wp::extract(var_27, var_52);
        var_55 = wp::extract(var_27, var_54);
        var_56 = wp::min(var_53, var_55);
        var_57 = wp::min(var_51, var_56);
        // dFunc = dist2_cur - thickness * thickness                                          <L 51>
        var_58 = wp::mul(var_thickness, var_thickness);
        var_59 = wp::sub(var_57, var_58);
    }
    var_60 = wp::where(var_34, var_57, var_24);
    var_61 = wp::where(var_34, var_59, var_26);
    var_62 = wp::where(var_34, var_35, var_28);
    var_63 = wp::where(var_34, var_36, var_29);
    var_64 = wp::where(var_34, var_37, var_30);
    var_65 = wp::where(var_34, var_38, var_31);
    // dist_cur = wp.sqrt(dist2_cur)                                                          <L 53>
    var_66 = wp::sqrt(var_60);
    // gap = eta * dFunc / (dist_cur + thickness)                                             <L 54>
    var_67 = wp::mul(var_eta, var_61);
    var_68 = wp::add(var_66, var_thickness);
    var_69 = wp::div(var_67, var_68);
    // toc = wp.float64(0.0)                                                                  <L 55>
    var_71 = wp::float64(var_70);
    // for _ in range(100000):                                                                <L 57>
    var_73 = wp::range(var_72);
    start_for_1:;
        if (iter_cmp(var_73) == 0) goto end_for_1;
        var_74 = wp::iter_next(var_73);
        // toc_lower_bound = (wp.float64(1.0) - eta) * dFunc / ((dist_cur + thickness) * max_disp_mag)       <L 58>
        var_76 = wp::float64(var_75);
        var_77 = wp::sub(var_76, var_eta);
        var_78 = wp::mul(var_77, var_61);
        var_79 = wp::add(var_66, var_thickness);
        var_80 = wp::mul(var_79, var_18);
        var_81 = wp::div(var_78, var_80);
        // ea0 += toc_lower_bound * dea0                                                      <L 59>
        var_82 = wp::mul(var_81, var_6);
        var_83 = wp::add(var_ea0, var_82);
        // ea1 += toc_lower_bound * dea1                                                      <L 60>
        var_84 = wp::mul(var_81, var_7);
        var_85 = wp::add(var_ea1, var_84);
        // eb0 += toc_lower_bound * deb0                                                      <L 61>
        var_86 = wp::mul(var_81, var_8);
        var_87 = wp::add(var_eb0, var_86);
        // eb1 += toc_lower_bound * deb1                                                      <L 62>
        var_88 = wp::mul(var_81, var_9);
        var_89 = wp::add(var_eb1, var_88);
        // dist2_cur = edge_edge_distance(ea0, ea1, eb0, eb1)                                 <L 64>
        var_90 = edge_edge_distance_0(var_83, var_85, var_87, var_89);
        // dFunc = dist2_cur - thickness * thickness                                          <L 65>
        var_91 = wp::mul(var_thickness, var_thickness);
        var_92 = wp::sub(var_90, var_91);
        // if dFunc <= wp.float64(0.0):                                                       <L 66>
        var_94 = wp::float64(var_93);
        var_95 = (var_92 <= var_94);
        if (var_95) {
            // eb0a0 = ea0 - eb0                                                              <L 69>
            var_96 = wp::sub(var_83, var_87);
            // eb1a0 = ea0 - eb1                                                              <L 70>
            var_97 = wp::sub(var_83, var_89);
            // eb0a1 = ea1 - eb0                                                              <L 71>
            var_98 = wp::sub(var_85, var_87);
            // eb1a1 = ea1 - eb1                                                              <L 72>
            var_99 = wp::sub(var_85, var_89);
            // dists[0] = wp.length_sq(eb0a0)                                                 <L 74>
            var_100 = wp::length_sq(var_96);
            wp::assign_inplace(var_27, var_101, var_100);
            // dists[1] = wp.length_sq(eb1a0)                                                 <L 75>
            var_102 = wp::length_sq(var_97);
            wp::assign_inplace(var_27, var_103, var_102);
            // dists[2] = wp.length_sq(eb0a1)                                                 <L 76>
            var_104 = wp::length_sq(var_98);
            wp::assign_inplace(var_27, var_105, var_104);
            // dists[3] = wp.length_sq(eb1a1)                                                 <L 77>
            var_106 = wp::length_sq(var_99);
            wp::assign_inplace(var_27, var_107, var_106);
            // dist2_cur = wp.min(wp.min(dists[0], dists[1]), wp.min(dists[2], dists[3]))       <L 78>
            var_109 = wp::extract(var_27, var_108);
            var_111 = wp::extract(var_27, var_110);
            var_112 = wp::min(var_109, var_111);
            var_114 = wp::extract(var_27, var_113);
            var_116 = wp::extract(var_27, var_115);
            var_117 = wp::min(var_114, var_116);
            var_118 = wp::min(var_112, var_117);
            // dFunc = dist2_cur - thickness * thickness                                      <L 79>
            var_119 = wp::mul(var_thickness, var_thickness);
            var_120 = wp::sub(var_118, var_119);
        }
        var_121 = wp::where(var_95, var_118, var_90);
        var_122 = wp::where(var_95, var_120, var_92);
        var_123 = wp::where(var_95, var_96, var_62);
        var_124 = wp::where(var_95, var_97, var_63);
        var_125 = wp::where(var_95, var_98, var_64);
        var_126 = wp::where(var_95, var_99, var_65);
        // dist_cur = wp.sqrt(dist2_cur)                                                      <L 81>
        var_127 = wp::sqrt(var_121);
        // if toc and (dFunc / (dist_cur + thickness) < gap):                                 <L 82>
        var_128 = wp::add(var_127, var_thickness);
        var_129 = wp::div(var_122, var_128);
        var_130 = (var_129 < var_69);
        var_131 = var_71 && var_130;
        if (var_131) {
            // break                                                                          <L 83>
            wp::assign(var_ea0, var_83);
            wp::assign(var_ea1, var_85);
            wp::assign(var_eb0, var_87);
            wp::assign(var_eb1, var_89);
            wp::assign(var_60, var_121);
            wp::assign(var_61, var_122);
            wp::assign(var_62, var_123);
            wp::assign(var_63, var_124);
            wp::assign(var_64, var_125);
            wp::assign(var_65, var_126);
            wp::assign(var_66, var_127);
            goto end_for_1;
        }
        var_132 = wp::where(var_131, var_ea0, var_83);
        var_133 = wp::where(var_131, var_ea1, var_85);
        var_134 = wp::where(var_131, var_eb0, var_87);
        var_135 = wp::where(var_131, var_eb1, var_89);
        var_136 = wp::where(var_131, var_60, var_121);
        var_137 = wp::where(var_131, var_61, var_122);
        var_138 = wp::where(var_131, var_62, var_123);
        var_139 = wp::where(var_131, var_63, var_124);
        var_140 = wp::where(var_131, var_64, var_125);
        var_141 = wp::where(var_131, var_65, var_126);
        var_142 = wp::where(var_131, var_66, var_127);
        // toc += toc_lower_bound                                                             <L 85>
        var_143 = wp::add(var_71, var_81);
        // if toc > wp.float64(1.0):                                                          <L 86>
        var_145 = wp::float64(var_144);
        var_146 = (var_143 > var_145);
        if (var_146) {
            // return wp.float64(1.0)                                                         <L 87>
            var_148 = wp::float64(var_147);
            return var_148;
        }
        wp::assign(var_ea0, var_132);
        wp::assign(var_ea1, var_133);
        wp::assign(var_eb0, var_134);
        wp::assign(var_eb1, var_135);
        wp::assign(var_60, var_136);
        wp::assign(var_61, var_137);
        wp::assign(var_62, var_138);
        wp::assign(var_63, var_139);
        wp::assign(var_64, var_140);
        wp::assign(var_65, var_141);
        wp::assign(var_66, var_142);
        wp::assign(var_71, var_143);
        goto start_for_1;
    end_for_1:;
    // return toc                                                                             <L 89>
    return var_71;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/contact/edge_edge_ccd.py:6
static CUDA_CALLABLE void adj_edge_edge_ccd_0(
    wp::vec_t<3,wp::float64> var_ea0,
    wp::vec_t<3,wp::float64> var_ea1,
    wp::vec_t<3,wp::float64> var_eb0,
    wp::vec_t<3,wp::float64> var_eb1,
    wp::vec_t<3,wp::float64> var_dea0,
    wp::vec_t<3,wp::float64> var_dea1,
    wp::vec_t<3,wp::float64> var_deb0,
    wp::vec_t<3,wp::float64> var_deb1,
    wp::float64 var_eta,
    wp::float64 var_thickness,
    wp::vec_t<3,wp::float64> & adj_ea0,
    wp::vec_t<3,wp::float64> & adj_ea1,
    wp::vec_t<3,wp::float64> & adj_eb0,
    wp::vec_t<3,wp::float64> & adj_eb1,
    wp::vec_t<3,wp::float64> & adj_dea0,
    wp::vec_t<3,wp::float64> & adj_dea1,
    wp::vec_t<3,wp::float64> & adj_deb0,
    wp::vec_t<3,wp::float64> & adj_deb1,
    wp::float64 & adj_eta,
    wp::float64 & adj_thickness,
    wp::float64 & adj_ret)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float64> var_0;
    wp::vec_t<3,wp::float64> var_1;
    wp::vec_t<3,wp::float64> var_2;
    const wp::float32 var_3 = 4.0;
    wp::float64 var_4;
    wp::vec_t<3,wp::float64> var_5;
    wp::vec_t<3,wp::float64> var_6;
    wp::vec_t<3,wp::float64> var_7;
    wp::vec_t<3,wp::float64> var_8;
    wp::vec_t<3,wp::float64> var_9;
    wp::float64 var_10;
    wp::float64 var_11;
    wp::float64 var_12;
    wp::float64 var_13;
    wp::float64 var_14;
    wp::float64 var_15;
    wp::float64 var_16;
    wp::float64 var_17;
    wp::float64 var_18;
    const wp::float32 var_19 = 0.0;
    wp::float64 var_20;
    bool var_21;
    const wp::float32 var_22 = 1.0;
    wp::float64 var_23;
    wp::float64 var_24;
    wp::float64 var_25;
    wp::float64 var_26;
    wp::vec_t<4,wp::float64> var_27;
    wp::vec_t<3,wp::float64> var_28;
    wp::vec_t<3,wp::float64> var_29;
    wp::vec_t<3,wp::float64> var_30;
    wp::vec_t<3,wp::float64> var_31;
    const wp::float32 var_32 = 0.0;
    wp::float64 var_33;
    bool var_34;
    wp::vec_t<3,wp::float64> var_35;
    wp::vec_t<3,wp::float64> var_36;
    wp::vec_t<3,wp::float64> var_37;
    wp::vec_t<3,wp::float64> var_38;
    wp::float64 var_39;
    const wp::int32 var_40 = 0;
    wp::float64 var_41;
    const wp::int32 var_42 = 1;
    wp::float64 var_43;
    const wp::int32 var_44 = 2;
    wp::float64 var_45;
    const wp::int32 var_46 = 3;
    const wp::int32 var_47 = 0;
    wp::float64 var_48;
    const wp::int32 var_49 = 1;
    wp::float64 var_50;
    wp::float64 var_51;
    const wp::int32 var_52 = 2;
    wp::float64 var_53;
    const wp::int32 var_54 = 3;
    wp::float64 var_55;
    wp::float64 var_56;
    wp::float64 var_57;
    wp::float64 var_58;
    wp::float64 var_59;
    wp::float64 var_60;
    wp::float64 var_61;
    wp::vec_t<3,wp::float64> var_62;
    wp::vec_t<3,wp::float64> var_63;
    wp::vec_t<3,wp::float64> var_64;
    wp::vec_t<3,wp::float64> var_65;
    wp::float64 var_66;
    wp::float64 var_67;
    wp::float64 var_68;
    wp::float64 var_69;
    const wp::float32 var_70 = 0.0;
    wp::float64 var_71;
    const wp::int32 var_72 = 100000;
    wp::range_t var_73;
    wp::int32 var_74;
    const wp::float32 var_75 = 1.0;
    wp::float64 var_76;
    wp::float64 var_77;
    wp::float64 var_78;
    wp::float64 var_79;
    wp::float64 var_80;
    wp::float64 var_81;
    wp::vec_t<3,wp::float64> var_82;
    wp::vec_t<3,wp::float64> var_83;
    wp::vec_t<3,wp::float64> var_84;
    wp::vec_t<3,wp::float64> var_85;
    wp::vec_t<3,wp::float64> var_86;
    wp::vec_t<3,wp::float64> var_87;
    wp::vec_t<3,wp::float64> var_88;
    wp::vec_t<3,wp::float64> var_89;
    wp::float64 var_90;
    wp::float64 var_91;
    wp::float64 var_92;
    const wp::float32 var_93 = 0.0;
    wp::float64 var_94;
    bool var_95;
    wp::vec_t<3,wp::float64> var_96;
    wp::vec_t<3,wp::float64> var_97;
    wp::vec_t<3,wp::float64> var_98;
    wp::vec_t<3,wp::float64> var_99;
    wp::float64 var_100;
    const wp::int32 var_101 = 0;
    wp::float64 var_102;
    const wp::int32 var_103 = 1;
    wp::float64 var_104;
    const wp::int32 var_105 = 2;
    wp::float64 var_106;
    const wp::int32 var_107 = 3;
    const wp::int32 var_108 = 0;
    wp::float64 var_109;
    const wp::int32 var_110 = 1;
    wp::float64 var_111;
    wp::float64 var_112;
    const wp::int32 var_113 = 2;
    wp::float64 var_114;
    const wp::int32 var_115 = 3;
    wp::float64 var_116;
    wp::float64 var_117;
    wp::float64 var_118;
    wp::float64 var_119;
    wp::float64 var_120;
    wp::float64 var_121;
    wp::float64 var_122;
    wp::vec_t<3,wp::float64> var_123;
    wp::vec_t<3,wp::float64> var_124;
    wp::vec_t<3,wp::float64> var_125;
    wp::vec_t<3,wp::float64> var_126;
    wp::float64 var_127;
    wp::float64 var_128;
    wp::float64 var_129;
    bool var_130;
    bool var_131;
    wp::vec_t<3,wp::float64> var_132;
    wp::vec_t<3,wp::float64> var_133;
    wp::vec_t<3,wp::float64> var_134;
    wp::vec_t<3,wp::float64> var_135;
    wp::float64 var_136;
    wp::float64 var_137;
    wp::vec_t<3,wp::float64> var_138;
    wp::vec_t<3,wp::float64> var_139;
    wp::vec_t<3,wp::float64> var_140;
    wp::vec_t<3,wp::float64> var_141;
    wp::float64 var_142;
    wp::float64 var_143;
    const wp::float32 var_144 = 1.0;
    wp::float64 var_145;
    bool var_146;
    const wp::float32 var_147 = 1.0;
    wp::float64 var_148;
    //---------
    // dual vars
    wp::vec_t<3,wp::float64> adj_0 = {};
    wp::vec_t<3,wp::float64> adj_1 = {};
    wp::vec_t<3,wp::float64> adj_2 = {};
    wp::float32 adj_3 = {};
    wp::float64 adj_4 = {};
    wp::vec_t<3,wp::float64> adj_5 = {};
    wp::vec_t<3,wp::float64> adj_6 = {};
    wp::vec_t<3,wp::float64> adj_7 = {};
    wp::vec_t<3,wp::float64> adj_8 = {};
    wp::vec_t<3,wp::float64> adj_9 = {};
    wp::float64 adj_10 = {};
    wp::float64 adj_11 = {};
    wp::float64 adj_12 = {};
    wp::float64 adj_13 = {};
    wp::float64 adj_14 = {};
    wp::float64 adj_15 = {};
    wp::float64 adj_16 = {};
    wp::float64 adj_17 = {};
    wp::float64 adj_18 = {};
    wp::float32 adj_19 = {};
    wp::float64 adj_20 = {};
    bool adj_21 = {};
    wp::float32 adj_22 = {};
    wp::float64 adj_23 = {};
    wp::float64 adj_24 = {};
    wp::float64 adj_25 = {};
    wp::float64 adj_26 = {};
    wp::vec_t<4,wp::float64> adj_27 = {};
    wp::vec_t<3,wp::float64> adj_28 = {};
    wp::vec_t<3,wp::float64> adj_29 = {};
    wp::vec_t<3,wp::float64> adj_30 = {};
    wp::vec_t<3,wp::float64> adj_31 = {};
    wp::float32 adj_32 = {};
    wp::float64 adj_33 = {};
    bool adj_34 = {};
    wp::vec_t<3,wp::float64> adj_35 = {};
    wp::vec_t<3,wp::float64> adj_36 = {};
    wp::vec_t<3,wp::float64> adj_37 = {};
    wp::vec_t<3,wp::float64> adj_38 = {};
    wp::float64 adj_39 = {};
    wp::int32 adj_40 = {};
    wp::float64 adj_41 = {};
    wp::int32 adj_42 = {};
    wp::float64 adj_43 = {};
    wp::int32 adj_44 = {};
    wp::float64 adj_45 = {};
    wp::int32 adj_46 = {};
    wp::int32 adj_47 = {};
    wp::float64 adj_48 = {};
    wp::int32 adj_49 = {};
    wp::float64 adj_50 = {};
    wp::float64 adj_51 = {};
    wp::int32 adj_52 = {};
    wp::float64 adj_53 = {};
    wp::int32 adj_54 = {};
    wp::float64 adj_55 = {};
    wp::float64 adj_56 = {};
    wp::float64 adj_57 = {};
    wp::float64 adj_58 = {};
    wp::float64 adj_59 = {};
    wp::float64 adj_60 = {};
    wp::float64 adj_61 = {};
    wp::vec_t<3,wp::float64> adj_62 = {};
    wp::vec_t<3,wp::float64> adj_63 = {};
    wp::vec_t<3,wp::float64> adj_64 = {};
    wp::vec_t<3,wp::float64> adj_65 = {};
    wp::float64 adj_66 = {};
    wp::float64 adj_67 = {};
    wp::float64 adj_68 = {};
    wp::float64 adj_69 = {};
    wp::float32 adj_70 = {};
    wp::float64 adj_71 = {};
    wp::int32 adj_72 = {};
    wp::range_t adj_73 = {};
    wp::int32 adj_74 = {};
    wp::float32 adj_75 = {};
    wp::float64 adj_76 = {};
    wp::float64 adj_77 = {};
    wp::float64 adj_78 = {};
    wp::float64 adj_79 = {};
    wp::float64 adj_80 = {};
    wp::float64 adj_81 = {};
    wp::vec_t<3,wp::float64> adj_82 = {};
    wp::vec_t<3,wp::float64> adj_83 = {};
    wp::vec_t<3,wp::float64> adj_84 = {};
    wp::vec_t<3,wp::float64> adj_85 = {};
    wp::vec_t<3,wp::float64> adj_86 = {};
    wp::vec_t<3,wp::float64> adj_87 = {};
    wp::vec_t<3,wp::float64> adj_88 = {};
    wp::vec_t<3,wp::float64> adj_89 = {};
    wp::float64 adj_90 = {};
    wp::float64 adj_91 = {};
    wp::float64 adj_92 = {};
    wp::float32 adj_93 = {};
    wp::float64 adj_94 = {};
    bool adj_95 = {};
    wp::vec_t<3,wp::float64> adj_96 = {};
    wp::vec_t<3,wp::float64> adj_97 = {};
    wp::vec_t<3,wp::float64> adj_98 = {};
    wp::vec_t<3,wp::float64> adj_99 = {};
    wp::float64 adj_100 = {};
    wp::int32 adj_101 = {};
    wp::float64 adj_102 = {};
    wp::int32 adj_103 = {};
    wp::float64 adj_104 = {};
    wp::int32 adj_105 = {};
    wp::float64 adj_106 = {};
    wp::int32 adj_107 = {};
    wp::int32 adj_108 = {};
    wp::float64 adj_109 = {};
    wp::int32 adj_110 = {};
    wp::float64 adj_111 = {};
    wp::float64 adj_112 = {};
    wp::int32 adj_113 = {};
    wp::float64 adj_114 = {};
    wp::int32 adj_115 = {};
    wp::float64 adj_116 = {};
    wp::float64 adj_117 = {};
    wp::float64 adj_118 = {};
    wp::float64 adj_119 = {};
    wp::float64 adj_120 = {};
    wp::float64 adj_121 = {};
    wp::float64 adj_122 = {};
    wp::vec_t<3,wp::float64> adj_123 = {};
    wp::vec_t<3,wp::float64> adj_124 = {};
    wp::vec_t<3,wp::float64> adj_125 = {};
    wp::vec_t<3,wp::float64> adj_126 = {};
    wp::float64 adj_127 = {};
    wp::float64 adj_128 = {};
    wp::float64 adj_129 = {};
    bool adj_130 = {};
    bool adj_131 = {};
    wp::vec_t<3,wp::float64> adj_132 = {};
    wp::vec_t<3,wp::float64> adj_133 = {};
    wp::vec_t<3,wp::float64> adj_134 = {};
    wp::vec_t<3,wp::float64> adj_135 = {};
    wp::float64 adj_136 = {};
    wp::float64 adj_137 = {};
    wp::vec_t<3,wp::float64> adj_138 = {};
    wp::vec_t<3,wp::float64> adj_139 = {};
    wp::vec_t<3,wp::float64> adj_140 = {};
    wp::vec_t<3,wp::float64> adj_141 = {};
    wp::float64 adj_142 = {};
    wp::float64 adj_143 = {};
    wp::float32 adj_144 = {};
    wp::float64 adj_145 = {};
    bool adj_146 = {};
    wp::float32 adj_147 = {};
    wp::float64 adj_148 = {};
    //---------
    // forward
    // def edge_edge_ccd(                                                                     <L 7>
    // mov = (dea0 + dea1 + deb0 + deb1) / wp.float64(4.0)                                    <L 19>
    var_0 = wp::add(var_dea0, var_dea1);
    var_1 = wp::add(var_0, var_deb0);
    var_2 = wp::add(var_1, var_deb1);
    var_4 = wp::float64(var_3);
    var_5 = wp::div(var_2, var_4);
    // dea0 -= mov                                                                            <L 20>
    var_6 = wp::sub(var_dea0, var_5);
    // dea1 -= mov                                                                            <L 21>
    var_7 = wp::sub(var_dea1, var_5);
    // deb0 -= mov                                                                            <L 22>
    var_8 = wp::sub(var_deb0, var_5);
    // deb1 -= mov                                                                            <L 23>
    var_9 = wp::sub(var_deb1, var_5);
    // max_disp_mag = wp.sqrt(wp.max(wp.length_sq(dea0), wp.length_sq(dea1))) + wp.sqrt(wp.max(wp.length_sq(deb0), wp.length_sq(deb1)))       <L 25>
    var_10 = wp::length_sq(var_6);
    var_11 = wp::length_sq(var_7);
    var_12 = wp::max(var_10, var_11);
    var_13 = wp::sqrt(var_12);
    var_14 = wp::length_sq(var_8);
    var_15 = wp::length_sq(var_9);
    var_16 = wp::max(var_14, var_15);
    var_17 = wp::sqrt(var_16);
    var_18 = wp::add(var_13, var_17);
    // if max_disp_mag == wp.float64(0.0):                                                    <L 26>
    var_20 = wp::float64(var_19);
    var_21 = (var_18 == var_20);
    if (var_21) {
        // return wp.float64(1.0)                                                             <L 27>
        var_23 = wp::float64(var_22);
        goto label0;
    }
    // dist2_cur = edge_edge_distance(ea0, ea1, eb0, eb1)                                     <L 29>
    var_24 = edge_edge_distance_0(var_ea0, var_ea1, var_eb0, var_eb1);
    // dFunc = dist2_cur - thickness * thickness                                              <L 31>
    var_25 = wp::mul(var_thickness, var_thickness);
    var_26 = wp::sub(var_24, var_25);
    // dists = wp.vec4d()                                                                     <L 33>
    var_27 = wp::vec_t<4,wp::float64>();
    // eb0a0 = wp.vec3d()                                                                     <L 34>
    var_28 = wp::vec_t<3,wp::float64>();
    // eb1a0 = wp.vec3d()                                                                     <L 35>
    var_29 = wp::vec_t<3,wp::float64>();
    // eb0a1 = wp.vec3d()                                                                     <L 36>
    var_30 = wp::vec_t<3,wp::float64>();
    // eb1a1 = wp.vec3d()                                                                     <L 37>
    var_31 = wp::vec_t<3,wp::float64>();
    // if dFunc <= wp.float64(0.0):                                                           <L 38>
    var_33 = wp::float64(var_32);
    var_34 = (var_26 <= var_33);
    if (var_34) {
        // eb0a0 = ea0 - eb0                                                                  <L 41>
        var_35 = wp::sub(var_ea0, var_eb0);
        // eb1a0 = ea0 - eb1                                                                  <L 42>
        var_36 = wp::sub(var_ea0, var_eb1);
        // eb0a1 = ea1 - eb0                                                                  <L 43>
        var_37 = wp::sub(var_ea1, var_eb0);
        // eb1a1 = ea1 - eb1                                                                  <L 44>
        var_38 = wp::sub(var_ea1, var_eb1);
        // dists[0] = wp.length_sq(eb0a0)                                                     <L 46>
        var_39 = wp::length_sq(var_35);
        wp::assign_inplace(var_27, var_40, var_39);
        // dists[1] = wp.length_sq(eb1a0)                                                     <L 47>
        var_41 = wp::length_sq(var_36);
        wp::assign_inplace(var_27, var_42, var_41);
        // dists[2] = wp.length_sq(eb0a1)                                                     <L 48>
        var_43 = wp::length_sq(var_37);
        wp::assign_inplace(var_27, var_44, var_43);
        // dists[3] = wp.length_sq(eb1a1)                                                     <L 49>
        var_45 = wp::length_sq(var_38);
        wp::assign_inplace(var_27, var_46, var_45);
        // dist2_cur = wp.min(wp.min(dists[0], dists[1]), wp.min(dists[2], dists[3]))         <L 50>
        var_48 = wp::extract(var_27, var_47);
        var_50 = wp::extract(var_27, var_49);
        var_51 = wp::min(var_48, var_50);
        var_53 = wp::extract(var_27, var_52);
        var_55 = wp::extract(var_27, var_54);
        var_56 = wp::min(var_53, var_55);
        var_57 = wp::min(var_51, var_56);
        // dFunc = dist2_cur - thickness * thickness                                          <L 51>
        var_58 = wp::mul(var_thickness, var_thickness);
        var_59 = wp::sub(var_57, var_58);
    }
    var_60 = wp::where(var_34, var_57, var_24);
    var_61 = wp::where(var_34, var_59, var_26);
    var_62 = wp::where(var_34, var_35, var_28);
    var_63 = wp::where(var_34, var_36, var_29);
    var_64 = wp::where(var_34, var_37, var_30);
    var_65 = wp::where(var_34, var_38, var_31);
    // dist_cur = wp.sqrt(dist2_cur)                                                          <L 53>
    var_66 = wp::sqrt(var_60);
    // gap = eta * dFunc / (dist_cur + thickness)                                             <L 54>
    var_67 = wp::mul(var_eta, var_61);
    var_68 = wp::add(var_66, var_thickness);
    var_69 = wp::div(var_67, var_68);
    // toc = wp.float64(0.0)                                                                  <L 55>
    var_71 = wp::float64(var_70);
    // for _ in range(100000):                                                                <L 57>
    var_73 = wp::range(var_72);
    // return toc                                                                             <L 89>
    goto label4;
    //---------
    // reverse
    label4:;
    adj_71 += adj_ret;
    // adj: return toc                                                                        <L 89>
    var_73 = wp::iter_reverse(var_73);
    start_for_1:;
        if (iter_cmp(var_73) == 0) goto end_for_1;
        var_74 = wp::iter_next(var_73);
    	adj_75 = {};
    	adj_76 = {};
    	adj_77 = {};
    	adj_78 = {};
    	adj_79 = {};
    	adj_80 = {};
    	adj_81 = {};
    	adj_82 = {};
    	adj_83 = {};
    	adj_84 = {};
    	adj_85 = {};
    	adj_86 = {};
    	adj_87 = {};
    	adj_88 = {};
    	adj_89 = {};
    	adj_90 = {};
    	adj_91 = {};
    	adj_92 = {};
    	adj_93 = {};
    	adj_94 = {};
    	adj_95 = {};
    	adj_96 = {};
    	adj_97 = {};
    	adj_98 = {};
    	adj_99 = {};
    	adj_100 = {};
    	adj_101 = {};
    	adj_102 = {};
    	adj_103 = {};
    	adj_104 = {};
    	adj_105 = {};
    	adj_106 = {};
    	adj_107 = {};
    	adj_108 = {};
    	adj_109 = {};
    	adj_110 = {};
    	adj_111 = {};
    	adj_112 = {};
    	adj_113 = {};
    	adj_114 = {};
    	adj_115 = {};
    	adj_116 = {};
    	adj_117 = {};
    	adj_118 = {};
    	adj_119 = {};
    	adj_120 = {};
    	adj_121 = {};
    	adj_122 = {};
    	adj_123 = {};
    	adj_124 = {};
    	adj_125 = {};
    	adj_126 = {};
    	adj_127 = {};
    	adj_128 = {};
    	adj_129 = {};
    	adj_130 = {};
    	adj_131 = {};
    	adj_132 = {};
    	adj_133 = {};
    	adj_134 = {};
    	adj_135 = {};
    	adj_136 = {};
    	adj_137 = {};
    	adj_138 = {};
    	adj_139 = {};
    	adj_140 = {};
    	adj_141 = {};
    	adj_142 = {};
    	adj_143 = {};
    	adj_144 = {};
    	adj_145 = {};
    	adj_146 = {};
    	adj_147 = {};
    	adj_148 = {};
        // toc_lower_bound = (wp.float64(1.0) - eta) * dFunc / ((dist_cur + thickness) * max_disp_mag)       <L 58>
        var_76 = wp::float64(var_75);
        var_77 = wp::sub(var_76, var_eta);
        var_78 = wp::mul(var_77, var_61);
        var_79 = wp::add(var_66, var_thickness);
        var_80 = wp::mul(var_79, var_18);
        var_81 = wp::div(var_78, var_80);
        // ea0 += toc_lower_bound * dea0                                                      <L 59>
        var_82 = wp::mul(var_81, var_6);
        var_83 = wp::add(var_ea0, var_82);
        // ea1 += toc_lower_bound * dea1                                                      <L 60>
        var_84 = wp::mul(var_81, var_7);
        var_85 = wp::add(var_ea1, var_84);
        // eb0 += toc_lower_bound * deb0                                                      <L 61>
        var_86 = wp::mul(var_81, var_8);
        var_87 = wp::add(var_eb0, var_86);
        // eb1 += toc_lower_bound * deb1                                                      <L 62>
        var_88 = wp::mul(var_81, var_9);
        var_89 = wp::add(var_eb1, var_88);
        // dist2_cur = edge_edge_distance(ea0, ea1, eb0, eb1)                                 <L 64>
        var_90 = edge_edge_distance_0(var_83, var_85, var_87, var_89);
        // dFunc = dist2_cur - thickness * thickness                                          <L 65>
        var_91 = wp::mul(var_thickness, var_thickness);
        var_92 = wp::sub(var_90, var_91);
        // if dFunc <= wp.float64(0.0):                                                       <L 66>
        var_94 = wp::float64(var_93);
        var_95 = (var_92 <= var_94);
        if (var_95) {
            // eb0a0 = ea0 - eb0                                                              <L 69>
            var_96 = wp::sub(var_83, var_87);
            // eb1a0 = ea0 - eb1                                                              <L 70>
            var_97 = wp::sub(var_83, var_89);
            // eb0a1 = ea1 - eb0                                                              <L 71>
            var_98 = wp::sub(var_85, var_87);
            // eb1a1 = ea1 - eb1                                                              <L 72>
            var_99 = wp::sub(var_85, var_89);
            // dists[0] = wp.length_sq(eb0a0)                                                 <L 74>
            var_100 = wp::length_sq(var_96);
            wp::assign_inplace(var_27, var_101, var_100);
            // dists[1] = wp.length_sq(eb1a0)                                                 <L 75>
            var_102 = wp::length_sq(var_97);
            wp::assign_inplace(var_27, var_103, var_102);
            // dists[2] = wp.length_sq(eb0a1)                                                 <L 76>
            var_104 = wp::length_sq(var_98);
            wp::assign_inplace(var_27, var_105, var_104);
            // dists[3] = wp.length_sq(eb1a1)                                                 <L 77>
            var_106 = wp::length_sq(var_99);
            wp::assign_inplace(var_27, var_107, var_106);
            // dist2_cur = wp.min(wp.min(dists[0], dists[1]), wp.min(dists[2], dists[3]))       <L 78>
            var_109 = wp::extract(var_27, var_108);
            var_111 = wp::extract(var_27, var_110);
            var_112 = wp::min(var_109, var_111);
            var_114 = wp::extract(var_27, var_113);
            var_116 = wp::extract(var_27, var_115);
            var_117 = wp::min(var_114, var_116);
            var_118 = wp::min(var_112, var_117);
            // dFunc = dist2_cur - thickness * thickness                                      <L 79>
            var_119 = wp::mul(var_thickness, var_thickness);
            var_120 = wp::sub(var_118, var_119);
        }
        var_121 = wp::where(var_95, var_118, var_90);
        var_122 = wp::where(var_95, var_120, var_92);
        var_123 = wp::where(var_95, var_96, var_62);
        var_124 = wp::where(var_95, var_97, var_63);
        var_125 = wp::where(var_95, var_98, var_64);
        var_126 = wp::where(var_95, var_99, var_65);
        // dist_cur = wp.sqrt(dist2_cur)                                                      <L 81>
        var_127 = wp::sqrt(var_121);
        // if toc and (dFunc / (dist_cur + thickness) < gap):                                 <L 82>
        var_128 = wp::add(var_127, var_thickness);
        var_129 = wp::div(var_122, var_128);
        var_130 = (var_129 < var_69);
        var_131 = var_71 && var_130;
        if (var_131) {
            // break                                                                          <L 83>
            wp::assign(var_ea0, var_83);
            wp::assign(var_ea1, var_85);
            wp::assign(var_eb0, var_87);
            wp::assign(var_eb1, var_89);
            wp::assign(var_60, var_121);
            wp::assign(var_61, var_122);
            wp::assign(var_62, var_123);
            wp::assign(var_63, var_124);
            wp::assign(var_64, var_125);
            wp::assign(var_65, var_126);
            wp::assign(var_66, var_127);
            goto end_for_1;
        }
        var_132 = wp::where(var_131, var_ea0, var_83);
        var_133 = wp::where(var_131, var_ea1, var_85);
        var_134 = wp::where(var_131, var_eb0, var_87);
        var_135 = wp::where(var_131, var_eb1, var_89);
        var_136 = wp::where(var_131, var_60, var_121);
        var_137 = wp::where(var_131, var_61, var_122);
        var_138 = wp::where(var_131, var_62, var_123);
        var_139 = wp::where(var_131, var_63, var_124);
        var_140 = wp::where(var_131, var_64, var_125);
        var_141 = wp::where(var_131, var_65, var_126);
        var_142 = wp::where(var_131, var_66, var_127);
        // toc += toc_lower_bound                                                             <L 85>
        var_143 = wp::add(var_71, var_81);
        // if toc > wp.float64(1.0):                                                          <L 86>
        var_145 = wp::float64(var_144);
        var_146 = (var_143 > var_145);
        if (var_146) {
            // return wp.float64(1.0)                                                         <L 87>
            var_148 = wp::float64(var_147);
            goto label3;
        }
        wp::assign(var_ea0, var_132);
        wp::assign(var_ea1, var_133);
        wp::assign(var_eb0, var_134);
        wp::assign(var_eb1, var_135);
        wp::assign(var_60, var_136);
        wp::assign(var_61, var_137);
        wp::assign(var_62, var_138);
        wp::assign(var_63, var_139);
        wp::assign(var_64, var_140);
        wp::assign(var_65, var_141);
        wp::assign(var_66, var_142);
        wp::assign(var_71, var_143);
        wp::adj_assign(var_71, var_143, adj_71, adj_143);
        wp::adj_assign(var_66, var_142, adj_66, adj_142);
        wp::adj_assign(var_65, var_141, adj_65, adj_141);
        wp::adj_assign(var_64, var_140, adj_64, adj_140);
        wp::adj_assign(var_63, var_139, adj_63, adj_139);
        wp::adj_assign(var_62, var_138, adj_62, adj_138);
        wp::adj_assign(var_61, var_137, adj_61, adj_137);
        wp::adj_assign(var_60, var_136, adj_60, adj_136);
        wp::adj_assign(var_eb1, var_135, adj_eb1, adj_135);
        wp::adj_assign(var_eb0, var_134, adj_eb0, adj_134);
        wp::adj_assign(var_ea1, var_133, adj_ea1, adj_133);
        wp::adj_assign(var_ea0, var_132, adj_ea0, adj_132);
        if (var_146) {
            label3:;
            adj_148 += adj_ret;
            wp::adj_float64(var_147, adj_147, adj_148);
            // adj: return wp.float64(1.0)                                                    <L 87>
        }
        wp::adj_float64(var_144, adj_144, adj_145);
        // adj: if toc > wp.float64(1.0):                                                     <L 86>
        wp::adj_add(var_71, var_81, adj_71, adj_81, adj_143);
        // adj: toc += toc_lower_bound                                                        <L 85>
        wp::adj_where(var_131, var_66, var_127, adj_131, adj_66, adj_127, adj_142);
        wp::adj_where(var_131, var_65, var_126, adj_131, adj_65, adj_126, adj_141);
        wp::adj_where(var_131, var_64, var_125, adj_131, adj_64, adj_125, adj_140);
        wp::adj_where(var_131, var_63, var_124, adj_131, adj_63, adj_124, adj_139);
        wp::adj_where(var_131, var_62, var_123, adj_131, adj_62, adj_123, adj_138);
        wp::adj_where(var_131, var_61, var_122, adj_131, adj_61, adj_122, adj_137);
        wp::adj_where(var_131, var_60, var_121, adj_131, adj_60, adj_121, adj_136);
        wp::adj_where(var_131, var_eb1, var_89, adj_131, adj_eb1, adj_89, adj_135);
        wp::adj_where(var_131, var_eb0, var_87, adj_131, adj_eb0, adj_87, adj_134);
        wp::adj_where(var_131, var_ea1, var_85, adj_131, adj_ea1, adj_85, adj_133);
        wp::adj_where(var_131, var_ea0, var_83, adj_131, adj_ea0, adj_83, adj_132);
        if (var_131) {
            wp::adj_assign(var_66, var_127, adj_66, adj_127);
            wp::adj_assign(var_65, var_126, adj_65, adj_126);
            wp::adj_assign(var_64, var_125, adj_64, adj_125);
            wp::adj_assign(var_63, var_124, adj_63, adj_124);
            wp::adj_assign(var_62, var_123, adj_62, adj_123);
            wp::adj_assign(var_61, var_122, adj_61, adj_122);
            wp::adj_assign(var_60, var_121, adj_60, adj_121);
            wp::adj_assign(var_eb1, var_89, adj_eb1, adj_89);
            wp::adj_assign(var_eb0, var_87, adj_eb0, adj_87);
            wp::adj_assign(var_ea1, var_85, adj_ea1, adj_85);
            wp::adj_assign(var_ea0, var_83, adj_ea0, adj_83);
            // adj: break                                                                     <L 83>
        }
        wp::adj_div(var_122, var_128, var_129, adj_122, adj_128, adj_129);
        wp::adj_add(var_127, var_thickness, adj_127, adj_thickness, adj_128);
        // adj: if toc and (dFunc / (dist_cur + thickness) < gap):                            <L 82>
        wp::adj_sqrt(var_121, var_127, adj_121, adj_127);
        // adj: dist_cur = wp.sqrt(dist2_cur)                                                 <L 81>
        wp::adj_where(var_95, var_99, var_65, adj_95, adj_99, adj_65, adj_126);
        wp::adj_where(var_95, var_98, var_64, adj_95, adj_98, adj_64, adj_125);
        wp::adj_where(var_95, var_97, var_63, adj_95, adj_97, adj_63, adj_124);
        wp::adj_where(var_95, var_96, var_62, adj_95, adj_96, adj_62, adj_123);
        wp::adj_where(var_95, var_120, var_92, adj_95, adj_120, adj_92, adj_122);
        wp::adj_where(var_95, var_118, var_90, adj_95, adj_118, adj_90, adj_121);
        if (var_95) {
            wp::adj_sub(var_118, var_119, adj_118, adj_119, adj_120);
            wp::adj_mul(var_thickness, var_thickness, adj_thickness, adj_thickness, adj_119);
            // adj: dFunc = dist2_cur - thickness * thickness                                 <L 79>
            wp::adj_min(var_112, var_117, adj_112, adj_117, adj_118);
            wp::adj_min(var_114, var_116, adj_114, adj_116, adj_117);
            wp::adj_extract(var_27, var_115, adj_27, adj_115, adj_116);
            wp::adj_extract(var_27, var_113, adj_27, adj_113, adj_114);
            wp::adj_min(var_109, var_111, adj_109, adj_111, adj_112);
            wp::adj_extract(var_27, var_110, adj_27, adj_110, adj_111);
            wp::adj_extract(var_27, var_108, adj_27, adj_108, adj_109);
            // adj: dist2_cur = wp.min(wp.min(dists[0], dists[1]), wp.min(dists[2], dists[3]))  <L 78>
            wp::adj_assign_inplace(var_27, var_107, var_106, adj_27, adj_107, adj_106);
            wp::adj_length_sq(var_99, adj_99, adj_106);
            // adj: dists[3] = wp.length_sq(eb1a1)                                            <L 77>
            wp::adj_assign_inplace(var_27, var_105, var_104, adj_27, adj_105, adj_104);
            wp::adj_length_sq(var_98, adj_98, adj_104);
            // adj: dists[2] = wp.length_sq(eb0a1)                                            <L 76>
            wp::adj_assign_inplace(var_27, var_103, var_102, adj_27, adj_103, adj_102);
            wp::adj_length_sq(var_97, adj_97, adj_102);
            // adj: dists[1] = wp.length_sq(eb1a0)                                            <L 75>
            wp::adj_assign_inplace(var_27, var_101, var_100, adj_27, adj_101, adj_100);
            wp::adj_length_sq(var_96, adj_96, adj_100);
            // adj: dists[0] = wp.length_sq(eb0a0)                                            <L 74>
            wp::adj_sub(var_85, var_89, adj_85, adj_89, adj_99);
            // adj: eb1a1 = ea1 - eb1                                                         <L 72>
            wp::adj_sub(var_85, var_87, adj_85, adj_87, adj_98);
            // adj: eb0a1 = ea1 - eb0                                                         <L 71>
            wp::adj_sub(var_83, var_89, adj_83, adj_89, adj_97);
            // adj: eb1a0 = ea0 - eb1                                                         <L 70>
            wp::adj_sub(var_83, var_87, adj_83, adj_87, adj_96);
            // adj: eb0a0 = ea0 - eb0                                                         <L 69>
        }
        wp::adj_float64(var_93, adj_93, adj_94);
        // adj: if dFunc <= wp.float64(0.0):                                                  <L 66>
        wp::adj_sub(var_90, var_91, adj_90, adj_91, adj_92);
        wp::adj_mul(var_thickness, var_thickness, adj_thickness, adj_thickness, adj_91);
        // adj: dFunc = dist2_cur - thickness * thickness                                     <L 65>
        adj_edge_edge_distance_0(var_83, var_85, var_87, var_89, adj_83, adj_85, adj_87, adj_89, adj_90);
        // adj: dist2_cur = edge_edge_distance(ea0, ea1, eb0, eb1)                            <L 64>
        wp::adj_add(var_eb1, var_88, adj_eb1, adj_88, adj_89);
        wp::adj_mul(var_81, var_9, adj_81, adj_9, adj_88);
        // adj: eb1 += toc_lower_bound * deb1                                                 <L 62>
        wp::adj_add(var_eb0, var_86, adj_eb0, adj_86, adj_87);
        wp::adj_mul(var_81, var_8, adj_81, adj_8, adj_86);
        // adj: eb0 += toc_lower_bound * deb0                                                 <L 61>
        wp::adj_add(var_ea1, var_84, adj_ea1, adj_84, adj_85);
        wp::adj_mul(var_81, var_7, adj_81, adj_7, adj_84);
        // adj: ea1 += toc_lower_bound * dea1                                                 <L 60>
        wp::adj_add(var_ea0, var_82, adj_ea0, adj_82, adj_83);
        wp::adj_mul(var_81, var_6, adj_81, adj_6, adj_82);
        // adj: ea0 += toc_lower_bound * dea0                                                 <L 59>
        wp::adj_div(var_78, var_80, var_81, adj_78, adj_80, adj_81);
        wp::adj_mul(var_79, var_18, adj_79, adj_18, adj_80);
        wp::adj_add(var_66, var_thickness, adj_66, adj_thickness, adj_79);
        wp::adj_mul(var_77, var_61, adj_77, adj_61, adj_78);
        wp::adj_sub(var_76, var_eta, adj_76, adj_eta, adj_77);
        wp::adj_float64(var_75, adj_75, adj_76);
        // adj: toc_lower_bound = (wp.float64(1.0) - eta) * dFunc / ((dist_cur + thickness) * max_disp_mag)  <L 58>
    	goto start_for_1;
    end_for_1:;
    wp::adj_range(var_72, adj_72, adj_73);
    // adj: for _ in range(100000):                                                           <L 57>
    wp::adj_float64(var_70, adj_70, adj_71);
    // adj: toc = wp.float64(0.0)                                                             <L 55>
    wp::adj_div(var_67, var_68, var_69, adj_67, adj_68, adj_69);
    wp::adj_add(var_66, var_thickness, adj_66, adj_thickness, adj_68);
    wp::adj_mul(var_eta, var_61, adj_eta, adj_61, adj_67);
    // adj: gap = eta * dFunc / (dist_cur + thickness)                                        <L 54>
    wp::adj_sqrt(var_60, var_66, adj_60, adj_66);
    // adj: dist_cur = wp.sqrt(dist2_cur)                                                     <L 53>
    wp::adj_where(var_34, var_38, var_31, adj_34, adj_38, adj_31, adj_65);
    wp::adj_where(var_34, var_37, var_30, adj_34, adj_37, adj_30, adj_64);
    wp::adj_where(var_34, var_36, var_29, adj_34, adj_36, adj_29, adj_63);
    wp::adj_where(var_34, var_35, var_28, adj_34, adj_35, adj_28, adj_62);
    wp::adj_where(var_34, var_59, var_26, adj_34, adj_59, adj_26, adj_61);
    wp::adj_where(var_34, var_57, var_24, adj_34, adj_57, adj_24, adj_60);
    if (var_34) {
        wp::adj_sub(var_57, var_58, adj_57, adj_58, adj_59);
        wp::adj_mul(var_thickness, var_thickness, adj_thickness, adj_thickness, adj_58);
        // adj: dFunc = dist2_cur - thickness * thickness                                     <L 51>
        wp::adj_min(var_51, var_56, adj_51, adj_56, adj_57);
        wp::adj_min(var_53, var_55, adj_53, adj_55, adj_56);
        wp::adj_extract(var_27, var_54, adj_27, adj_54, adj_55);
        wp::adj_extract(var_27, var_52, adj_27, adj_52, adj_53);
        wp::adj_min(var_48, var_50, adj_48, adj_50, adj_51);
        wp::adj_extract(var_27, var_49, adj_27, adj_49, adj_50);
        wp::adj_extract(var_27, var_47, adj_27, adj_47, adj_48);
        // adj: dist2_cur = wp.min(wp.min(dists[0], dists[1]), wp.min(dists[2], dists[3]))    <L 50>
        wp::adj_assign_inplace(var_27, var_46, var_45, adj_27, adj_46, adj_45);
        wp::adj_length_sq(var_38, adj_38, adj_45);
        // adj: dists[3] = wp.length_sq(eb1a1)                                                <L 49>
        wp::adj_assign_inplace(var_27, var_44, var_43, adj_27, adj_44, adj_43);
        wp::adj_length_sq(var_37, adj_37, adj_43);
        // adj: dists[2] = wp.length_sq(eb0a1)                                                <L 48>
        wp::adj_assign_inplace(var_27, var_42, var_41, adj_27, adj_42, adj_41);
        wp::adj_length_sq(var_36, adj_36, adj_41);
        // adj: dists[1] = wp.length_sq(eb1a0)                                                <L 47>
        wp::adj_assign_inplace(var_27, var_40, var_39, adj_27, adj_40, adj_39);
        wp::adj_length_sq(var_35, adj_35, adj_39);
        // adj: dists[0] = wp.length_sq(eb0a0)                                                <L 46>
        wp::adj_sub(var_ea1, var_eb1, adj_ea1, adj_eb1, adj_38);
        // adj: eb1a1 = ea1 - eb1                                                             <L 44>
        wp::adj_sub(var_ea1, var_eb0, adj_ea1, adj_eb0, adj_37);
        // adj: eb0a1 = ea1 - eb0                                                             <L 43>
        wp::adj_sub(var_ea0, var_eb1, adj_ea0, adj_eb1, adj_36);
        // adj: eb1a0 = ea0 - eb1                                                             <L 42>
        wp::adj_sub(var_ea0, var_eb0, adj_ea0, adj_eb0, adj_35);
        // adj: eb0a0 = ea0 - eb0                                                             <L 41>
    }
    wp::adj_float64(var_32, adj_32, adj_33);
    // adj: if dFunc <= wp.float64(0.0):                                                      <L 38>
    // adj: eb1a1 = wp.vec3d()                                                                <L 37>
    // adj: eb0a1 = wp.vec3d()                                                                <L 36>
    // adj: eb1a0 = wp.vec3d()                                                                <L 35>
    // adj: eb0a0 = wp.vec3d()                                                                <L 34>
    // adj: dists = wp.vec4d()                                                                <L 33>
    wp::adj_sub(var_24, var_25, adj_24, adj_25, adj_26);
    wp::adj_mul(var_thickness, var_thickness, adj_thickness, adj_thickness, adj_25);
    // adj: dFunc = dist2_cur - thickness * thickness                                         <L 31>
    adj_edge_edge_distance_0(var_ea0, var_ea1, var_eb0, var_eb1, adj_ea0, adj_ea1, adj_eb0, adj_eb1, adj_24);
    // adj: dist2_cur = edge_edge_distance(ea0, ea1, eb0, eb1)                                <L 29>
    if (var_21) {
        label0:;
        adj_23 += adj_ret;
        wp::adj_float64(var_22, adj_22, adj_23);
        // adj: return wp.float64(1.0)                                                        <L 27>
    }
    wp::adj_float64(var_19, adj_19, adj_20);
    // adj: if max_disp_mag == wp.float64(0.0):                                               <L 26>
    wp::adj_add(var_13, var_17, adj_13, adj_17, adj_18);
    wp::adj_sqrt(var_16, var_17, adj_16, adj_17);
    wp::adj_max(var_14, var_15, adj_14, adj_15, adj_16);
    wp::adj_length_sq(var_9, adj_9, adj_15);
    wp::adj_length_sq(var_8, adj_8, adj_14);
    wp::adj_sqrt(var_12, var_13, adj_12, adj_13);
    wp::adj_max(var_10, var_11, adj_10, adj_11, adj_12);
    wp::adj_length_sq(var_7, adj_7, adj_11);
    wp::adj_length_sq(var_6, adj_6, adj_10);
    // adj: max_disp_mag = wp.sqrt(wp.max(wp.length_sq(dea0), wp.length_sq(dea1))) + wp.sqrt(wp.max(wp.length_sq(deb0), wp.length_sq(deb1)))  <L 25>
    wp::adj_sub(var_deb1, var_5, adj_deb1, adj_5, adj_9);
    // adj: deb1 -= mov                                                                       <L 23>
    wp::adj_sub(var_deb0, var_5, adj_deb0, adj_5, adj_8);
    // adj: deb0 -= mov                                                                       <L 22>
    wp::adj_sub(var_dea1, var_5, adj_dea1, adj_5, adj_7);
    // adj: dea1 -= mov                                                                       <L 21>
    wp::adj_sub(var_dea0, var_5, adj_dea0, adj_5, adj_6);
    // adj: dea0 -= mov                                                                       <L 20>
    wp::adj_div(var_2, var_4, adj_2, adj_4, adj_5);
    wp::adj_float64(var_3, adj_3, adj_4);
    wp::adj_add(var_1, var_deb1, adj_1, adj_deb1, adj_2);
    wp::adj_add(var_0, var_deb0, adj_0, adj_deb0, adj_1);
    wp::adj_add(var_dea0, var_dea1, adj_dea0, adj_dea1, adj_0);
    // adj: mov = (dea0 + dea1 + deb0 + deb1) / wp.float64(4.0)                               <L 19>
    // adj: def edge_edge_ccd(                                                                <L 7>
    return;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/collision_kernels.py:590
static CUDA_CALLABLE bool subset3_0(
    wp::vec_t<3,wp::int32> var_s,
    wp::int32 var_i)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    wp::int32 var_1;
    bool var_2;
    const wp::int32 var_3 = 1;
    wp::int32 var_4;
    bool var_5;
    const wp::int32 var_6 = 2;
    wp::int32 var_7;
    bool var_8;
    bool var_9;
    const bool var_10 = true;
    const bool var_11 = false;
    //---------
    // forward
    // def subset3(s: wp.vec3i, i: wp.int32):                                                 <L 591>
    // if i == s[0] or i == s[1] or i == s[2]:                                                <L 592>
    var_1 = wp::extract(var_s, var_0);
    var_2 = (var_i == var_1);
    var_4 = wp::extract(var_s, var_3);
    var_5 = (var_i == var_4);
    var_7 = wp::extract(var_s, var_6);
    var_8 = (var_i == var_7);
    var_9 = var_2 || var_5 || var_8;
    if (var_9) {
        // return True                                                                        <L 593>
        return var_10;
    }
    // return False                                                                           <L 594>
    return var_11;
}


// /home/chang/actions-runner/_work/Taccel-Action/Taccel-Action/turbo/warp_ipc/collision_kernels.py:590
static CUDA_CALLABLE void adj_subset3_0(
    wp::vec_t<3,wp::int32> var_s,
    wp::int32 var_i,
    wp::vec_t<3,wp::int32> & adj_s,
    wp::int32 & adj_i,
    bool & adj_ret)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    wp::int32 var_1;
    bool var_2;
    const wp::int32 var_3 = 1;
    wp::int32 var_4;
    bool var_5;
    const wp::int32 var_6 = 2;
    wp::int32 var_7;
    bool var_8;
    bool var_9;
    const bool var_10 = true;
    const bool var_11 = false;
    //---------
    // dual vars
    wp::int32 adj_0 = {};
    wp::int32 adj_1 = {};
    bool adj_2 = {};
    wp::int32 adj_3 = {};
    wp::int32 adj_4 = {};
    bool adj_5 = {};
    wp::int32 adj_6 = {};
    wp::int32 adj_7 = {};
    bool adj_8 = {};
    bool adj_9 = {};
    bool adj_10 = {};
    bool adj_11 = {};
    //---------
    // forward
    // def subset3(s: wp.vec3i, i: wp.int32):                                                 <L 591>
    // if i == s[0] or i == s[1] or i == s[2]:                                                <L 592>
    var_1 = wp::extract(var_s, var_0);
    var_2 = (var_i == var_1);
    var_4 = wp::extract(var_s, var_3);
    var_5 = (var_i == var_4);
    var_7 = wp::extract(var_s, var_6);
    var_8 = (var_i == var_7);
    var_9 = var_2 || var_5 || var_8;
    if (var_9) {
        // return True                                                                        <L 593>
        goto label0;
    }
    // return False                                                                           <L 594>
    goto label1;
    //---------
    // reverse
    label1:;
    adj_11 += adj_ret;
    // adj: return False                                                                      <L 594>
    if (var_9) {
        label0:;
        adj_10 += adj_ret;
        // adj: return True                                                                   <L 593>
    }
    wp::adj_extract(var_s, var_6, adj_s, adj_6, adj_7);
    wp::adj_extract(var_s, var_3, adj_s, adj_3, adj_4);
    wp::adj_extract(var_s, var_0, adj_s, adj_0, adj_1);
    // adj: if i == s[0] or i == s[1] or i == s[2]:                                           <L 592>
    // adj: def subset3(s: wp.vec3i, i: wp.int32):                                            <L 591>
    return;
}



extern "C" __global__ void init_step_size_inversion_free_kernel_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::vec_t<3,wp::float64>> var_p_x,
    wp::array_t<wp::vec_t<4,wp::int32>> var_tet_elems,
    wp::array_t<wp::float64> var_alphas,
    wp::array_t<wp::int32> var_node2body,
    wp::array_t<wp::int32> var_body_env_id,
    wp::array_t<wp::int32> var_env_states,
    wp::array_t<wp::int32> var_tet_envs,
    wp::float64 var_img_tol,
    wp::float64 var_cubic_coef_tol)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        wp::int32* var_2;
        wp::int32 var_3;
        const wp::int32 var_4 = 1;
        bool var_5;
        wp::int32 var_6;
        wp::int32* var_7;
        wp::int32* var_8;
        wp::int32 var_9;
        const wp::int32 var_10 = 2;
        bool var_11;
        wp::int32 var_12;
        bool var_13;
        wp::vec_t<4,wp::int32>* var_14;
        wp::vec_t<4,wp::int32> var_15;
        wp::vec_t<4,wp::int32> var_16;
        const wp::int32 var_17 = 0;
        wp::int32 var_18;
        const wp::int32 var_19 = 1;
        wp::int32 var_20;
        const wp::int32 var_21 = 2;
        wp::int32 var_22;
        const wp::int32 var_23 = 3;
        wp::int32 var_24;
        const wp::int32 var_25 = 0;
        wp::vec_t<3,wp::float64>* var_26;
        wp::float64 var_27;
        wp::vec_t<3,wp::float64> var_28;
        const wp::int32 var_29 = 0;
        wp::vec_t<3,wp::float64>* var_30;
        wp::float64 var_31;
        wp::vec_t<3,wp::float64> var_32;
        const wp::int32 var_33 = 0;
        wp::vec_t<3,wp::float64>* var_34;
        wp::float64 var_35;
        wp::vec_t<3,wp::float64> var_36;
        const wp::int32 var_37 = 0;
        wp::vec_t<3,wp::float64>* var_38;
        wp::float64 var_39;
        wp::vec_t<3,wp::float64> var_40;
        const wp::int32 var_41 = 1;
        wp::vec_t<3,wp::float64>* var_42;
        wp::float64 var_43;
        wp::vec_t<3,wp::float64> var_44;
        const wp::int32 var_45 = 1;
        wp::vec_t<3,wp::float64>* var_46;
        wp::float64 var_47;
        wp::vec_t<3,wp::float64> var_48;
        const wp::int32 var_49 = 1;
        wp::vec_t<3,wp::float64>* var_50;
        wp::float64 var_51;
        wp::vec_t<3,wp::float64> var_52;
        const wp::int32 var_53 = 1;
        wp::vec_t<3,wp::float64>* var_54;
        wp::float64 var_55;
        wp::vec_t<3,wp::float64> var_56;
        const wp::int32 var_57 = 2;
        wp::vec_t<3,wp::float64>* var_58;
        wp::float64 var_59;
        wp::vec_t<3,wp::float64> var_60;
        const wp::int32 var_61 = 2;
        wp::vec_t<3,wp::float64>* var_62;
        wp::float64 var_63;
        wp::vec_t<3,wp::float64> var_64;
        const wp::int32 var_65 = 2;
        wp::vec_t<3,wp::float64>* var_66;
        wp::float64 var_67;
        wp::vec_t<3,wp::float64> var_68;
        const wp::int32 var_69 = 2;
        wp::vec_t<3,wp::float64>* var_70;
        wp::float64 var_71;
        wp::vec_t<3,wp::float64> var_72;
        const wp::int32 var_73 = 0;
        wp::vec_t<3,wp::float64>* var_74;
        wp::float64 var_75;
        wp::vec_t<3,wp::float64> var_76;
        const wp::int32 var_77 = 0;
        wp::vec_t<3,wp::float64>* var_78;
        wp::float64 var_79;
        wp::vec_t<3,wp::float64> var_80;
        const wp::int32 var_81 = 0;
        wp::vec_t<3,wp::float64>* var_82;
        wp::float64 var_83;
        wp::vec_t<3,wp::float64> var_84;
        const wp::int32 var_85 = 0;
        wp::vec_t<3,wp::float64>* var_86;
        wp::float64 var_87;
        wp::vec_t<3,wp::float64> var_88;
        const wp::int32 var_89 = 1;
        wp::vec_t<3,wp::float64>* var_90;
        wp::float64 var_91;
        wp::vec_t<3,wp::float64> var_92;
        const wp::int32 var_93 = 1;
        wp::vec_t<3,wp::float64>* var_94;
        wp::float64 var_95;
        wp::vec_t<3,wp::float64> var_96;
        const wp::int32 var_97 = 1;
        wp::vec_t<3,wp::float64>* var_98;
        wp::float64 var_99;
        wp::vec_t<3,wp::float64> var_100;
        const wp::int32 var_101 = 1;
        wp::vec_t<3,wp::float64>* var_102;
        wp::float64 var_103;
        wp::vec_t<3,wp::float64> var_104;
        const wp::int32 var_105 = 2;
        wp::vec_t<3,wp::float64>* var_106;
        wp::float64 var_107;
        wp::vec_t<3,wp::float64> var_108;
        const wp::int32 var_109 = 2;
        wp::vec_t<3,wp::float64>* var_110;
        wp::float64 var_111;
        wp::vec_t<3,wp::float64> var_112;
        const wp::int32 var_113 = 2;
        wp::vec_t<3,wp::float64>* var_114;
        wp::float64 var_115;
        wp::vec_t<3,wp::float64> var_116;
        const wp::int32 var_117 = 2;
        wp::vec_t<3,wp::float64>* var_118;
        wp::float64 var_119;
        wp::vec_t<3,wp::float64> var_120;
        wp::float64 var_121;
        wp::float64 var_122;
        wp::float64 var_123;
        wp::float64 var_124;
        wp::float64 var_125;
        wp::float64 var_126;
        wp::float64 var_127;
        wp::float64 var_128;
        wp::float64 var_129;
        wp::float64 var_130;
        wp::float64 var_131;
        wp::float64 var_132;
        wp::float64 var_133;
        wp::float64 var_134;
        wp::float64 var_135;
        wp::float64 var_136;
        wp::float64 var_137;
        wp::float64 var_138;
        wp::float64 var_139;
        wp::float64 var_140;
        wp::float64 var_141;
        wp::float64 var_142;
        wp::float64 var_143;
        wp::float64 var_144;
        wp::float64 var_145;
        wp::float64 var_146;
        wp::float64 var_147;
        wp::float64 var_148;
        wp::float64 var_149;
        wp::float64 var_150;
        wp::float64 var_151;
        wp::float64 var_152;
        wp::float64 var_153;
        wp::float64 var_154;
        wp::float64 var_155;
        wp::float64 var_156;
        wp::float64 var_157;
        wp::float64 var_158;
        wp::float64 var_159;
        wp::float64 var_160;
        wp::float64 var_161;
        wp::float64 var_162;
        wp::float64 var_163;
        wp::float64 var_164;
        wp::float64 var_165;
        wp::float64 var_166;
        wp::float64 var_167;
        wp::float64 var_168;
        wp::float64 var_169;
        wp::float64 var_170;
        wp::float64 var_171;
        wp::float64 var_172;
        wp::float64 var_173;
        wp::float64 var_174;
        wp::float64 var_175;
        wp::float64 var_176;
        wp::float64 var_177;
        wp::float64 var_178;
        wp::float64 var_179;
        wp::float64 var_180;
        wp::float64 var_181;
        wp::float64 var_182;
        wp::float64 var_183;
        wp::float64 var_184;
        wp::float64 var_185;
        wp::float64 var_186;
        wp::float64 var_187;
        wp::float64 var_188;
        wp::float64 var_189;
        wp::float64 var_190;
        wp::float64 var_191;
        wp::float64 var_192;
        wp::float64 var_193;
        wp::float64 var_194;
        wp::float64 var_195;
        wp::float64 var_196;
        wp::float64 var_197;
        wp::float64 var_198;
        wp::float64 var_199;
        wp::float64 var_200;
        wp::float64 var_201;
        wp::float64 var_202;
        wp::float64 var_203;
        wp::float64 var_204;
        wp::float64 var_205;
        wp::float64 var_206;
        wp::float64 var_207;
        wp::float64 var_208;
        wp::float64 var_209;
        wp::float64 var_210;
        wp::float64 var_211;
        wp::float64 var_212;
        wp::float64 var_213;
        wp::float64 var_214;
        wp::float64 var_215;
        wp::float64 var_216;
        wp::float64 var_217;
        wp::float64 var_218;
        wp::float64 var_219;
        wp::float64 var_220;
        wp::float64 var_221;
        wp::float64 var_222;
        wp::float64 var_223;
        wp::float64 var_224;
        wp::float64 var_225;
        wp::float64 var_226;
        wp::float64 var_227;
        wp::float64 var_228;
        wp::float64 var_229;
        wp::float64 var_230;
        wp::float64 var_231;
        wp::float64 var_232;
        wp::float64 var_233;
        wp::float64 var_234;
        wp::float64 var_235;
        wp::float64 var_236;
        wp::float64 var_237;
        wp::float64 var_238;
        wp::float64 var_239;
        wp::float64 var_240;
        wp::float64 var_241;
        wp::float64 var_242;
        wp::float64 var_243;
        wp::float64 var_244;
        wp::float64 var_245;
        wp::float64 var_246;
        wp::float64 var_247;
        wp::float64 var_248;
        wp::float64 var_249;
        wp::float64 var_250;
        wp::float64 var_251;
        wp::float64 var_252;
        wp::float64 var_253;
        wp::float64 var_254;
        wp::float64 var_255;
        wp::float64 var_256;
        wp::float64 var_257;
        wp::float64 var_258;
        wp::float64 var_259;
        wp::float64 var_260;
        wp::float64 var_261;
        wp::float64 var_262;
        wp::float64 var_263;
        wp::float64 var_264;
        wp::float64 var_265;
        wp::float64 var_266;
        wp::float64 var_267;
        wp::float64 var_268;
        wp::float64 var_269;
        wp::float64 var_270;
        wp::float64 var_271;
        wp::float64 var_272;
        wp::float64 var_273;
        wp::float64 var_274;
        wp::float64 var_275;
        wp::float64 var_276;
        wp::float64 var_277;
        wp::float64 var_278;
        wp::float64 var_279;
        wp::float64 var_280;
        wp::float64 var_281;
        wp::float64 var_282;
        wp::float64 var_283;
        wp::float64 var_284;
        wp::float64 var_285;
        wp::float64 var_286;
        wp::float64 var_287;
        wp::float64 var_288;
        wp::float64 var_289;
        wp::float64 var_290;
        wp::float64 var_291;
        wp::float64 var_292;
        wp::float64 var_293;
        wp::float64 var_294;
        wp::float64 var_295;
        wp::float64 var_296;
        wp::float64 var_297;
        wp::float64 var_298;
        wp::float64 var_299;
        wp::float64 var_300;
        wp::float64 var_301;
        wp::float64 var_302;
        wp::float64 var_303;
        wp::float64 var_304;
        wp::float64 var_305;
        wp::float64 var_306;
        wp::float64 var_307;
        wp::float64 var_308;
        wp::float64 var_309;
        wp::float64 var_310;
        wp::float64 var_311;
        wp::float64 var_312;
        wp::float64 var_313;
        wp::float64 var_314;
        wp::float64 var_315;
        wp::float64 var_316;
        wp::float64 var_317;
        wp::float64 var_318;
        wp::float64 var_319;
        wp::float64 var_320;
        wp::float64 var_321;
        wp::float64 var_322;
        wp::float64 var_323;
        wp::float64 var_324;
        wp::float64 var_325;
        wp::float64 var_326;
        wp::float64 var_327;
        wp::float64 var_328;
        wp::float64 var_329;
        wp::float64 var_330;
        wp::float64 var_331;
        wp::float64 var_332;
        wp::float64 var_333;
        wp::float64 var_334;
        wp::float64 var_335;
        wp::float64 var_336;
        wp::float64 var_337;
        wp::float64 var_338;
        wp::float64 var_339;
        wp::float64 var_340;
        wp::float64 var_341;
        wp::float64 var_342;
        wp::float64 var_343;
        wp::float64 var_344;
        wp::float64 var_345;
        wp::float64 var_346;
        wp::float64 var_347;
        wp::float64 var_348;
        wp::float64 var_349;
        wp::float64 var_350;
        wp::float64 var_351;
        wp::float64 var_352;
        wp::float64 var_353;
        wp::float64 var_354;
        wp::float64 var_355;
        wp::float64 var_356;
        wp::float64 var_357;
        wp::float64 var_358;
        wp::float64 var_359;
        wp::float64 var_360;
        wp::float64 var_361;
        wp::float64 var_362;
        wp::float64 var_363;
        wp::float64 var_364;
        wp::float64 var_365;
        wp::float64 var_366;
        wp::float64 var_367;
        wp::float64 var_368;
        wp::float64 var_369;
        wp::float64 var_370;
        wp::float64 var_371;
        wp::float64 var_372;
        wp::float64 var_373;
        wp::float64 var_374;
        wp::float64 var_375;
        wp::float64 var_376;
        wp::float64 var_377;
        wp::float64 var_378;
        wp::float64 var_379;
        wp::float64 var_380;
        wp::float64 var_381;
        wp::float64 var_382;
        wp::float64 var_383;
        wp::float64 var_384;
        wp::float64 var_385;
        wp::float64 var_386;
        wp::float64 var_387;
        wp::float64 var_388;
        wp::float64 var_389;
        wp::float64 var_390;
        wp::float64 var_391;
        wp::float64 var_392;
        wp::float64 var_393;
        wp::float64 var_394;
        wp::float64 var_395;
        wp::float64 var_396;
        wp::float64 var_397;
        wp::float64 var_398;
        wp::float64 var_399;
        wp::float64 var_400;
        wp::float64 var_401;
        wp::float64 var_402;
        wp::float64 var_403;
        wp::float64 var_404;
        wp::float64 var_405;
        wp::float64 var_406;
        wp::float64 var_407;
        wp::float64 var_408;
        wp::float64 var_409;
        wp::float64 var_410;
        wp::float64 var_411;
        wp::float64 var_412;
        wp::float64 var_413;
        wp::float64 var_414;
        wp::float64 var_415;
        wp::float64 var_416;
        wp::float64 var_417;
        wp::float64 var_418;
        wp::float64 var_419;
        wp::float64 var_420;
        wp::float64 var_421;
        wp::float64 var_422;
        wp::float64 var_423;
        wp::float64 var_424;
        wp::float64 var_425;
        wp::float64 var_426;
        wp::float64 var_427;
        wp::float64 var_428;
        wp::float64 var_429;
        wp::float64 var_430;
        wp::float64 var_431;
        wp::float64 var_432;
        wp::float64 var_433;
        wp::float64 var_434;
        wp::float64 var_435;
        wp::float64 var_436;
        wp::float64 var_437;
        wp::float64 var_438;
        wp::float64 var_439;
        wp::float64 var_440;
        wp::float64 var_441;
        wp::float64 var_442;
        wp::float64 var_443;
        wp::float64 var_444;
        wp::float64 var_445;
        wp::float64 var_446;
        wp::float64 var_447;
        wp::float64 var_448;
        wp::float64 var_449;
        wp::float64 var_450;
        wp::float64 var_451;
        wp::float64 var_452;
        wp::float64 var_453;
        wp::float64 var_454;
        wp::float64 var_455;
        wp::float64 var_456;
        wp::float64 var_457;
        wp::float64 var_458;
        wp::float64 var_459;
        wp::float64 var_460;
        wp::float64 var_461;
        wp::float64 var_462;
        wp::float64 var_463;
        wp::float64 var_464;
        wp::float64 var_465;
        wp::float64 var_466;
        wp::float64 var_467;
        wp::float64 var_468;
        wp::float64 var_469;
        wp::float64 var_470;
        wp::float64 var_471;
        wp::float64 var_472;
        wp::float64 var_473;
        wp::float64 var_474;
        wp::float64 var_475;
        wp::float64 var_476;
        wp::float64 var_477;
        wp::float64 var_478;
        wp::float64 var_479;
        wp::float64 var_480;
        wp::float64 var_481;
        wp::float64 var_482;
        wp::float64 var_483;
        wp::float64 var_484;
        wp::float64 var_485;
        wp::float64 var_486;
        wp::float64 var_487;
        wp::float64 var_488;
        wp::float64 var_489;
        wp::float64 var_490;
        wp::float64 var_491;
        wp::float64 var_492;
        wp::float64 var_493;
        wp::float64 var_494;
        wp::float64 var_495;
        wp::float64 var_496;
        wp::float64 var_497;
        wp::float64 var_498;
        wp::float64 var_499;
        wp::float64 var_500;
        wp::float64 var_501;
        wp::float64 var_502;
        wp::float64 var_503;
        wp::float64 var_504;
        wp::float64 var_505;
        wp::float64 var_506;
        wp::float64 var_507;
        wp::float64 var_508;
        wp::float64 var_509;
        wp::float64 var_510;
        wp::float64 var_511;
        wp::float64 var_512;
        wp::float64 var_513;
        wp::float64 var_514;
        wp::float64 var_515;
        wp::float64 var_516;
        wp::float64 var_517;
        wp::float64 var_518;
        wp::float64 var_519;
        wp::float64 var_520;
        wp::float64 var_521;
        wp::float64 var_522;
        wp::float64 var_523;
        wp::float64 var_524;
        wp::float64 var_525;
        wp::float64 var_526;
        wp::float64 var_527;
        wp::float64 var_528;
        wp::float64 var_529;
        wp::float64 var_530;
        wp::float64 var_531;
        wp::float64 var_532;
        wp::float64 var_533;
        wp::float64 var_534;
        wp::float64 var_535;
        wp::float64 var_536;
        wp::float64 var_537;
        wp::float64 var_538;
        wp::float64 var_539;
        wp::float64 var_540;
        wp::float64 var_541;
        wp::float64 var_542;
        wp::float64 var_543;
        wp::float64 var_544;
        wp::float64 var_545;
        wp::float64 var_546;
        wp::float64 var_547;
        wp::float64 var_548;
        wp::float64 var_549;
        wp::float64 var_550;
        wp::float64 var_551;
        wp::float64 var_552;
        wp::float64 var_553;
        wp::float64 var_554;
        wp::float64 var_555;
        wp::float64 var_556;
        wp::float64 var_557;
        wp::float64 var_558;
        wp::float64 var_559;
        wp::float64 var_560;
        wp::float64 var_561;
        wp::float64 var_562;
        wp::float64 var_563;
        wp::float64 var_564;
        wp::float64 var_565;
        wp::float64 var_566;
        wp::float64 var_567;
        wp::float64 var_568;
        wp::float64 var_569;
        wp::float64 var_570;
        wp::float64 var_571;
        wp::float64 var_572;
        wp::float64 var_573;
        wp::float64 var_574;
        wp::float64 var_575;
        wp::float64 var_576;
        wp::float64 var_577;
        wp::float64 var_578;
        wp::float64 var_579;
        wp::float64 var_580;
        wp::float64 var_581;
        wp::float64 var_582;
        wp::float64 var_583;
        wp::float64 var_584;
        wp::float64 var_585;
        wp::float64 var_586;
        wp::float64 var_587;
        wp::float64 var_588;
        wp::float64 var_589;
        wp::float64 var_590;
        wp::float64 var_591;
        wp::float64 var_592;
        wp::float64 var_593;
        wp::float64 var_594;
        wp::float64 var_595;
        wp::float64 var_596;
        wp::float64 var_597;
        wp::float64 var_598;
        wp::float64 var_599;
        wp::float64 var_600;
        wp::float64 var_601;
        wp::float64 var_602;
        wp::float64 var_603;
        wp::float64 var_604;
        wp::float64 var_605;
        wp::float64 var_606;
        wp::float64 var_607;
        wp::float64 var_608;
        wp::float64 var_609;
        wp::float64 var_610;
        wp::float64 var_611;
        wp::float64 var_612;
        wp::float64 var_613;
        wp::float64 var_614;
        wp::float64 var_615;
        wp::float64 var_616;
        wp::float64 var_617;
        wp::float64 var_618;
        wp::float64 var_619;
        wp::float64 var_620;
        wp::float64 var_621;
        wp::float64 var_622;
        wp::float64 var_623;
        wp::float64 var_624;
        const wp::float32 var_625 = 1.0;
        const wp::float32 var_626 = 0.2;
        wp::float32 var_627;
        wp::float64 var_628;
        wp::float64 var_629;
        wp::float64 var_630;
        wp::float64 var_631;
        wp::float64 var_632;
        wp::float64 var_633;
        wp::float64 var_634;
        wp::float64 var_635;
        wp::float64 var_636;
        wp::float64 var_637;
        wp::float64 var_638;
        wp::float64 var_639;
        wp::float64 var_640;
        wp::float64 var_641;
        wp::float64 var_642;
        wp::float64 var_643;
        wp::float64 var_644;
        wp::float64 var_645;
        wp::float64 var_646;
        wp::float64 var_647;
        wp::float64 var_648;
        wp::float64 var_649;
        wp::float64 var_650;
        wp::float64 var_651;
        wp::float64 var_652;
        wp::float64 var_653;
        wp::float64 var_654;
        wp::float64 var_655;
        wp::float64 var_656;
        wp::float64 var_657;
        wp::float64 var_658;
        wp::float64 var_659;
        wp::float64 var_660;
        wp::float64 var_661;
        wp::float64 var_662;
        wp::float64 var_663;
        wp::float64 var_664;
        wp::float64 var_665;
        wp::float64 var_666;
        wp::float64 var_667;
        wp::float64 var_668;
        wp::float64 var_669;
        wp::float64 var_670;
        wp::float64 var_671;
        wp::float64 var_672;
        wp::float64 var_673;
        wp::float64 var_674;
        wp::float64 var_675;
        wp::float64 var_676;
        wp::float64 var_677;
        wp::float64 var_678;
        wp::float64 var_679;
        wp::float64 var_680;
        wp::float64 var_681;
        wp::float64 var_682;
        wp::float64 var_683;
        wp::float64 var_684;
        wp::float64 var_685;
        wp::float64 var_686;
        wp::float64 var_687;
        wp::float64 var_688;
        wp::float64 var_689;
        wp::float64 var_690;
        wp::float64 var_691;
        wp::float64 var_692;
        wp::float64 var_693;
        wp::float64 var_694;
        wp::float64 var_695;
        wp::float64 var_696;
        wp::float64 var_697;
        wp::float64 var_698;
        wp::float64 var_699;
        wp::float64 var_700;
        wp::float64 var_701;
        const wp::float64 var_702 = 0.0;
        bool var_703;
        const wp::float64 var_704 = 1.0;
        bool var_705;
        bool var_706;
        wp::float64 var_707;
        wp::float64 var_708;
        const wp::float32 var_709 = 0.001;
        wp::float64 var_710;
        bool var_711;
        const wp::float32 var_712 = 10000000000.0;
        wp::float64 var_713;
        const wp::str var_714 = "toi: %lf, a: %lf, b: %lf, c: %lf, d: %lf\n";
        wp::float64 var_715;
        wp::float64 var_716;
        wp::float64 var_717;
        wp::float64 var_718;
        //---------
        // forward
        // def init_step_size_inversion_free_kernel(                                              <L 217>
        // tid = wp.tid()                                                                         <L 229>
        var_0 = builtin_tid1d();
        // if env_states[tet_envs[tid]] == ENV_STATE_INVALID or env_states[tet_envs[tid]] == ENV_STATE_NEWTON_SOLVED:       <L 230>
        var_1 = wp::address(var_tet_envs, var_0);
        var_3 = wp::load(var_1);
        var_2 = wp::address(var_env_states, var_3);
        var_6 = wp::load(var_2);
        var_5 = (var_6 == var_4);
        var_7 = wp::address(var_tet_envs, var_0);
        var_9 = wp::load(var_7);
        var_8 = wp::address(var_env_states, var_9);
        var_12 = wp::load(var_8);
        var_11 = (var_12 == var_10);
        var_13 = var_5 || var_11;
        if (var_13) {
            // return                                                                             <L 231>
            continue;
        }
        // tet_vinds = tet_elems[tid]                                                             <L 232>
        var_14 = wp::address(var_tet_elems, var_0);
        var_16 = wp::load(var_14);
        var_15 = wp::copy(var_16);
        // i1 = tet_vinds[0]                                                                      <L 233>
        var_18 = wp::extract(var_15, var_17);
        // i2 = tet_vinds[1]                                                                      <L 234>
        var_20 = wp::extract(var_15, var_19);
        // i3 = tet_vinds[2]                                                                      <L 235>
        var_22 = wp::extract(var_15, var_21);
        // i4 = tet_vinds[3]                                                                      <L 236>
        var_24 = wp::extract(var_15, var_23);
        // x1 = x[i1][0]                                                                          <L 237>
        var_26 = wp::address(var_x, var_18);
        var_28 = wp::load(var_26);
        var_27 = wp::extract(var_28, var_25);
        // x2 = x[i2][0]                                                                          <L 238>
        var_30 = wp::address(var_x, var_20);
        var_32 = wp::load(var_30);
        var_31 = wp::extract(var_32, var_29);
        // x3 = x[i3][0]                                                                          <L 239>
        var_34 = wp::address(var_x, var_22);
        var_36 = wp::load(var_34);
        var_35 = wp::extract(var_36, var_33);
        // x4 = x[i4][0]                                                                          <L 240>
        var_38 = wp::address(var_x, var_24);
        var_40 = wp::load(var_38);
        var_39 = wp::extract(var_40, var_37);
        // y1 = x[i1][1]                                                                          <L 241>
        var_42 = wp::address(var_x, var_18);
        var_44 = wp::load(var_42);
        var_43 = wp::extract(var_44, var_41);
        // y2 = x[i2][1]                                                                          <L 242>
        var_46 = wp::address(var_x, var_20);
        var_48 = wp::load(var_46);
        var_47 = wp::extract(var_48, var_45);
        // y3 = x[i3][1]                                                                          <L 243>
        var_50 = wp::address(var_x, var_22);
        var_52 = wp::load(var_50);
        var_51 = wp::extract(var_52, var_49);
        // y4 = x[i4][1]                                                                          <L 244>
        var_54 = wp::address(var_x, var_24);
        var_56 = wp::load(var_54);
        var_55 = wp::extract(var_56, var_53);
        // z1 = x[i1][2]                                                                          <L 245>
        var_58 = wp::address(var_x, var_18);
        var_60 = wp::load(var_58);
        var_59 = wp::extract(var_60, var_57);
        // z2 = x[i2][2]                                                                          <L 246>
        var_62 = wp::address(var_x, var_20);
        var_64 = wp::load(var_62);
        var_63 = wp::extract(var_64, var_61);
        // z3 = x[i3][2]                                                                          <L 247>
        var_66 = wp::address(var_x, var_22);
        var_68 = wp::load(var_66);
        var_67 = wp::extract(var_68, var_65);
        // z4 = x[i4][2]                                                                          <L 248>
        var_70 = wp::address(var_x, var_24);
        var_72 = wp::load(var_70);
        var_71 = wp::extract(var_72, var_69);
        // p1 = p_x[i1][0]                                                                        <L 250>
        var_74 = wp::address(var_p_x, var_18);
        var_76 = wp::load(var_74);
        var_75 = wp::extract(var_76, var_73);
        // p2 = p_x[i2][0]                                                                        <L 251>
        var_78 = wp::address(var_p_x, var_20);
        var_80 = wp::load(var_78);
        var_79 = wp::extract(var_80, var_77);
        // p3 = p_x[i3][0]                                                                        <L 252>
        var_82 = wp::address(var_p_x, var_22);
        var_84 = wp::load(var_82);
        var_83 = wp::extract(var_84, var_81);
        // p4 = p_x[i4][0]                                                                        <L 253>
        var_86 = wp::address(var_p_x, var_24);
        var_88 = wp::load(var_86);
        var_87 = wp::extract(var_88, var_85);
        // q1 = p_x[i1][1]                                                                        <L 254>
        var_90 = wp::address(var_p_x, var_18);
        var_92 = wp::load(var_90);
        var_91 = wp::extract(var_92, var_89);
        // q2 = p_x[i2][1]                                                                        <L 255>
        var_94 = wp::address(var_p_x, var_20);
        var_96 = wp::load(var_94);
        var_95 = wp::extract(var_96, var_93);
        // q3 = p_x[i3][1]                                                                        <L 256>
        var_98 = wp::address(var_p_x, var_22);
        var_100 = wp::load(var_98);
        var_99 = wp::extract(var_100, var_97);
        // q4 = p_x[i4][1]                                                                        <L 257>
        var_102 = wp::address(var_p_x, var_24);
        var_104 = wp::load(var_102);
        var_103 = wp::extract(var_104, var_101);
        // r1 = p_x[i1][2]                                                                        <L 258>
        var_106 = wp::address(var_p_x, var_18);
        var_108 = wp::load(var_106);
        var_107 = wp::extract(var_108, var_105);
        // r2 = p_x[i2][2]                                                                        <L 259>
        var_110 = wp::address(var_p_x, var_20);
        var_112 = wp::load(var_110);
        var_111 = wp::extract(var_112, var_109);
        // r3 = p_x[i3][2]                                                                        <L 260>
        var_114 = wp::address(var_p_x, var_22);
        var_116 = wp::load(var_114);
        var_115 = wp::extract(var_116, var_113);
        // r4 = p_x[i4][2]                                                                        <L 261>
        var_118 = wp::address(var_p_x, var_24);
        var_120 = wp::load(var_118);
        var_119 = wp::extract(var_120, var_117);
        // a = (                                                                                  <L 263>
        // -p1 * q2 * r3                                                                          <L 264>
        var_121 = wp::neg(var_75);
        var_122 = wp::mul(var_121, var_95);
        var_123 = wp::mul(var_122, var_115);
        // + p1 * r2 * q3                                                                         <L 265>
        var_124 = wp::mul(var_75, var_111);
        var_125 = wp::mul(var_124, var_99);
        var_126 = wp::add(var_123, var_125);
        // + q1 * p2 * r3                                                                         <L 266>
        var_127 = wp::mul(var_91, var_79);
        var_128 = wp::mul(var_127, var_115);
        var_129 = wp::add(var_126, var_128);
        // - q1 * r2 * p3                                                                         <L 267>
        var_130 = wp::mul(var_91, var_111);
        var_131 = wp::mul(var_130, var_83);
        var_132 = wp::sub(var_129, var_131);
        // - r1 * p2 * q3                                                                         <L 268>
        var_133 = wp::mul(var_107, var_79);
        var_134 = wp::mul(var_133, var_99);
        var_135 = wp::sub(var_132, var_134);
        // + r1 * q2 * p3                                                                         <L 269>
        var_136 = wp::mul(var_107, var_95);
        var_137 = wp::mul(var_136, var_83);
        var_138 = wp::add(var_135, var_137);
        // + p1 * q2 * r4                                                                         <L 270>
        var_139 = wp::mul(var_75, var_95);
        var_140 = wp::mul(var_139, var_119);
        var_141 = wp::add(var_138, var_140);
        // - p1 * r2 * q4                                                                         <L 271>
        var_142 = wp::mul(var_75, var_111);
        var_143 = wp::mul(var_142, var_103);
        var_144 = wp::sub(var_141, var_143);
        // - q1 * p2 * r4                                                                         <L 272>
        var_145 = wp::mul(var_91, var_79);
        var_146 = wp::mul(var_145, var_119);
        var_147 = wp::sub(var_144, var_146);
        // + q1 * r2 * p4                                                                         <L 273>
        var_148 = wp::mul(var_91, var_111);
        var_149 = wp::mul(var_148, var_87);
        var_150 = wp::add(var_147, var_149);
        // + r1 * p2 * q4                                                                         <L 274>
        var_151 = wp::mul(var_107, var_79);
        var_152 = wp::mul(var_151, var_103);
        var_153 = wp::add(var_150, var_152);
        // - r1 * q2 * p4                                                                         <L 275>
        var_154 = wp::mul(var_107, var_95);
        var_155 = wp::mul(var_154, var_87);
        var_156 = wp::sub(var_153, var_155);
        // - p1 * q3 * r4                                                                         <L 276>
        var_157 = wp::mul(var_75, var_99);
        var_158 = wp::mul(var_157, var_119);
        var_159 = wp::sub(var_156, var_158);
        // + p1 * r3 * q4                                                                         <L 277>
        var_160 = wp::mul(var_75, var_115);
        var_161 = wp::mul(var_160, var_103);
        var_162 = wp::add(var_159, var_161);
        // + q1 * p3 * r4                                                                         <L 278>
        var_163 = wp::mul(var_91, var_83);
        var_164 = wp::mul(var_163, var_119);
        var_165 = wp::add(var_162, var_164);
        // - q1 * r3 * p4                                                                         <L 279>
        var_166 = wp::mul(var_91, var_115);
        var_167 = wp::mul(var_166, var_87);
        var_168 = wp::sub(var_165, var_167);
        // - r1 * p3 * q4                                                                         <L 280>
        var_169 = wp::mul(var_107, var_83);
        var_170 = wp::mul(var_169, var_103);
        var_171 = wp::sub(var_168, var_170);
        // + r1 * q3 * p4                                                                         <L 281>
        var_172 = wp::mul(var_107, var_99);
        var_173 = wp::mul(var_172, var_87);
        var_174 = wp::add(var_171, var_173);
        // + p2 * q3 * r4                                                                         <L 282>
        var_175 = wp::mul(var_79, var_99);
        var_176 = wp::mul(var_175, var_119);
        var_177 = wp::add(var_174, var_176);
        // - p2 * r3 * q4                                                                         <L 283>
        var_178 = wp::mul(var_79, var_115);
        var_179 = wp::mul(var_178, var_103);
        var_180 = wp::sub(var_177, var_179);
        // - q2 * p3 * r4                                                                         <L 284>
        var_181 = wp::mul(var_95, var_83);
        var_182 = wp::mul(var_181, var_119);
        var_183 = wp::sub(var_180, var_182);
        // + q2 * r3 * p4                                                                         <L 285>
        var_184 = wp::mul(var_95, var_115);
        var_185 = wp::mul(var_184, var_87);
        var_186 = wp::add(var_183, var_185);
        // + r2 * p3 * q4                                                                         <L 286>
        var_187 = wp::mul(var_111, var_83);
        var_188 = wp::mul(var_187, var_103);
        var_189 = wp::add(var_186, var_188);
        // - r2 * q3 * p4                                                                         <L 287>
        var_190 = wp::mul(var_111, var_99);
        var_191 = wp::mul(var_190, var_87);
        var_192 = wp::sub(var_189, var_191);
        // b = (                                                                                  <L 289>
        // -x1 * q2 * r3                                                                          <L 290>
        var_193 = wp::neg(var_27);
        var_194 = wp::mul(var_193, var_95);
        var_195 = wp::mul(var_194, var_115);
        // + x1 * r2 * q3                                                                         <L 291>
        var_196 = wp::mul(var_27, var_111);
        var_197 = wp::mul(var_196, var_99);
        var_198 = wp::add(var_195, var_197);
        // + y1 * p2 * r3                                                                         <L 292>
        var_199 = wp::mul(var_43, var_79);
        var_200 = wp::mul(var_199, var_115);
        var_201 = wp::add(var_198, var_200);
        // - y1 * r2 * p3                                                                         <L 293>
        var_202 = wp::mul(var_43, var_111);
        var_203 = wp::mul(var_202, var_83);
        var_204 = wp::sub(var_201, var_203);
        // - z1 * p2 * q3                                                                         <L 294>
        var_205 = wp::mul(var_59, var_79);
        var_206 = wp::mul(var_205, var_99);
        var_207 = wp::sub(var_204, var_206);
        // + z1 * q2 * p3                                                                         <L 295>
        var_208 = wp::mul(var_59, var_95);
        var_209 = wp::mul(var_208, var_83);
        var_210 = wp::add(var_207, var_209);
        // + x2 * q1 * r3                                                                         <L 296>
        var_211 = wp::mul(var_31, var_91);
        var_212 = wp::mul(var_211, var_115);
        var_213 = wp::add(var_210, var_212);
        // - x2 * r1 * q3                                                                         <L 297>
        var_214 = wp::mul(var_31, var_107);
        var_215 = wp::mul(var_214, var_99);
        var_216 = wp::sub(var_213, var_215);
        // - y2 * p1 * r3                                                                         <L 298>
        var_217 = wp::mul(var_47, var_75);
        var_218 = wp::mul(var_217, var_115);
        var_219 = wp::sub(var_216, var_218);
        // + y2 * r1 * p3                                                                         <L 299>
        var_220 = wp::mul(var_47, var_107);
        var_221 = wp::mul(var_220, var_83);
        var_222 = wp::add(var_219, var_221);
        // + z2 * p1 * q3                                                                         <L 300>
        var_223 = wp::mul(var_63, var_75);
        var_224 = wp::mul(var_223, var_99);
        var_225 = wp::add(var_222, var_224);
        // - z2 * q1 * p3                                                                         <L 301>
        var_226 = wp::mul(var_63, var_91);
        var_227 = wp::mul(var_226, var_83);
        var_228 = wp::sub(var_225, var_227);
        // - x3 * q1 * r2                                                                         <L 302>
        var_229 = wp::mul(var_35, var_91);
        var_230 = wp::mul(var_229, var_111);
        var_231 = wp::sub(var_228, var_230);
        // + x3 * r1 * q2                                                                         <L 303>
        var_232 = wp::mul(var_35, var_107);
        var_233 = wp::mul(var_232, var_95);
        var_234 = wp::add(var_231, var_233);
        // + y3 * p1 * r2                                                                         <L 304>
        var_235 = wp::mul(var_51, var_75);
        var_236 = wp::mul(var_235, var_111);
        var_237 = wp::add(var_234, var_236);
        // - y3 * r1 * p2                                                                         <L 305>
        var_238 = wp::mul(var_51, var_107);
        var_239 = wp::mul(var_238, var_79);
        var_240 = wp::sub(var_237, var_239);
        // - z3 * p1 * q2                                                                         <L 306>
        var_241 = wp::mul(var_67, var_75);
        var_242 = wp::mul(var_241, var_95);
        var_243 = wp::sub(var_240, var_242);
        // + z3 * q1 * p2                                                                         <L 307>
        var_244 = wp::mul(var_67, var_91);
        var_245 = wp::mul(var_244, var_79);
        var_246 = wp::add(var_243, var_245);
        // + x1 * q2 * r4                                                                         <L 308>
        var_247 = wp::mul(var_27, var_95);
        var_248 = wp::mul(var_247, var_119);
        var_249 = wp::add(var_246, var_248);
        // - x1 * r2 * q4                                                                         <L 309>
        var_250 = wp::mul(var_27, var_111);
        var_251 = wp::mul(var_250, var_103);
        var_252 = wp::sub(var_249, var_251);
        // - y1 * p2 * r4                                                                         <L 310>
        var_253 = wp::mul(var_43, var_79);
        var_254 = wp::mul(var_253, var_119);
        var_255 = wp::sub(var_252, var_254);
        // + y1 * r2 * p4                                                                         <L 311>
        var_256 = wp::mul(var_43, var_111);
        var_257 = wp::mul(var_256, var_87);
        var_258 = wp::add(var_255, var_257);
        // + z1 * p2 * q4                                                                         <L 312>
        var_259 = wp::mul(var_59, var_79);
        var_260 = wp::mul(var_259, var_103);
        var_261 = wp::add(var_258, var_260);
        // - z1 * q2 * p4                                                                         <L 313>
        var_262 = wp::mul(var_59, var_95);
        var_263 = wp::mul(var_262, var_87);
        var_264 = wp::sub(var_261, var_263);
        // - x2 * q1 * r4                                                                         <L 314>
        var_265 = wp::mul(var_31, var_91);
        var_266 = wp::mul(var_265, var_119);
        var_267 = wp::sub(var_264, var_266);
        // + x2 * r1 * q4                                                                         <L 315>
        var_268 = wp::mul(var_31, var_107);
        var_269 = wp::mul(var_268, var_103);
        var_270 = wp::add(var_267, var_269);
        // + y2 * p1 * r4                                                                         <L 316>
        var_271 = wp::mul(var_47, var_75);
        var_272 = wp::mul(var_271, var_119);
        var_273 = wp::add(var_270, var_272);
        // - y2 * r1 * p4                                                                         <L 317>
        var_274 = wp::mul(var_47, var_107);
        var_275 = wp::mul(var_274, var_87);
        var_276 = wp::sub(var_273, var_275);
        // - z2 * p1 * q4                                                                         <L 318>
        var_277 = wp::mul(var_63, var_75);
        var_278 = wp::mul(var_277, var_103);
        var_279 = wp::sub(var_276, var_278);
        // + z2 * q1 * p4                                                                         <L 319>
        var_280 = wp::mul(var_63, var_91);
        var_281 = wp::mul(var_280, var_87);
        var_282 = wp::add(var_279, var_281);
        // + x4 * q1 * r2                                                                         <L 320>
        var_283 = wp::mul(var_39, var_91);
        var_284 = wp::mul(var_283, var_111);
        var_285 = wp::add(var_282, var_284);
        // - x4 * r1 * q2                                                                         <L 321>
        var_286 = wp::mul(var_39, var_107);
        var_287 = wp::mul(var_286, var_95);
        var_288 = wp::sub(var_285, var_287);
        // - y4 * p1 * r2                                                                         <L 322>
        var_289 = wp::mul(var_55, var_75);
        var_290 = wp::mul(var_289, var_111);
        var_291 = wp::sub(var_288, var_290);
        // + y4 * r1 * p2                                                                         <L 323>
        var_292 = wp::mul(var_55, var_107);
        var_293 = wp::mul(var_292, var_79);
        var_294 = wp::add(var_291, var_293);
        // + z4 * p1 * q2                                                                         <L 324>
        var_295 = wp::mul(var_71, var_75);
        var_296 = wp::mul(var_295, var_95);
        var_297 = wp::add(var_294, var_296);
        // - z4 * q1 * p2                                                                         <L 325>
        var_298 = wp::mul(var_71, var_91);
        var_299 = wp::mul(var_298, var_79);
        var_300 = wp::sub(var_297, var_299);
        // - x1 * q3 * r4                                                                         <L 326>
        var_301 = wp::mul(var_27, var_99);
        var_302 = wp::mul(var_301, var_119);
        var_303 = wp::sub(var_300, var_302);
        // + x1 * r3 * q4                                                                         <L 327>
        var_304 = wp::mul(var_27, var_115);
        var_305 = wp::mul(var_304, var_103);
        var_306 = wp::add(var_303, var_305);
        // + y1 * p3 * r4                                                                         <L 328>
        var_307 = wp::mul(var_43, var_83);
        var_308 = wp::mul(var_307, var_119);
        var_309 = wp::add(var_306, var_308);
        // - y1 * r3 * p4                                                                         <L 329>
        var_310 = wp::mul(var_43, var_115);
        var_311 = wp::mul(var_310, var_87);
        var_312 = wp::sub(var_309, var_311);
        // - z1 * p3 * q4                                                                         <L 330>
        var_313 = wp::mul(var_59, var_83);
        var_314 = wp::mul(var_313, var_103);
        var_315 = wp::sub(var_312, var_314);
        // + z1 * q3 * p4                                                                         <L 331>
        var_316 = wp::mul(var_59, var_99);
        var_317 = wp::mul(var_316, var_87);
        var_318 = wp::add(var_315, var_317);
        // + x3 * q1 * r4                                                                         <L 332>
        var_319 = wp::mul(var_35, var_91);
        var_320 = wp::mul(var_319, var_119);
        var_321 = wp::add(var_318, var_320);
        // - x3 * r1 * q4                                                                         <L 333>
        var_322 = wp::mul(var_35, var_107);
        var_323 = wp::mul(var_322, var_103);
        var_324 = wp::sub(var_321, var_323);
        // - y3 * p1 * r4                                                                         <L 334>
        var_325 = wp::mul(var_51, var_75);
        var_326 = wp::mul(var_325, var_119);
        var_327 = wp::sub(var_324, var_326);
        // + y3 * r1 * p4                                                                         <L 335>
        var_328 = wp::mul(var_51, var_107);
        var_329 = wp::mul(var_328, var_87);
        var_330 = wp::add(var_327, var_329);
        // + z3 * p1 * q4                                                                         <L 336>
        var_331 = wp::mul(var_67, var_75);
        var_332 = wp::mul(var_331, var_103);
        var_333 = wp::add(var_330, var_332);
        // - z3 * q1 * p4                                                                         <L 337>
        var_334 = wp::mul(var_67, var_91);
        var_335 = wp::mul(var_334, var_87);
        var_336 = wp::sub(var_333, var_335);
        // - x4 * q1 * r3                                                                         <L 338>
        var_337 = wp::mul(var_39, var_91);
        var_338 = wp::mul(var_337, var_115);
        var_339 = wp::sub(var_336, var_338);
        // + x4 * r1 * q3                                                                         <L 339>
        var_340 = wp::mul(var_39, var_107);
        var_341 = wp::mul(var_340, var_99);
        var_342 = wp::add(var_339, var_341);
        // + y4 * p1 * r3                                                                         <L 340>
        var_343 = wp::mul(var_55, var_75);
        var_344 = wp::mul(var_343, var_115);
        var_345 = wp::add(var_342, var_344);
        // - y4 * r1 * p3                                                                         <L 341>
        var_346 = wp::mul(var_55, var_107);
        var_347 = wp::mul(var_346, var_83);
        var_348 = wp::sub(var_345, var_347);
        // - z4 * p1 * q3                                                                         <L 342>
        var_349 = wp::mul(var_71, var_75);
        var_350 = wp::mul(var_349, var_99);
        var_351 = wp::sub(var_348, var_350);
        // + z4 * q1 * p3                                                                         <L 343>
        var_352 = wp::mul(var_71, var_91);
        var_353 = wp::mul(var_352, var_83);
        var_354 = wp::add(var_351, var_353);
        // + x2 * q3 * r4                                                                         <L 344>
        var_355 = wp::mul(var_31, var_99);
        var_356 = wp::mul(var_355, var_119);
        var_357 = wp::add(var_354, var_356);
        // - x2 * r3 * q4                                                                         <L 345>
        var_358 = wp::mul(var_31, var_115);
        var_359 = wp::mul(var_358, var_103);
        var_360 = wp::sub(var_357, var_359);
        // - y2 * p3 * r4                                                                         <L 346>
        var_361 = wp::mul(var_47, var_83);
        var_362 = wp::mul(var_361, var_119);
        var_363 = wp::sub(var_360, var_362);
        // + y2 * r3 * p4                                                                         <L 347>
        var_364 = wp::mul(var_47, var_115);
        var_365 = wp::mul(var_364, var_87);
        var_366 = wp::add(var_363, var_365);
        // + z2 * p3 * q4                                                                         <L 348>
        var_367 = wp::mul(var_63, var_83);
        var_368 = wp::mul(var_367, var_103);
        var_369 = wp::add(var_366, var_368);
        // - z2 * q3 * p4                                                                         <L 349>
        var_370 = wp::mul(var_63, var_99);
        var_371 = wp::mul(var_370, var_87);
        var_372 = wp::sub(var_369, var_371);
        // - x3 * q2 * r4                                                                         <L 350>
        var_373 = wp::mul(var_35, var_95);
        var_374 = wp::mul(var_373, var_119);
        var_375 = wp::sub(var_372, var_374);
        // + x3 * r2 * q4                                                                         <L 351>
        var_376 = wp::mul(var_35, var_111);
        var_377 = wp::mul(var_376, var_103);
        var_378 = wp::add(var_375, var_377);
        // + y3 * p2 * r4                                                                         <L 352>
        var_379 = wp::mul(var_51, var_79);
        var_380 = wp::mul(var_379, var_119);
        var_381 = wp::add(var_378, var_380);
        // - y3 * r2 * p4                                                                         <L 353>
        var_382 = wp::mul(var_51, var_111);
        var_383 = wp::mul(var_382, var_87);
        var_384 = wp::sub(var_381, var_383);
        // - z3 * p2 * q4                                                                         <L 354>
        var_385 = wp::mul(var_67, var_79);
        var_386 = wp::mul(var_385, var_103);
        var_387 = wp::sub(var_384, var_386);
        // + z3 * q2 * p4                                                                         <L 355>
        var_388 = wp::mul(var_67, var_95);
        var_389 = wp::mul(var_388, var_87);
        var_390 = wp::add(var_387, var_389);
        // + x4 * q2 * r3                                                                         <L 356>
        var_391 = wp::mul(var_39, var_95);
        var_392 = wp::mul(var_391, var_115);
        var_393 = wp::add(var_390, var_392);
        // - x4 * r2 * q3                                                                         <L 357>
        var_394 = wp::mul(var_39, var_111);
        var_395 = wp::mul(var_394, var_99);
        var_396 = wp::sub(var_393, var_395);
        // - y4 * p2 * r3                                                                         <L 358>
        var_397 = wp::mul(var_55, var_79);
        var_398 = wp::mul(var_397, var_115);
        var_399 = wp::sub(var_396, var_398);
        // + y4 * r2 * p3                                                                         <L 359>
        var_400 = wp::mul(var_55, var_111);
        var_401 = wp::mul(var_400, var_83);
        var_402 = wp::add(var_399, var_401);
        // + z4 * p2 * q3                                                                         <L 360>
        var_403 = wp::mul(var_71, var_79);
        var_404 = wp::mul(var_403, var_99);
        var_405 = wp::add(var_402, var_404);
        // - z4 * q2 * p3                                                                         <L 361>
        var_406 = wp::mul(var_71, var_95);
        var_407 = wp::mul(var_406, var_83);
        var_408 = wp::sub(var_405, var_407);
        // c = (                                                                                  <L 363>
        // -x1 * y2 * r3                                                                          <L 364>
        var_409 = wp::neg(var_27);
        var_410 = wp::mul(var_409, var_47);
        var_411 = wp::mul(var_410, var_115);
        // + x1 * z2 * q3                                                                         <L 365>
        var_412 = wp::mul(var_27, var_63);
        var_413 = wp::mul(var_412, var_99);
        var_414 = wp::add(var_411, var_413);
        // + x1 * y3 * r2                                                                         <L 366>
        var_415 = wp::mul(var_27, var_51);
        var_416 = wp::mul(var_415, var_111);
        var_417 = wp::add(var_414, var_416);
        // - x1 * z3 * q2                                                                         <L 367>
        var_418 = wp::mul(var_27, var_67);
        var_419 = wp::mul(var_418, var_95);
        var_420 = wp::sub(var_417, var_419);
        // + y1 * x2 * r3                                                                         <L 368>
        var_421 = wp::mul(var_43, var_31);
        var_422 = wp::mul(var_421, var_115);
        var_423 = wp::add(var_420, var_422);
        // - y1 * z2 * p3                                                                         <L 369>
        var_424 = wp::mul(var_43, var_63);
        var_425 = wp::mul(var_424, var_83);
        var_426 = wp::sub(var_423, var_425);
        // - y1 * x3 * r2                                                                         <L 370>
        var_427 = wp::mul(var_43, var_35);
        var_428 = wp::mul(var_427, var_111);
        var_429 = wp::sub(var_426, var_428);
        // + y1 * z3 * p2                                                                         <L 371>
        var_430 = wp::mul(var_43, var_67);
        var_431 = wp::mul(var_430, var_79);
        var_432 = wp::add(var_429, var_431);
        // - z1 * x2 * q3                                                                         <L 372>
        var_433 = wp::mul(var_59, var_31);
        var_434 = wp::mul(var_433, var_99);
        var_435 = wp::sub(var_432, var_434);
        // + z1 * y2 * p3                                                                         <L 373>
        var_436 = wp::mul(var_59, var_47);
        var_437 = wp::mul(var_436, var_83);
        var_438 = wp::add(var_435, var_437);
        // + z1 * x3 * q2                                                                         <L 374>
        var_439 = wp::mul(var_59, var_35);
        var_440 = wp::mul(var_439, var_95);
        var_441 = wp::add(var_438, var_440);
        // - z1 * y3 * p2                                                                         <L 375>
        var_442 = wp::mul(var_59, var_51);
        var_443 = wp::mul(var_442, var_79);
        var_444 = wp::sub(var_441, var_443);
        // - x2 * y3 * r1                                                                         <L 376>
        var_445 = wp::mul(var_31, var_51);
        var_446 = wp::mul(var_445, var_107);
        var_447 = wp::sub(var_444, var_446);
        // + x2 * z3 * q1                                                                         <L 377>
        var_448 = wp::mul(var_31, var_67);
        var_449 = wp::mul(var_448, var_91);
        var_450 = wp::add(var_447, var_449);
        // + y2 * x3 * r1                                                                         <L 378>
        var_451 = wp::mul(var_47, var_35);
        var_452 = wp::mul(var_451, var_107);
        var_453 = wp::add(var_450, var_452);
        // - y2 * z3 * p1                                                                         <L 379>
        var_454 = wp::mul(var_47, var_67);
        var_455 = wp::mul(var_454, var_75);
        var_456 = wp::sub(var_453, var_455);
        // - z2 * x3 * q1                                                                         <L 380>
        var_457 = wp::mul(var_63, var_35);
        var_458 = wp::mul(var_457, var_91);
        var_459 = wp::sub(var_456, var_458);
        // + z2 * y3 * p1                                                                         <L 381>
        var_460 = wp::mul(var_63, var_51);
        var_461 = wp::mul(var_460, var_75);
        var_462 = wp::add(var_459, var_461);
        // + x1 * y2 * r4                                                                         <L 382>
        var_463 = wp::mul(var_27, var_47);
        var_464 = wp::mul(var_463, var_119);
        var_465 = wp::add(var_462, var_464);
        // - x1 * z2 * q4                                                                         <L 383>
        var_466 = wp::mul(var_27, var_63);
        var_467 = wp::mul(var_466, var_103);
        var_468 = wp::sub(var_465, var_467);
        // - x1 * y4 * r2                                                                         <L 384>
        var_469 = wp::mul(var_27, var_55);
        var_470 = wp::mul(var_469, var_111);
        var_471 = wp::sub(var_468, var_470);
        // + x1 * z4 * q2                                                                         <L 385>
        var_472 = wp::mul(var_27, var_71);
        var_473 = wp::mul(var_472, var_95);
        var_474 = wp::add(var_471, var_473);
        // - y1 * x2 * r4                                                                         <L 386>
        var_475 = wp::mul(var_43, var_31);
        var_476 = wp::mul(var_475, var_119);
        var_477 = wp::sub(var_474, var_476);
        // + y1 * z2 * p4                                                                         <L 387>
        var_478 = wp::mul(var_43, var_63);
        var_479 = wp::mul(var_478, var_87);
        var_480 = wp::add(var_477, var_479);
        // + y1 * x4 * r2                                                                         <L 388>
        var_481 = wp::mul(var_43, var_39);
        var_482 = wp::mul(var_481, var_111);
        var_483 = wp::add(var_480, var_482);
        // - y1 * z4 * p2                                                                         <L 389>
        var_484 = wp::mul(var_43, var_71);
        var_485 = wp::mul(var_484, var_79);
        var_486 = wp::sub(var_483, var_485);
        // + z1 * x2 * q4                                                                         <L 390>
        var_487 = wp::mul(var_59, var_31);
        var_488 = wp::mul(var_487, var_103);
        var_489 = wp::add(var_486, var_488);
        // - z1 * y2 * p4                                                                         <L 391>
        var_490 = wp::mul(var_59, var_47);
        var_491 = wp::mul(var_490, var_87);
        var_492 = wp::sub(var_489, var_491);
        // - z1 * x4 * q2                                                                         <L 392>
        var_493 = wp::mul(var_59, var_39);
        var_494 = wp::mul(var_493, var_95);
        var_495 = wp::sub(var_492, var_494);
        // + z1 * y4 * p2                                                                         <L 393>
        var_496 = wp::mul(var_59, var_55);
        var_497 = wp::mul(var_496, var_79);
        var_498 = wp::add(var_495, var_497);
        // + x2 * y4 * r1                                                                         <L 394>
        var_499 = wp::mul(var_31, var_55);
        var_500 = wp::mul(var_499, var_107);
        var_501 = wp::add(var_498, var_500);
        // - x2 * z4 * q1                                                                         <L 395>
        var_502 = wp::mul(var_31, var_71);
        var_503 = wp::mul(var_502, var_91);
        var_504 = wp::sub(var_501, var_503);
        // - y2 * x4 * r1                                                                         <L 396>
        var_505 = wp::mul(var_47, var_39);
        var_506 = wp::mul(var_505, var_107);
        var_507 = wp::sub(var_504, var_506);
        // + y2 * z4 * p1                                                                         <L 397>
        var_508 = wp::mul(var_47, var_71);
        var_509 = wp::mul(var_508, var_75);
        var_510 = wp::add(var_507, var_509);
        // + z2 * x4 * q1                                                                         <L 398>
        var_511 = wp::mul(var_63, var_39);
        var_512 = wp::mul(var_511, var_91);
        var_513 = wp::add(var_510, var_512);
        // - z2 * y4 * p1                                                                         <L 399>
        var_514 = wp::mul(var_63, var_55);
        var_515 = wp::mul(var_514, var_75);
        var_516 = wp::sub(var_513, var_515);
        // - x1 * y3 * r4                                                                         <L 400>
        var_517 = wp::mul(var_27, var_51);
        var_518 = wp::mul(var_517, var_119);
        var_519 = wp::sub(var_516, var_518);
        // + x1 * z3 * q4                                                                         <L 401>
        var_520 = wp::mul(var_27, var_67);
        var_521 = wp::mul(var_520, var_103);
        var_522 = wp::add(var_519, var_521);
        // + x1 * y4 * r3                                                                         <L 402>
        var_523 = wp::mul(var_27, var_55);
        var_524 = wp::mul(var_523, var_115);
        var_525 = wp::add(var_522, var_524);
        // - x1 * z4 * q3                                                                         <L 403>
        var_526 = wp::mul(var_27, var_71);
        var_527 = wp::mul(var_526, var_99);
        var_528 = wp::sub(var_525, var_527);
        // + y1 * x3 * r4                                                                         <L 404>
        var_529 = wp::mul(var_43, var_35);
        var_530 = wp::mul(var_529, var_119);
        var_531 = wp::add(var_528, var_530);
        // - y1 * z3 * p4                                                                         <L 405>
        var_532 = wp::mul(var_43, var_67);
        var_533 = wp::mul(var_532, var_87);
        var_534 = wp::sub(var_531, var_533);
        // - y1 * x4 * r3                                                                         <L 406>
        var_535 = wp::mul(var_43, var_39);
        var_536 = wp::mul(var_535, var_115);
        var_537 = wp::sub(var_534, var_536);
        // + y1 * z4 * p3                                                                         <L 407>
        var_538 = wp::mul(var_43, var_71);
        var_539 = wp::mul(var_538, var_83);
        var_540 = wp::add(var_537, var_539);
        // - z1 * x3 * q4                                                                         <L 408>
        var_541 = wp::mul(var_59, var_35);
        var_542 = wp::mul(var_541, var_103);
        var_543 = wp::sub(var_540, var_542);
        // + z1 * y3 * p4                                                                         <L 409>
        var_544 = wp::mul(var_59, var_51);
        var_545 = wp::mul(var_544, var_87);
        var_546 = wp::add(var_543, var_545);
        // + z1 * x4 * q3                                                                         <L 410>
        var_547 = wp::mul(var_59, var_39);
        var_548 = wp::mul(var_547, var_99);
        var_549 = wp::add(var_546, var_548);
        // - z1 * y4 * p3                                                                         <L 411>
        var_550 = wp::mul(var_59, var_55);
        var_551 = wp::mul(var_550, var_83);
        var_552 = wp::sub(var_549, var_551);
        // - x3 * y4 * r1                                                                         <L 412>
        var_553 = wp::mul(var_35, var_55);
        var_554 = wp::mul(var_553, var_107);
        var_555 = wp::sub(var_552, var_554);
        // + x3 * z4 * q1                                                                         <L 413>
        var_556 = wp::mul(var_35, var_71);
        var_557 = wp::mul(var_556, var_91);
        var_558 = wp::add(var_555, var_557);
        // + y3 * x4 * r1                                                                         <L 414>
        var_559 = wp::mul(var_51, var_39);
        var_560 = wp::mul(var_559, var_107);
        var_561 = wp::add(var_558, var_560);
        // - y3 * z4 * p1                                                                         <L 415>
        var_562 = wp::mul(var_51, var_71);
        var_563 = wp::mul(var_562, var_75);
        var_564 = wp::sub(var_561, var_563);
        // - z3 * x4 * q1                                                                         <L 416>
        var_565 = wp::mul(var_67, var_39);
        var_566 = wp::mul(var_565, var_91);
        var_567 = wp::sub(var_564, var_566);
        // + z3 * y4 * p1                                                                         <L 417>
        var_568 = wp::mul(var_67, var_55);
        var_569 = wp::mul(var_568, var_75);
        var_570 = wp::add(var_567, var_569);
        // + x2 * y3 * r4                                                                         <L 418>
        var_571 = wp::mul(var_31, var_51);
        var_572 = wp::mul(var_571, var_119);
        var_573 = wp::add(var_570, var_572);
        // - x2 * z3 * q4                                                                         <L 419>
        var_574 = wp::mul(var_31, var_67);
        var_575 = wp::mul(var_574, var_103);
        var_576 = wp::sub(var_573, var_575);
        // - x2 * y4 * r3                                                                         <L 420>
        var_577 = wp::mul(var_31, var_55);
        var_578 = wp::mul(var_577, var_115);
        var_579 = wp::sub(var_576, var_578);
        // + x2 * z4 * q3                                                                         <L 421>
        var_580 = wp::mul(var_31, var_71);
        var_581 = wp::mul(var_580, var_99);
        var_582 = wp::add(var_579, var_581);
        // - y2 * x3 * r4                                                                         <L 422>
        var_583 = wp::mul(var_47, var_35);
        var_584 = wp::mul(var_583, var_119);
        var_585 = wp::sub(var_582, var_584);
        // + y2 * z3 * p4                                                                         <L 423>
        var_586 = wp::mul(var_47, var_67);
        var_587 = wp::mul(var_586, var_87);
        var_588 = wp::add(var_585, var_587);
        // + y2 * x4 * r3                                                                         <L 424>
        var_589 = wp::mul(var_47, var_39);
        var_590 = wp::mul(var_589, var_115);
        var_591 = wp::add(var_588, var_590);
        // - y2 * z4 * p3                                                                         <L 425>
        var_592 = wp::mul(var_47, var_71);
        var_593 = wp::mul(var_592, var_83);
        var_594 = wp::sub(var_591, var_593);
        // + z2 * x3 * q4                                                                         <L 426>
        var_595 = wp::mul(var_63, var_35);
        var_596 = wp::mul(var_595, var_103);
        var_597 = wp::add(var_594, var_596);
        // - z2 * y3 * p4                                                                         <L 427>
        var_598 = wp::mul(var_63, var_51);
        var_599 = wp::mul(var_598, var_87);
        var_600 = wp::sub(var_597, var_599);
        // - z2 * x4 * q3                                                                         <L 428>
        var_601 = wp::mul(var_63, var_39);
        var_602 = wp::mul(var_601, var_99);
        var_603 = wp::sub(var_600, var_602);
        // + z2 * y4 * p3                                                                         <L 429>
        var_604 = wp::mul(var_63, var_55);
        var_605 = wp::mul(var_604, var_83);
        var_606 = wp::add(var_603, var_605);
        // + x3 * y4 * r2                                                                         <L 430>
        var_607 = wp::mul(var_35, var_55);
        var_608 = wp::mul(var_607, var_111);
        var_609 = wp::add(var_606, var_608);
        // - x3 * z4 * q2                                                                         <L 431>
        var_610 = wp::mul(var_35, var_71);
        var_611 = wp::mul(var_610, var_95);
        var_612 = wp::sub(var_609, var_611);
        // - y3 * x4 * r2                                                                         <L 432>
        var_613 = wp::mul(var_51, var_39);
        var_614 = wp::mul(var_613, var_111);
        var_615 = wp::sub(var_612, var_614);
        // + y3 * z4 * p2                                                                         <L 433>
        var_616 = wp::mul(var_51, var_71);
        var_617 = wp::mul(var_616, var_79);
        var_618 = wp::add(var_615, var_617);
        // + z3 * x4 * q2                                                                         <L 434>
        var_619 = wp::mul(var_67, var_39);
        var_620 = wp::mul(var_619, var_95);
        var_621 = wp::add(var_618, var_620);
        // - z3 * y4 * p2                                                                         <L 435>
        var_622 = wp::mul(var_67, var_55);
        var_623 = wp::mul(var_622, var_79);
        var_624 = wp::sub(var_621, var_623);
        // d = wp.float64(1.0 - 0.2) * (                                                          <L 437>
        var_627 = wp::sub(var_625, var_626);
        var_628 = wp::float64(var_627);
        // x1 * z2 * y3                                                                           <L 438>
        var_629 = wp::mul(var_27, var_63);
        var_630 = wp::mul(var_629, var_51);
        // - x1 * y2 * z3                                                                         <L 439>
        var_631 = wp::mul(var_27, var_47);
        var_632 = wp::mul(var_631, var_67);
        var_633 = wp::sub(var_630, var_632);
        // + y1 * x2 * z3                                                                         <L 440>
        var_634 = wp::mul(var_43, var_31);
        var_635 = wp::mul(var_634, var_67);
        var_636 = wp::add(var_633, var_635);
        // - y1 * z2 * x3                                                                         <L 441>
        var_637 = wp::mul(var_43, var_63);
        var_638 = wp::mul(var_637, var_35);
        var_639 = wp::sub(var_636, var_638);
        // - z1 * x2 * y3                                                                         <L 442>
        var_640 = wp::mul(var_59, var_31);
        var_641 = wp::mul(var_640, var_51);
        var_642 = wp::sub(var_639, var_641);
        // + z1 * y2 * x3                                                                         <L 443>
        var_643 = wp::mul(var_59, var_47);
        var_644 = wp::mul(var_643, var_35);
        var_645 = wp::add(var_642, var_644);
        // + x1 * y2 * z4                                                                         <L 444>
        var_646 = wp::mul(var_27, var_47);
        var_647 = wp::mul(var_646, var_71);
        var_648 = wp::add(var_645, var_647);
        // - x1 * z2 * y4                                                                         <L 445>
        var_649 = wp::mul(var_27, var_63);
        var_650 = wp::mul(var_649, var_55);
        var_651 = wp::sub(var_648, var_650);
        // - y1 * x2 * z4                                                                         <L 446>
        var_652 = wp::mul(var_43, var_31);
        var_653 = wp::mul(var_652, var_71);
        var_654 = wp::sub(var_651, var_653);
        // + y1 * z2 * x4                                                                         <L 447>
        var_655 = wp::mul(var_43, var_63);
        var_656 = wp::mul(var_655, var_39);
        var_657 = wp::add(var_654, var_656);
        // + z1 * x2 * y4                                                                         <L 448>
        var_658 = wp::mul(var_59, var_31);
        var_659 = wp::mul(var_658, var_55);
        var_660 = wp::add(var_657, var_659);
        // - z1 * y2 * x4                                                                         <L 449>
        var_661 = wp::mul(var_59, var_47);
        var_662 = wp::mul(var_661, var_39);
        var_663 = wp::sub(var_660, var_662);
        // - x1 * y3 * z4                                                                         <L 450>
        var_664 = wp::mul(var_27, var_51);
        var_665 = wp::mul(var_664, var_71);
        var_666 = wp::sub(var_663, var_665);
        // + x1 * z3 * y4                                                                         <L 451>
        var_667 = wp::mul(var_27, var_67);
        var_668 = wp::mul(var_667, var_55);
        var_669 = wp::add(var_666, var_668);
        // + y1 * x3 * z4                                                                         <L 452>
        var_670 = wp::mul(var_43, var_35);
        var_671 = wp::mul(var_670, var_71);
        var_672 = wp::add(var_669, var_671);
        // - y1 * z3 * x4                                                                         <L 453>
        var_673 = wp::mul(var_43, var_67);
        var_674 = wp::mul(var_673, var_39);
        var_675 = wp::sub(var_672, var_674);
        // - z1 * x3 * y4                                                                         <L 454>
        var_676 = wp::mul(var_59, var_35);
        var_677 = wp::mul(var_676, var_55);
        var_678 = wp::sub(var_675, var_677);
        // + z1 * y3 * x4                                                                         <L 455>
        var_679 = wp::mul(var_59, var_51);
        var_680 = wp::mul(var_679, var_39);
        var_681 = wp::add(var_678, var_680);
        // + x2 * y3 * z4                                                                         <L 456>
        var_682 = wp::mul(var_31, var_51);
        var_683 = wp::mul(var_682, var_71);
        var_684 = wp::add(var_681, var_683);
        // - x2 * z3 * y4                                                                         <L 457>
        var_685 = wp::mul(var_31, var_67);
        var_686 = wp::mul(var_685, var_55);
        var_687 = wp::sub(var_684, var_686);
        // - y2 * x3 * z4                                                                         <L 458>
        var_688 = wp::mul(var_47, var_35);
        var_689 = wp::mul(var_688, var_71);
        var_690 = wp::sub(var_687, var_689);
        // + y2 * z3 * x4                                                                         <L 459>
        var_691 = wp::mul(var_47, var_67);
        var_692 = wp::mul(var_691, var_39);
        var_693 = wp::add(var_690, var_692);
        // + z2 * x3 * y4                                                                         <L 460>
        var_694 = wp::mul(var_63, var_35);
        var_695 = wp::mul(var_694, var_55);
        var_696 = wp::add(var_693, var_695);
        // - z2 * y3 * x4                                                                         <L 461>
        var_697 = wp::mul(var_63, var_51);
        var_698 = wp::mul(var_697, var_39);
        var_699 = wp::sub(var_696, var_698);
        var_700 = wp::mul(var_628, var_699);
        // t = get_smallest_positive_real_cubic_root(a, b, c, d, img_tol, cubic_coef_tol)         <L 463>
        var_701 = get_smallest_positive_real_cubic_root_0(var_192, var_408, var_624, var_700, var_img_tol, var_cubic_coef_tol);
        // if (t < _0) or (t > _1):                                                               <L 464>
        var_703 = (var_701 < var_702);
        var_705 = (var_701 > var_704);
        var_706 = var_703 || var_705;
        if (var_706) {
            // t = _1                                                                             <L 465>
            var_707 = wp::copy(var_704);
        }
        var_708 = wp::where(var_706, var_707, var_701);
        // if t < wp.float64(1e-3):                                                               <L 466>
        var_710 = wp::float64(var_709);
        var_711 = (var_708 < var_710);
        if (var_711) {
            // coef = wp.float64(1e10)                                                            <L 467>
            var_713 = wp::float64(var_712);
            // wp.printf(                                                                         <L 468>
            // "toi: %lf, a: %lf, b: %lf, c: %lf, d: %lf\n",                                      <L 469>
            // t,                                                                                 <L 470>
            // a * coef,                                                                          <L 471>
            var_715 = wp::mul(var_192, var_713);
            // b * coef,                                                                          <L 472>
            var_716 = wp::mul(var_408, var_713);
            // c * coef,                                                                          <L 473>
            var_717 = wp::mul(var_624, var_713);
            // d * coef,                                                                          <L 474>
            var_718 = wp::mul(var_700, var_713);
            printf(var_714, var_708, var_715, var_716, var_717, var_718);
        }
        // alphas[tid] = t                                                                        <L 476>
        wp::array_store(var_alphas, var_0, var_708);
    }
}



extern "C" __global__ void init_step_size_inversion_free_kernel_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::vec_t<3,wp::float64>> var_p_x,
    wp::array_t<wp::vec_t<4,wp::int32>> var_tet_elems,
    wp::array_t<wp::float64> var_alphas,
    wp::array_t<wp::int32> var_node2body,
    wp::array_t<wp::int32> var_body_env_id,
    wp::array_t<wp::int32> var_env_states,
    wp::array_t<wp::int32> var_tet_envs,
    wp::float64 var_img_tol,
    wp::float64 var_cubic_coef_tol,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_x,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_p_x,
    wp::array_t<wp::vec_t<4,wp::int32>> adj_tet_elems,
    wp::array_t<wp::float64> adj_alphas,
    wp::array_t<wp::int32> adj_node2body,
    wp::array_t<wp::int32> adj_body_env_id,
    wp::array_t<wp::int32> adj_env_states,
    wp::array_t<wp::int32> adj_tet_envs,
    wp::float64 adj_img_tol,
    wp::float64 adj_cubic_coef_tol)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        wp::int32* var_2;
        wp::int32 var_3;
        const wp::int32 var_4 = 1;
        bool var_5;
        wp::int32 var_6;
        wp::int32* var_7;
        wp::int32* var_8;
        wp::int32 var_9;
        const wp::int32 var_10 = 2;
        bool var_11;
        wp::int32 var_12;
        bool var_13;
        wp::vec_t<4,wp::int32>* var_14;
        wp::vec_t<4,wp::int32> var_15;
        wp::vec_t<4,wp::int32> var_16;
        const wp::int32 var_17 = 0;
        wp::int32 var_18;
        const wp::int32 var_19 = 1;
        wp::int32 var_20;
        const wp::int32 var_21 = 2;
        wp::int32 var_22;
        const wp::int32 var_23 = 3;
        wp::int32 var_24;
        const wp::int32 var_25 = 0;
        wp::vec_t<3,wp::float64>* var_26;
        wp::float64 var_27;
        wp::vec_t<3,wp::float64> var_28;
        const wp::int32 var_29 = 0;
        wp::vec_t<3,wp::float64>* var_30;
        wp::float64 var_31;
        wp::vec_t<3,wp::float64> var_32;
        const wp::int32 var_33 = 0;
        wp::vec_t<3,wp::float64>* var_34;
        wp::float64 var_35;
        wp::vec_t<3,wp::float64> var_36;
        const wp::int32 var_37 = 0;
        wp::vec_t<3,wp::float64>* var_38;
        wp::float64 var_39;
        wp::vec_t<3,wp::float64> var_40;
        const wp::int32 var_41 = 1;
        wp::vec_t<3,wp::float64>* var_42;
        wp::float64 var_43;
        wp::vec_t<3,wp::float64> var_44;
        const wp::int32 var_45 = 1;
        wp::vec_t<3,wp::float64>* var_46;
        wp::float64 var_47;
        wp::vec_t<3,wp::float64> var_48;
        const wp::int32 var_49 = 1;
        wp::vec_t<3,wp::float64>* var_50;
        wp::float64 var_51;
        wp::vec_t<3,wp::float64> var_52;
        const wp::int32 var_53 = 1;
        wp::vec_t<3,wp::float64>* var_54;
        wp::float64 var_55;
        wp::vec_t<3,wp::float64> var_56;
        const wp::int32 var_57 = 2;
        wp::vec_t<3,wp::float64>* var_58;
        wp::float64 var_59;
        wp::vec_t<3,wp::float64> var_60;
        const wp::int32 var_61 = 2;
        wp::vec_t<3,wp::float64>* var_62;
        wp::float64 var_63;
        wp::vec_t<3,wp::float64> var_64;
        const wp::int32 var_65 = 2;
        wp::vec_t<3,wp::float64>* var_66;
        wp::float64 var_67;
        wp::vec_t<3,wp::float64> var_68;
        const wp::int32 var_69 = 2;
        wp::vec_t<3,wp::float64>* var_70;
        wp::float64 var_71;
        wp::vec_t<3,wp::float64> var_72;
        const wp::int32 var_73 = 0;
        wp::vec_t<3,wp::float64>* var_74;
        wp::float64 var_75;
        wp::vec_t<3,wp::float64> var_76;
        const wp::int32 var_77 = 0;
        wp::vec_t<3,wp::float64>* var_78;
        wp::float64 var_79;
        wp::vec_t<3,wp::float64> var_80;
        const wp::int32 var_81 = 0;
        wp::vec_t<3,wp::float64>* var_82;
        wp::float64 var_83;
        wp::vec_t<3,wp::float64> var_84;
        const wp::int32 var_85 = 0;
        wp::vec_t<3,wp::float64>* var_86;
        wp::float64 var_87;
        wp::vec_t<3,wp::float64> var_88;
        const wp::int32 var_89 = 1;
        wp::vec_t<3,wp::float64>* var_90;
        wp::float64 var_91;
        wp::vec_t<3,wp::float64> var_92;
        const wp::int32 var_93 = 1;
        wp::vec_t<3,wp::float64>* var_94;
        wp::float64 var_95;
        wp::vec_t<3,wp::float64> var_96;
        const wp::int32 var_97 = 1;
        wp::vec_t<3,wp::float64>* var_98;
        wp::float64 var_99;
        wp::vec_t<3,wp::float64> var_100;
        const wp::int32 var_101 = 1;
        wp::vec_t<3,wp::float64>* var_102;
        wp::float64 var_103;
        wp::vec_t<3,wp::float64> var_104;
        const wp::int32 var_105 = 2;
        wp::vec_t<3,wp::float64>* var_106;
        wp::float64 var_107;
        wp::vec_t<3,wp::float64> var_108;
        const wp::int32 var_109 = 2;
        wp::vec_t<3,wp::float64>* var_110;
        wp::float64 var_111;
        wp::vec_t<3,wp::float64> var_112;
        const wp::int32 var_113 = 2;
        wp::vec_t<3,wp::float64>* var_114;
        wp::float64 var_115;
        wp::vec_t<3,wp::float64> var_116;
        const wp::int32 var_117 = 2;
        wp::vec_t<3,wp::float64>* var_118;
        wp::float64 var_119;
        wp::vec_t<3,wp::float64> var_120;
        wp::float64 var_121;
        wp::float64 var_122;
        wp::float64 var_123;
        wp::float64 var_124;
        wp::float64 var_125;
        wp::float64 var_126;
        wp::float64 var_127;
        wp::float64 var_128;
        wp::float64 var_129;
        wp::float64 var_130;
        wp::float64 var_131;
        wp::float64 var_132;
        wp::float64 var_133;
        wp::float64 var_134;
        wp::float64 var_135;
        wp::float64 var_136;
        wp::float64 var_137;
        wp::float64 var_138;
        wp::float64 var_139;
        wp::float64 var_140;
        wp::float64 var_141;
        wp::float64 var_142;
        wp::float64 var_143;
        wp::float64 var_144;
        wp::float64 var_145;
        wp::float64 var_146;
        wp::float64 var_147;
        wp::float64 var_148;
        wp::float64 var_149;
        wp::float64 var_150;
        wp::float64 var_151;
        wp::float64 var_152;
        wp::float64 var_153;
        wp::float64 var_154;
        wp::float64 var_155;
        wp::float64 var_156;
        wp::float64 var_157;
        wp::float64 var_158;
        wp::float64 var_159;
        wp::float64 var_160;
        wp::float64 var_161;
        wp::float64 var_162;
        wp::float64 var_163;
        wp::float64 var_164;
        wp::float64 var_165;
        wp::float64 var_166;
        wp::float64 var_167;
        wp::float64 var_168;
        wp::float64 var_169;
        wp::float64 var_170;
        wp::float64 var_171;
        wp::float64 var_172;
        wp::float64 var_173;
        wp::float64 var_174;
        wp::float64 var_175;
        wp::float64 var_176;
        wp::float64 var_177;
        wp::float64 var_178;
        wp::float64 var_179;
        wp::float64 var_180;
        wp::float64 var_181;
        wp::float64 var_182;
        wp::float64 var_183;
        wp::float64 var_184;
        wp::float64 var_185;
        wp::float64 var_186;
        wp::float64 var_187;
        wp::float64 var_188;
        wp::float64 var_189;
        wp::float64 var_190;
        wp::float64 var_191;
        wp::float64 var_192;
        wp::float64 var_193;
        wp::float64 var_194;
        wp::float64 var_195;
        wp::float64 var_196;
        wp::float64 var_197;
        wp::float64 var_198;
        wp::float64 var_199;
        wp::float64 var_200;
        wp::float64 var_201;
        wp::float64 var_202;
        wp::float64 var_203;
        wp::float64 var_204;
        wp::float64 var_205;
        wp::float64 var_206;
        wp::float64 var_207;
        wp::float64 var_208;
        wp::float64 var_209;
        wp::float64 var_210;
        wp::float64 var_211;
        wp::float64 var_212;
        wp::float64 var_213;
        wp::float64 var_214;
        wp::float64 var_215;
        wp::float64 var_216;
        wp::float64 var_217;
        wp::float64 var_218;
        wp::float64 var_219;
        wp::float64 var_220;
        wp::float64 var_221;
        wp::float64 var_222;
        wp::float64 var_223;
        wp::float64 var_224;
        wp::float64 var_225;
        wp::float64 var_226;
        wp::float64 var_227;
        wp::float64 var_228;
        wp::float64 var_229;
        wp::float64 var_230;
        wp::float64 var_231;
        wp::float64 var_232;
        wp::float64 var_233;
        wp::float64 var_234;
        wp::float64 var_235;
        wp::float64 var_236;
        wp::float64 var_237;
        wp::float64 var_238;
        wp::float64 var_239;
        wp::float64 var_240;
        wp::float64 var_241;
        wp::float64 var_242;
        wp::float64 var_243;
        wp::float64 var_244;
        wp::float64 var_245;
        wp::float64 var_246;
        wp::float64 var_247;
        wp::float64 var_248;
        wp::float64 var_249;
        wp::float64 var_250;
        wp::float64 var_251;
        wp::float64 var_252;
        wp::float64 var_253;
        wp::float64 var_254;
        wp::float64 var_255;
        wp::float64 var_256;
        wp::float64 var_257;
        wp::float64 var_258;
        wp::float64 var_259;
        wp::float64 var_260;
        wp::float64 var_261;
        wp::float64 var_262;
        wp::float64 var_263;
        wp::float64 var_264;
        wp::float64 var_265;
        wp::float64 var_266;
        wp::float64 var_267;
        wp::float64 var_268;
        wp::float64 var_269;
        wp::float64 var_270;
        wp::float64 var_271;
        wp::float64 var_272;
        wp::float64 var_273;
        wp::float64 var_274;
        wp::float64 var_275;
        wp::float64 var_276;
        wp::float64 var_277;
        wp::float64 var_278;
        wp::float64 var_279;
        wp::float64 var_280;
        wp::float64 var_281;
        wp::float64 var_282;
        wp::float64 var_283;
        wp::float64 var_284;
        wp::float64 var_285;
        wp::float64 var_286;
        wp::float64 var_287;
        wp::float64 var_288;
        wp::float64 var_289;
        wp::float64 var_290;
        wp::float64 var_291;
        wp::float64 var_292;
        wp::float64 var_293;
        wp::float64 var_294;
        wp::float64 var_295;
        wp::float64 var_296;
        wp::float64 var_297;
        wp::float64 var_298;
        wp::float64 var_299;
        wp::float64 var_300;
        wp::float64 var_301;
        wp::float64 var_302;
        wp::float64 var_303;
        wp::float64 var_304;
        wp::float64 var_305;
        wp::float64 var_306;
        wp::float64 var_307;
        wp::float64 var_308;
        wp::float64 var_309;
        wp::float64 var_310;
        wp::float64 var_311;
        wp::float64 var_312;
        wp::float64 var_313;
        wp::float64 var_314;
        wp::float64 var_315;
        wp::float64 var_316;
        wp::float64 var_317;
        wp::float64 var_318;
        wp::float64 var_319;
        wp::float64 var_320;
        wp::float64 var_321;
        wp::float64 var_322;
        wp::float64 var_323;
        wp::float64 var_324;
        wp::float64 var_325;
        wp::float64 var_326;
        wp::float64 var_327;
        wp::float64 var_328;
        wp::float64 var_329;
        wp::float64 var_330;
        wp::float64 var_331;
        wp::float64 var_332;
        wp::float64 var_333;
        wp::float64 var_334;
        wp::float64 var_335;
        wp::float64 var_336;
        wp::float64 var_337;
        wp::float64 var_338;
        wp::float64 var_339;
        wp::float64 var_340;
        wp::float64 var_341;
        wp::float64 var_342;
        wp::float64 var_343;
        wp::float64 var_344;
        wp::float64 var_345;
        wp::float64 var_346;
        wp::float64 var_347;
        wp::float64 var_348;
        wp::float64 var_349;
        wp::float64 var_350;
        wp::float64 var_351;
        wp::float64 var_352;
        wp::float64 var_353;
        wp::float64 var_354;
        wp::float64 var_355;
        wp::float64 var_356;
        wp::float64 var_357;
        wp::float64 var_358;
        wp::float64 var_359;
        wp::float64 var_360;
        wp::float64 var_361;
        wp::float64 var_362;
        wp::float64 var_363;
        wp::float64 var_364;
        wp::float64 var_365;
        wp::float64 var_366;
        wp::float64 var_367;
        wp::float64 var_368;
        wp::float64 var_369;
        wp::float64 var_370;
        wp::float64 var_371;
        wp::float64 var_372;
        wp::float64 var_373;
        wp::float64 var_374;
        wp::float64 var_375;
        wp::float64 var_376;
        wp::float64 var_377;
        wp::float64 var_378;
        wp::float64 var_379;
        wp::float64 var_380;
        wp::float64 var_381;
        wp::float64 var_382;
        wp::float64 var_383;
        wp::float64 var_384;
        wp::float64 var_385;
        wp::float64 var_386;
        wp::float64 var_387;
        wp::float64 var_388;
        wp::float64 var_389;
        wp::float64 var_390;
        wp::float64 var_391;
        wp::float64 var_392;
        wp::float64 var_393;
        wp::float64 var_394;
        wp::float64 var_395;
        wp::float64 var_396;
        wp::float64 var_397;
        wp::float64 var_398;
        wp::float64 var_399;
        wp::float64 var_400;
        wp::float64 var_401;
        wp::float64 var_402;
        wp::float64 var_403;
        wp::float64 var_404;
        wp::float64 var_405;
        wp::float64 var_406;
        wp::float64 var_407;
        wp::float64 var_408;
        wp::float64 var_409;
        wp::float64 var_410;
        wp::float64 var_411;
        wp::float64 var_412;
        wp::float64 var_413;
        wp::float64 var_414;
        wp::float64 var_415;
        wp::float64 var_416;
        wp::float64 var_417;
        wp::float64 var_418;
        wp::float64 var_419;
        wp::float64 var_420;
        wp::float64 var_421;
        wp::float64 var_422;
        wp::float64 var_423;
        wp::float64 var_424;
        wp::float64 var_425;
        wp::float64 var_426;
        wp::float64 var_427;
        wp::float64 var_428;
        wp::float64 var_429;
        wp::float64 var_430;
        wp::float64 var_431;
        wp::float64 var_432;
        wp::float64 var_433;
        wp::float64 var_434;
        wp::float64 var_435;
        wp::float64 var_436;
        wp::float64 var_437;
        wp::float64 var_438;
        wp::float64 var_439;
        wp::float64 var_440;
        wp::float64 var_441;
        wp::float64 var_442;
        wp::float64 var_443;
        wp::float64 var_444;
        wp::float64 var_445;
        wp::float64 var_446;
        wp::float64 var_447;
        wp::float64 var_448;
        wp::float64 var_449;
        wp::float64 var_450;
        wp::float64 var_451;
        wp::float64 var_452;
        wp::float64 var_453;
        wp::float64 var_454;
        wp::float64 var_455;
        wp::float64 var_456;
        wp::float64 var_457;
        wp::float64 var_458;
        wp::float64 var_459;
        wp::float64 var_460;
        wp::float64 var_461;
        wp::float64 var_462;
        wp::float64 var_463;
        wp::float64 var_464;
        wp::float64 var_465;
        wp::float64 var_466;
        wp::float64 var_467;
        wp::float64 var_468;
        wp::float64 var_469;
        wp::float64 var_470;
        wp::float64 var_471;
        wp::float64 var_472;
        wp::float64 var_473;
        wp::float64 var_474;
        wp::float64 var_475;
        wp::float64 var_476;
        wp::float64 var_477;
        wp::float64 var_478;
        wp::float64 var_479;
        wp::float64 var_480;
        wp::float64 var_481;
        wp::float64 var_482;
        wp::float64 var_483;
        wp::float64 var_484;
        wp::float64 var_485;
        wp::float64 var_486;
        wp::float64 var_487;
        wp::float64 var_488;
        wp::float64 var_489;
        wp::float64 var_490;
        wp::float64 var_491;
        wp::float64 var_492;
        wp::float64 var_493;
        wp::float64 var_494;
        wp::float64 var_495;
        wp::float64 var_496;
        wp::float64 var_497;
        wp::float64 var_498;
        wp::float64 var_499;
        wp::float64 var_500;
        wp::float64 var_501;
        wp::float64 var_502;
        wp::float64 var_503;
        wp::float64 var_504;
        wp::float64 var_505;
        wp::float64 var_506;
        wp::float64 var_507;
        wp::float64 var_508;
        wp::float64 var_509;
        wp::float64 var_510;
        wp::float64 var_511;
        wp::float64 var_512;
        wp::float64 var_513;
        wp::float64 var_514;
        wp::float64 var_515;
        wp::float64 var_516;
        wp::float64 var_517;
        wp::float64 var_518;
        wp::float64 var_519;
        wp::float64 var_520;
        wp::float64 var_521;
        wp::float64 var_522;
        wp::float64 var_523;
        wp::float64 var_524;
        wp::float64 var_525;
        wp::float64 var_526;
        wp::float64 var_527;
        wp::float64 var_528;
        wp::float64 var_529;
        wp::float64 var_530;
        wp::float64 var_531;
        wp::float64 var_532;
        wp::float64 var_533;
        wp::float64 var_534;
        wp::float64 var_535;
        wp::float64 var_536;
        wp::float64 var_537;
        wp::float64 var_538;
        wp::float64 var_539;
        wp::float64 var_540;
        wp::float64 var_541;
        wp::float64 var_542;
        wp::float64 var_543;
        wp::float64 var_544;
        wp::float64 var_545;
        wp::float64 var_546;
        wp::float64 var_547;
        wp::float64 var_548;
        wp::float64 var_549;
        wp::float64 var_550;
        wp::float64 var_551;
        wp::float64 var_552;
        wp::float64 var_553;
        wp::float64 var_554;
        wp::float64 var_555;
        wp::float64 var_556;
        wp::float64 var_557;
        wp::float64 var_558;
        wp::float64 var_559;
        wp::float64 var_560;
        wp::float64 var_561;
        wp::float64 var_562;
        wp::float64 var_563;
        wp::float64 var_564;
        wp::float64 var_565;
        wp::float64 var_566;
        wp::float64 var_567;
        wp::float64 var_568;
        wp::float64 var_569;
        wp::float64 var_570;
        wp::float64 var_571;
        wp::float64 var_572;
        wp::float64 var_573;
        wp::float64 var_574;
        wp::float64 var_575;
        wp::float64 var_576;
        wp::float64 var_577;
        wp::float64 var_578;
        wp::float64 var_579;
        wp::float64 var_580;
        wp::float64 var_581;
        wp::float64 var_582;
        wp::float64 var_583;
        wp::float64 var_584;
        wp::float64 var_585;
        wp::float64 var_586;
        wp::float64 var_587;
        wp::float64 var_588;
        wp::float64 var_589;
        wp::float64 var_590;
        wp::float64 var_591;
        wp::float64 var_592;
        wp::float64 var_593;
        wp::float64 var_594;
        wp::float64 var_595;
        wp::float64 var_596;
        wp::float64 var_597;
        wp::float64 var_598;
        wp::float64 var_599;
        wp::float64 var_600;
        wp::float64 var_601;
        wp::float64 var_602;
        wp::float64 var_603;
        wp::float64 var_604;
        wp::float64 var_605;
        wp::float64 var_606;
        wp::float64 var_607;
        wp::float64 var_608;
        wp::float64 var_609;
        wp::float64 var_610;
        wp::float64 var_611;
        wp::float64 var_612;
        wp::float64 var_613;
        wp::float64 var_614;
        wp::float64 var_615;
        wp::float64 var_616;
        wp::float64 var_617;
        wp::float64 var_618;
        wp::float64 var_619;
        wp::float64 var_620;
        wp::float64 var_621;
        wp::float64 var_622;
        wp::float64 var_623;
        wp::float64 var_624;
        const wp::float32 var_625 = 1.0;
        const wp::float32 var_626 = 0.2;
        wp::float32 var_627;
        wp::float64 var_628;
        wp::float64 var_629;
        wp::float64 var_630;
        wp::float64 var_631;
        wp::float64 var_632;
        wp::float64 var_633;
        wp::float64 var_634;
        wp::float64 var_635;
        wp::float64 var_636;
        wp::float64 var_637;
        wp::float64 var_638;
        wp::float64 var_639;
        wp::float64 var_640;
        wp::float64 var_641;
        wp::float64 var_642;
        wp::float64 var_643;
        wp::float64 var_644;
        wp::float64 var_645;
        wp::float64 var_646;
        wp::float64 var_647;
        wp::float64 var_648;
        wp::float64 var_649;
        wp::float64 var_650;
        wp::float64 var_651;
        wp::float64 var_652;
        wp::float64 var_653;
        wp::float64 var_654;
        wp::float64 var_655;
        wp::float64 var_656;
        wp::float64 var_657;
        wp::float64 var_658;
        wp::float64 var_659;
        wp::float64 var_660;
        wp::float64 var_661;
        wp::float64 var_662;
        wp::float64 var_663;
        wp::float64 var_664;
        wp::float64 var_665;
        wp::float64 var_666;
        wp::float64 var_667;
        wp::float64 var_668;
        wp::float64 var_669;
        wp::float64 var_670;
        wp::float64 var_671;
        wp::float64 var_672;
        wp::float64 var_673;
        wp::float64 var_674;
        wp::float64 var_675;
        wp::float64 var_676;
        wp::float64 var_677;
        wp::float64 var_678;
        wp::float64 var_679;
        wp::float64 var_680;
        wp::float64 var_681;
        wp::float64 var_682;
        wp::float64 var_683;
        wp::float64 var_684;
        wp::float64 var_685;
        wp::float64 var_686;
        wp::float64 var_687;
        wp::float64 var_688;
        wp::float64 var_689;
        wp::float64 var_690;
        wp::float64 var_691;
        wp::float64 var_692;
        wp::float64 var_693;
        wp::float64 var_694;
        wp::float64 var_695;
        wp::float64 var_696;
        wp::float64 var_697;
        wp::float64 var_698;
        wp::float64 var_699;
        wp::float64 var_700;
        wp::float64 var_701;
        const wp::float64 var_702 = 0.0;
        bool var_703;
        const wp::float64 var_704 = 1.0;
        bool var_705;
        bool var_706;
        wp::float64 var_707;
        wp::float64 var_708;
        const wp::float32 var_709 = 0.001;
        wp::float64 var_710;
        bool var_711;
        const wp::float32 var_712 = 10000000000.0;
        wp::float64 var_713;
        const wp::str var_714 = "toi: %lf, a: %lf, b: %lf, c: %lf, d: %lf\n";
        wp::float64 var_715;
        wp::float64 var_716;
        wp::float64 var_717;
        wp::float64 var_718;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        wp::int32 adj_3 = {};
        wp::int32 adj_4 = {};
        bool adj_5 = {};
        wp::int32 adj_6 = {};
        wp::int32 adj_7 = {};
        wp::int32 adj_8 = {};
        wp::int32 adj_9 = {};
        wp::int32 adj_10 = {};
        bool adj_11 = {};
        wp::int32 adj_12 = {};
        bool adj_13 = {};
        wp::vec_t<4,wp::int32> adj_14 = {};
        wp::vec_t<4,wp::int32> adj_15 = {};
        wp::vec_t<4,wp::int32> adj_16 = {};
        wp::int32 adj_17 = {};
        wp::int32 adj_18 = {};
        wp::int32 adj_19 = {};
        wp::int32 adj_20 = {};
        wp::int32 adj_21 = {};
        wp::int32 adj_22 = {};
        wp::int32 adj_23 = {};
        wp::int32 adj_24 = {};
        wp::int32 adj_25 = {};
        wp::vec_t<3,wp::float64> adj_26 = {};
        wp::float64 adj_27 = {};
        wp::vec_t<3,wp::float64> adj_28 = {};
        wp::int32 adj_29 = {};
        wp::vec_t<3,wp::float64> adj_30 = {};
        wp::float64 adj_31 = {};
        wp::vec_t<3,wp::float64> adj_32 = {};
        wp::int32 adj_33 = {};
        wp::vec_t<3,wp::float64> adj_34 = {};
        wp::float64 adj_35 = {};
        wp::vec_t<3,wp::float64> adj_36 = {};
        wp::int32 adj_37 = {};
        wp::vec_t<3,wp::float64> adj_38 = {};
        wp::float64 adj_39 = {};
        wp::vec_t<3,wp::float64> adj_40 = {};
        wp::int32 adj_41 = {};
        wp::vec_t<3,wp::float64> adj_42 = {};
        wp::float64 adj_43 = {};
        wp::vec_t<3,wp::float64> adj_44 = {};
        wp::int32 adj_45 = {};
        wp::vec_t<3,wp::float64> adj_46 = {};
        wp::float64 adj_47 = {};
        wp::vec_t<3,wp::float64> adj_48 = {};
        wp::int32 adj_49 = {};
        wp::vec_t<3,wp::float64> adj_50 = {};
        wp::float64 adj_51 = {};
        wp::vec_t<3,wp::float64> adj_52 = {};
        wp::int32 adj_53 = {};
        wp::vec_t<3,wp::float64> adj_54 = {};
        wp::float64 adj_55 = {};
        wp::vec_t<3,wp::float64> adj_56 = {};
        wp::int32 adj_57 = {};
        wp::vec_t<3,wp::float64> adj_58 = {};
        wp::float64 adj_59 = {};
        wp::vec_t<3,wp::float64> adj_60 = {};
        wp::int32 adj_61 = {};
        wp::vec_t<3,wp::float64> adj_62 = {};
        wp::float64 adj_63 = {};
        wp::vec_t<3,wp::float64> adj_64 = {};
        wp::int32 adj_65 = {};
        wp::vec_t<3,wp::float64> adj_66 = {};
        wp::float64 adj_67 = {};
        wp::vec_t<3,wp::float64> adj_68 = {};
        wp::int32 adj_69 = {};
        wp::vec_t<3,wp::float64> adj_70 = {};
        wp::float64 adj_71 = {};
        wp::vec_t<3,wp::float64> adj_72 = {};
        wp::int32 adj_73 = {};
        wp::vec_t<3,wp::float64> adj_74 = {};
        wp::float64 adj_75 = {};
        wp::vec_t<3,wp::float64> adj_76 = {};
        wp::int32 adj_77 = {};
        wp::vec_t<3,wp::float64> adj_78 = {};
        wp::float64 adj_79 = {};
        wp::vec_t<3,wp::float64> adj_80 = {};
        wp::int32 adj_81 = {};
        wp::vec_t<3,wp::float64> adj_82 = {};
        wp::float64 adj_83 = {};
        wp::vec_t<3,wp::float64> adj_84 = {};
        wp::int32 adj_85 = {};
        wp::vec_t<3,wp::float64> adj_86 = {};
        wp::float64 adj_87 = {};
        wp::vec_t<3,wp::float64> adj_88 = {};
        wp::int32 adj_89 = {};
        wp::vec_t<3,wp::float64> adj_90 = {};
        wp::float64 adj_91 = {};
        wp::vec_t<3,wp::float64> adj_92 = {};
        wp::int32 adj_93 = {};
        wp::vec_t<3,wp::float64> adj_94 = {};
        wp::float64 adj_95 = {};
        wp::vec_t<3,wp::float64> adj_96 = {};
        wp::int32 adj_97 = {};
        wp::vec_t<3,wp::float64> adj_98 = {};
        wp::float64 adj_99 = {};
        wp::vec_t<3,wp::float64> adj_100 = {};
        wp::int32 adj_101 = {};
        wp::vec_t<3,wp::float64> adj_102 = {};
        wp::float64 adj_103 = {};
        wp::vec_t<3,wp::float64> adj_104 = {};
        wp::int32 adj_105 = {};
        wp::vec_t<3,wp::float64> adj_106 = {};
        wp::float64 adj_107 = {};
        wp::vec_t<3,wp::float64> adj_108 = {};
        wp::int32 adj_109 = {};
        wp::vec_t<3,wp::float64> adj_110 = {};
        wp::float64 adj_111 = {};
        wp::vec_t<3,wp::float64> adj_112 = {};
        wp::int32 adj_113 = {};
        wp::vec_t<3,wp::float64> adj_114 = {};
        wp::float64 adj_115 = {};
        wp::vec_t<3,wp::float64> adj_116 = {};
        wp::int32 adj_117 = {};
        wp::vec_t<3,wp::float64> adj_118 = {};
        wp::float64 adj_119 = {};
        wp::vec_t<3,wp::float64> adj_120 = {};
        wp::float64 adj_121 = {};
        wp::float64 adj_122 = {};
        wp::float64 adj_123 = {};
        wp::float64 adj_124 = {};
        wp::float64 adj_125 = {};
        wp::float64 adj_126 = {};
        wp::float64 adj_127 = {};
        wp::float64 adj_128 = {};
        wp::float64 adj_129 = {};
        wp::float64 adj_130 = {};
        wp::float64 adj_131 = {};
        wp::float64 adj_132 = {};
        wp::float64 adj_133 = {};
        wp::float64 adj_134 = {};
        wp::float64 adj_135 = {};
        wp::float64 adj_136 = {};
        wp::float64 adj_137 = {};
        wp::float64 adj_138 = {};
        wp::float64 adj_139 = {};
        wp::float64 adj_140 = {};
        wp::float64 adj_141 = {};
        wp::float64 adj_142 = {};
        wp::float64 adj_143 = {};
        wp::float64 adj_144 = {};
        wp::float64 adj_145 = {};
        wp::float64 adj_146 = {};
        wp::float64 adj_147 = {};
        wp::float64 adj_148 = {};
        wp::float64 adj_149 = {};
        wp::float64 adj_150 = {};
        wp::float64 adj_151 = {};
        wp::float64 adj_152 = {};
        wp::float64 adj_153 = {};
        wp::float64 adj_154 = {};
        wp::float64 adj_155 = {};
        wp::float64 adj_156 = {};
        wp::float64 adj_157 = {};
        wp::float64 adj_158 = {};
        wp::float64 adj_159 = {};
        wp::float64 adj_160 = {};
        wp::float64 adj_161 = {};
        wp::float64 adj_162 = {};
        wp::float64 adj_163 = {};
        wp::float64 adj_164 = {};
        wp::float64 adj_165 = {};
        wp::float64 adj_166 = {};
        wp::float64 adj_167 = {};
        wp::float64 adj_168 = {};
        wp::float64 adj_169 = {};
        wp::float64 adj_170 = {};
        wp::float64 adj_171 = {};
        wp::float64 adj_172 = {};
        wp::float64 adj_173 = {};
        wp::float64 adj_174 = {};
        wp::float64 adj_175 = {};
        wp::float64 adj_176 = {};
        wp::float64 adj_177 = {};
        wp::float64 adj_178 = {};
        wp::float64 adj_179 = {};
        wp::float64 adj_180 = {};
        wp::float64 adj_181 = {};
        wp::float64 adj_182 = {};
        wp::float64 adj_183 = {};
        wp::float64 adj_184 = {};
        wp::float64 adj_185 = {};
        wp::float64 adj_186 = {};
        wp::float64 adj_187 = {};
        wp::float64 adj_188 = {};
        wp::float64 adj_189 = {};
        wp::float64 adj_190 = {};
        wp::float64 adj_191 = {};
        wp::float64 adj_192 = {};
        wp::float64 adj_193 = {};
        wp::float64 adj_194 = {};
        wp::float64 adj_195 = {};
        wp::float64 adj_196 = {};
        wp::float64 adj_197 = {};
        wp::float64 adj_198 = {};
        wp::float64 adj_199 = {};
        wp::float64 adj_200 = {};
        wp::float64 adj_201 = {};
        wp::float64 adj_202 = {};
        wp::float64 adj_203 = {};
        wp::float64 adj_204 = {};
        wp::float64 adj_205 = {};
        wp::float64 adj_206 = {};
        wp::float64 adj_207 = {};
        wp::float64 adj_208 = {};
        wp::float64 adj_209 = {};
        wp::float64 adj_210 = {};
        wp::float64 adj_211 = {};
        wp::float64 adj_212 = {};
        wp::float64 adj_213 = {};
        wp::float64 adj_214 = {};
        wp::float64 adj_215 = {};
        wp::float64 adj_216 = {};
        wp::float64 adj_217 = {};
        wp::float64 adj_218 = {};
        wp::float64 adj_219 = {};
        wp::float64 adj_220 = {};
        wp::float64 adj_221 = {};
        wp::float64 adj_222 = {};
        wp::float64 adj_223 = {};
        wp::float64 adj_224 = {};
        wp::float64 adj_225 = {};
        wp::float64 adj_226 = {};
        wp::float64 adj_227 = {};
        wp::float64 adj_228 = {};
        wp::float64 adj_229 = {};
        wp::float64 adj_230 = {};
        wp::float64 adj_231 = {};
        wp::float64 adj_232 = {};
        wp::float64 adj_233 = {};
        wp::float64 adj_234 = {};
        wp::float64 adj_235 = {};
        wp::float64 adj_236 = {};
        wp::float64 adj_237 = {};
        wp::float64 adj_238 = {};
        wp::float64 adj_239 = {};
        wp::float64 adj_240 = {};
        wp::float64 adj_241 = {};
        wp::float64 adj_242 = {};
        wp::float64 adj_243 = {};
        wp::float64 adj_244 = {};
        wp::float64 adj_245 = {};
        wp::float64 adj_246 = {};
        wp::float64 adj_247 = {};
        wp::float64 adj_248 = {};
        wp::float64 adj_249 = {};
        wp::float64 adj_250 = {};
        wp::float64 adj_251 = {};
        wp::float64 adj_252 = {};
        wp::float64 adj_253 = {};
        wp::float64 adj_254 = {};
        wp::float64 adj_255 = {};
        wp::float64 adj_256 = {};
        wp::float64 adj_257 = {};
        wp::float64 adj_258 = {};
        wp::float64 adj_259 = {};
        wp::float64 adj_260 = {};
        wp::float64 adj_261 = {};
        wp::float64 adj_262 = {};
        wp::float64 adj_263 = {};
        wp::float64 adj_264 = {};
        wp::float64 adj_265 = {};
        wp::float64 adj_266 = {};
        wp::float64 adj_267 = {};
        wp::float64 adj_268 = {};
        wp::float64 adj_269 = {};
        wp::float64 adj_270 = {};
        wp::float64 adj_271 = {};
        wp::float64 adj_272 = {};
        wp::float64 adj_273 = {};
        wp::float64 adj_274 = {};
        wp::float64 adj_275 = {};
        wp::float64 adj_276 = {};
        wp::float64 adj_277 = {};
        wp::float64 adj_278 = {};
        wp::float64 adj_279 = {};
        wp::float64 adj_280 = {};
        wp::float64 adj_281 = {};
        wp::float64 adj_282 = {};
        wp::float64 adj_283 = {};
        wp::float64 adj_284 = {};
        wp::float64 adj_285 = {};
        wp::float64 adj_286 = {};
        wp::float64 adj_287 = {};
        wp::float64 adj_288 = {};
        wp::float64 adj_289 = {};
        wp::float64 adj_290 = {};
        wp::float64 adj_291 = {};
        wp::float64 adj_292 = {};
        wp::float64 adj_293 = {};
        wp::float64 adj_294 = {};
        wp::float64 adj_295 = {};
        wp::float64 adj_296 = {};
        wp::float64 adj_297 = {};
        wp::float64 adj_298 = {};
        wp::float64 adj_299 = {};
        wp::float64 adj_300 = {};
        wp::float64 adj_301 = {};
        wp::float64 adj_302 = {};
        wp::float64 adj_303 = {};
        wp::float64 adj_304 = {};
        wp::float64 adj_305 = {};
        wp::float64 adj_306 = {};
        wp::float64 adj_307 = {};
        wp::float64 adj_308 = {};
        wp::float64 adj_309 = {};
        wp::float64 adj_310 = {};
        wp::float64 adj_311 = {};
        wp::float64 adj_312 = {};
        wp::float64 adj_313 = {};
        wp::float64 adj_314 = {};
        wp::float64 adj_315 = {};
        wp::float64 adj_316 = {};
        wp::float64 adj_317 = {};
        wp::float64 adj_318 = {};
        wp::float64 adj_319 = {};
        wp::float64 adj_320 = {};
        wp::float64 adj_321 = {};
        wp::float64 adj_322 = {};
        wp::float64 adj_323 = {};
        wp::float64 adj_324 = {};
        wp::float64 adj_325 = {};
        wp::float64 adj_326 = {};
        wp::float64 adj_327 = {};
        wp::float64 adj_328 = {};
        wp::float64 adj_329 = {};
        wp::float64 adj_330 = {};
        wp::float64 adj_331 = {};
        wp::float64 adj_332 = {};
        wp::float64 adj_333 = {};
        wp::float64 adj_334 = {};
        wp::float64 adj_335 = {};
        wp::float64 adj_336 = {};
        wp::float64 adj_337 = {};
        wp::float64 adj_338 = {};
        wp::float64 adj_339 = {};
        wp::float64 adj_340 = {};
        wp::float64 adj_341 = {};
        wp::float64 adj_342 = {};
        wp::float64 adj_343 = {};
        wp::float64 adj_344 = {};
        wp::float64 adj_345 = {};
        wp::float64 adj_346 = {};
        wp::float64 adj_347 = {};
        wp::float64 adj_348 = {};
        wp::float64 adj_349 = {};
        wp::float64 adj_350 = {};
        wp::float64 adj_351 = {};
        wp::float64 adj_352 = {};
        wp::float64 adj_353 = {};
        wp::float64 adj_354 = {};
        wp::float64 adj_355 = {};
        wp::float64 adj_356 = {};
        wp::float64 adj_357 = {};
        wp::float64 adj_358 = {};
        wp::float64 adj_359 = {};
        wp::float64 adj_360 = {};
        wp::float64 adj_361 = {};
        wp::float64 adj_362 = {};
        wp::float64 adj_363 = {};
        wp::float64 adj_364 = {};
        wp::float64 adj_365 = {};
        wp::float64 adj_366 = {};
        wp::float64 adj_367 = {};
        wp::float64 adj_368 = {};
        wp::float64 adj_369 = {};
        wp::float64 adj_370 = {};
        wp::float64 adj_371 = {};
        wp::float64 adj_372 = {};
        wp::float64 adj_373 = {};
        wp::float64 adj_374 = {};
        wp::float64 adj_375 = {};
        wp::float64 adj_376 = {};
        wp::float64 adj_377 = {};
        wp::float64 adj_378 = {};
        wp::float64 adj_379 = {};
        wp::float64 adj_380 = {};
        wp::float64 adj_381 = {};
        wp::float64 adj_382 = {};
        wp::float64 adj_383 = {};
        wp::float64 adj_384 = {};
        wp::float64 adj_385 = {};
        wp::float64 adj_386 = {};
        wp::float64 adj_387 = {};
        wp::float64 adj_388 = {};
        wp::float64 adj_389 = {};
        wp::float64 adj_390 = {};
        wp::float64 adj_391 = {};
        wp::float64 adj_392 = {};
        wp::float64 adj_393 = {};
        wp::float64 adj_394 = {};
        wp::float64 adj_395 = {};
        wp::float64 adj_396 = {};
        wp::float64 adj_397 = {};
        wp::float64 adj_398 = {};
        wp::float64 adj_399 = {};
        wp::float64 adj_400 = {};
        wp::float64 adj_401 = {};
        wp::float64 adj_402 = {};
        wp::float64 adj_403 = {};
        wp::float64 adj_404 = {};
        wp::float64 adj_405 = {};
        wp::float64 adj_406 = {};
        wp::float64 adj_407 = {};
        wp::float64 adj_408 = {};
        wp::float64 adj_409 = {};
        wp::float64 adj_410 = {};
        wp::float64 adj_411 = {};
        wp::float64 adj_412 = {};
        wp::float64 adj_413 = {};
        wp::float64 adj_414 = {};
        wp::float64 adj_415 = {};
        wp::float64 adj_416 = {};
        wp::float64 adj_417 = {};
        wp::float64 adj_418 = {};
        wp::float64 adj_419 = {};
        wp::float64 adj_420 = {};
        wp::float64 adj_421 = {};
        wp::float64 adj_422 = {};
        wp::float64 adj_423 = {};
        wp::float64 adj_424 = {};
        wp::float64 adj_425 = {};
        wp::float64 adj_426 = {};
        wp::float64 adj_427 = {};
        wp::float64 adj_428 = {};
        wp::float64 adj_429 = {};
        wp::float64 adj_430 = {};
        wp::float64 adj_431 = {};
        wp::float64 adj_432 = {};
        wp::float64 adj_433 = {};
        wp::float64 adj_434 = {};
        wp::float64 adj_435 = {};
        wp::float64 adj_436 = {};
        wp::float64 adj_437 = {};
        wp::float64 adj_438 = {};
        wp::float64 adj_439 = {};
        wp::float64 adj_440 = {};
        wp::float64 adj_441 = {};
        wp::float64 adj_442 = {};
        wp::float64 adj_443 = {};
        wp::float64 adj_444 = {};
        wp::float64 adj_445 = {};
        wp::float64 adj_446 = {};
        wp::float64 adj_447 = {};
        wp::float64 adj_448 = {};
        wp::float64 adj_449 = {};
        wp::float64 adj_450 = {};
        wp::float64 adj_451 = {};
        wp::float64 adj_452 = {};
        wp::float64 adj_453 = {};
        wp::float64 adj_454 = {};
        wp::float64 adj_455 = {};
        wp::float64 adj_456 = {};
        wp::float64 adj_457 = {};
        wp::float64 adj_458 = {};
        wp::float64 adj_459 = {};
        wp::float64 adj_460 = {};
        wp::float64 adj_461 = {};
        wp::float64 adj_462 = {};
        wp::float64 adj_463 = {};
        wp::float64 adj_464 = {};
        wp::float64 adj_465 = {};
        wp::float64 adj_466 = {};
        wp::float64 adj_467 = {};
        wp::float64 adj_468 = {};
        wp::float64 adj_469 = {};
        wp::float64 adj_470 = {};
        wp::float64 adj_471 = {};
        wp::float64 adj_472 = {};
        wp::float64 adj_473 = {};
        wp::float64 adj_474 = {};
        wp::float64 adj_475 = {};
        wp::float64 adj_476 = {};
        wp::float64 adj_477 = {};
        wp::float64 adj_478 = {};
        wp::float64 adj_479 = {};
        wp::float64 adj_480 = {};
        wp::float64 adj_481 = {};
        wp::float64 adj_482 = {};
        wp::float64 adj_483 = {};
        wp::float64 adj_484 = {};
        wp::float64 adj_485 = {};
        wp::float64 adj_486 = {};
        wp::float64 adj_487 = {};
        wp::float64 adj_488 = {};
        wp::float64 adj_489 = {};
        wp::float64 adj_490 = {};
        wp::float64 adj_491 = {};
        wp::float64 adj_492 = {};
        wp::float64 adj_493 = {};
        wp::float64 adj_494 = {};
        wp::float64 adj_495 = {};
        wp::float64 adj_496 = {};
        wp::float64 adj_497 = {};
        wp::float64 adj_498 = {};
        wp::float64 adj_499 = {};
        wp::float64 adj_500 = {};
        wp::float64 adj_501 = {};
        wp::float64 adj_502 = {};
        wp::float64 adj_503 = {};
        wp::float64 adj_504 = {};
        wp::float64 adj_505 = {};
        wp::float64 adj_506 = {};
        wp::float64 adj_507 = {};
        wp::float64 adj_508 = {};
        wp::float64 adj_509 = {};
        wp::float64 adj_510 = {};
        wp::float64 adj_511 = {};
        wp::float64 adj_512 = {};
        wp::float64 adj_513 = {};
        wp::float64 adj_514 = {};
        wp::float64 adj_515 = {};
        wp::float64 adj_516 = {};
        wp::float64 adj_517 = {};
        wp::float64 adj_518 = {};
        wp::float64 adj_519 = {};
        wp::float64 adj_520 = {};
        wp::float64 adj_521 = {};
        wp::float64 adj_522 = {};
        wp::float64 adj_523 = {};
        wp::float64 adj_524 = {};
        wp::float64 adj_525 = {};
        wp::float64 adj_526 = {};
        wp::float64 adj_527 = {};
        wp::float64 adj_528 = {};
        wp::float64 adj_529 = {};
        wp::float64 adj_530 = {};
        wp::float64 adj_531 = {};
        wp::float64 adj_532 = {};
        wp::float64 adj_533 = {};
        wp::float64 adj_534 = {};
        wp::float64 adj_535 = {};
        wp::float64 adj_536 = {};
        wp::float64 adj_537 = {};
        wp::float64 adj_538 = {};
        wp::float64 adj_539 = {};
        wp::float64 adj_540 = {};
        wp::float64 adj_541 = {};
        wp::float64 adj_542 = {};
        wp::float64 adj_543 = {};
        wp::float64 adj_544 = {};
        wp::float64 adj_545 = {};
        wp::float64 adj_546 = {};
        wp::float64 adj_547 = {};
        wp::float64 adj_548 = {};
        wp::float64 adj_549 = {};
        wp::float64 adj_550 = {};
        wp::float64 adj_551 = {};
        wp::float64 adj_552 = {};
        wp::float64 adj_553 = {};
        wp::float64 adj_554 = {};
        wp::float64 adj_555 = {};
        wp::float64 adj_556 = {};
        wp::float64 adj_557 = {};
        wp::float64 adj_558 = {};
        wp::float64 adj_559 = {};
        wp::float64 adj_560 = {};
        wp::float64 adj_561 = {};
        wp::float64 adj_562 = {};
        wp::float64 adj_563 = {};
        wp::float64 adj_564 = {};
        wp::float64 adj_565 = {};
        wp::float64 adj_566 = {};
        wp::float64 adj_567 = {};
        wp::float64 adj_568 = {};
        wp::float64 adj_569 = {};
        wp::float64 adj_570 = {};
        wp::float64 adj_571 = {};
        wp::float64 adj_572 = {};
        wp::float64 adj_573 = {};
        wp::float64 adj_574 = {};
        wp::float64 adj_575 = {};
        wp::float64 adj_576 = {};
        wp::float64 adj_577 = {};
        wp::float64 adj_578 = {};
        wp::float64 adj_579 = {};
        wp::float64 adj_580 = {};
        wp::float64 adj_581 = {};
        wp::float64 adj_582 = {};
        wp::float64 adj_583 = {};
        wp::float64 adj_584 = {};
        wp::float64 adj_585 = {};
        wp::float64 adj_586 = {};
        wp::float64 adj_587 = {};
        wp::float64 adj_588 = {};
        wp::float64 adj_589 = {};
        wp::float64 adj_590 = {};
        wp::float64 adj_591 = {};
        wp::float64 adj_592 = {};
        wp::float64 adj_593 = {};
        wp::float64 adj_594 = {};
        wp::float64 adj_595 = {};
        wp::float64 adj_596 = {};
        wp::float64 adj_597 = {};
        wp::float64 adj_598 = {};
        wp::float64 adj_599 = {};
        wp::float64 adj_600 = {};
        wp::float64 adj_601 = {};
        wp::float64 adj_602 = {};
        wp::float64 adj_603 = {};
        wp::float64 adj_604 = {};
        wp::float64 adj_605 = {};
        wp::float64 adj_606 = {};
        wp::float64 adj_607 = {};
        wp::float64 adj_608 = {};
        wp::float64 adj_609 = {};
        wp::float64 adj_610 = {};
        wp::float64 adj_611 = {};
        wp::float64 adj_612 = {};
        wp::float64 adj_613 = {};
        wp::float64 adj_614 = {};
        wp::float64 adj_615 = {};
        wp::float64 adj_616 = {};
        wp::float64 adj_617 = {};
        wp::float64 adj_618 = {};
        wp::float64 adj_619 = {};
        wp::float64 adj_620 = {};
        wp::float64 adj_621 = {};
        wp::float64 adj_622 = {};
        wp::float64 adj_623 = {};
        wp::float64 adj_624 = {};
        wp::float32 adj_625 = {};
        wp::float32 adj_626 = {};
        wp::float32 adj_627 = {};
        wp::float64 adj_628 = {};
        wp::float64 adj_629 = {};
        wp::float64 adj_630 = {};
        wp::float64 adj_631 = {};
        wp::float64 adj_632 = {};
        wp::float64 adj_633 = {};
        wp::float64 adj_634 = {};
        wp::float64 adj_635 = {};
        wp::float64 adj_636 = {};
        wp::float64 adj_637 = {};
        wp::float64 adj_638 = {};
        wp::float64 adj_639 = {};
        wp::float64 adj_640 = {};
        wp::float64 adj_641 = {};
        wp::float64 adj_642 = {};
        wp::float64 adj_643 = {};
        wp::float64 adj_644 = {};
        wp::float64 adj_645 = {};
        wp::float64 adj_646 = {};
        wp::float64 adj_647 = {};
        wp::float64 adj_648 = {};
        wp::float64 adj_649 = {};
        wp::float64 adj_650 = {};
        wp::float64 adj_651 = {};
        wp::float64 adj_652 = {};
        wp::float64 adj_653 = {};
        wp::float64 adj_654 = {};
        wp::float64 adj_655 = {};
        wp::float64 adj_656 = {};
        wp::float64 adj_657 = {};
        wp::float64 adj_658 = {};
        wp::float64 adj_659 = {};
        wp::float64 adj_660 = {};
        wp::float64 adj_661 = {};
        wp::float64 adj_662 = {};
        wp::float64 adj_663 = {};
        wp::float64 adj_664 = {};
        wp::float64 adj_665 = {};
        wp::float64 adj_666 = {};
        wp::float64 adj_667 = {};
        wp::float64 adj_668 = {};
        wp::float64 adj_669 = {};
        wp::float64 adj_670 = {};
        wp::float64 adj_671 = {};
        wp::float64 adj_672 = {};
        wp::float64 adj_673 = {};
        wp::float64 adj_674 = {};
        wp::float64 adj_675 = {};
        wp::float64 adj_676 = {};
        wp::float64 adj_677 = {};
        wp::float64 adj_678 = {};
        wp::float64 adj_679 = {};
        wp::float64 adj_680 = {};
        wp::float64 adj_681 = {};
        wp::float64 adj_682 = {};
        wp::float64 adj_683 = {};
        wp::float64 adj_684 = {};
        wp::float64 adj_685 = {};
        wp::float64 adj_686 = {};
        wp::float64 adj_687 = {};
        wp::float64 adj_688 = {};
        wp::float64 adj_689 = {};
        wp::float64 adj_690 = {};
        wp::float64 adj_691 = {};
        wp::float64 adj_692 = {};
        wp::float64 adj_693 = {};
        wp::float64 adj_694 = {};
        wp::float64 adj_695 = {};
        wp::float64 adj_696 = {};
        wp::float64 adj_697 = {};
        wp::float64 adj_698 = {};
        wp::float64 adj_699 = {};
        wp::float64 adj_700 = {};
        wp::float64 adj_701 = {};
        wp::float64 adj_702 = {};
        bool adj_703 = {};
        wp::float64 adj_704 = {};
        bool adj_705 = {};
        bool adj_706 = {};
        wp::float64 adj_707 = {};
        wp::float64 adj_708 = {};
        wp::float32 adj_709 = {};
        wp::float64 adj_710 = {};
        bool adj_711 = {};
        wp::float32 adj_712 = {};
        wp::float64 adj_713 = {};
        wp::str adj_714 = {};
        wp::float64 adj_715 = {};
        wp::float64 adj_716 = {};
        wp::float64 adj_717 = {};
        wp::float64 adj_718 = {};
        //---------
        // forward
        // def init_step_size_inversion_free_kernel(                                              <L 217>
        // tid = wp.tid()                                                                         <L 229>
        var_0 = builtin_tid1d();
        // if env_states[tet_envs[tid]] == ENV_STATE_INVALID or env_states[tet_envs[tid]] == ENV_STATE_NEWTON_SOLVED:       <L 230>
        var_1 = wp::address(var_tet_envs, var_0);
        var_3 = wp::load(var_1);
        var_2 = wp::address(var_env_states, var_3);
        var_6 = wp::load(var_2);
        var_5 = (var_6 == var_4);
        var_7 = wp::address(var_tet_envs, var_0);
        var_9 = wp::load(var_7);
        var_8 = wp::address(var_env_states, var_9);
        var_12 = wp::load(var_8);
        var_11 = (var_12 == var_10);
        var_13 = var_5 || var_11;
        if (var_13) {
            // return                                                                             <L 231>
            goto label0;
        }
        // tet_vinds = tet_elems[tid]                                                             <L 232>
        var_14 = wp::address(var_tet_elems, var_0);
        var_16 = wp::load(var_14);
        var_15 = wp::copy(var_16);
        // i1 = tet_vinds[0]                                                                      <L 233>
        var_18 = wp::extract(var_15, var_17);
        // i2 = tet_vinds[1]                                                                      <L 234>
        var_20 = wp::extract(var_15, var_19);
        // i3 = tet_vinds[2]                                                                      <L 235>
        var_22 = wp::extract(var_15, var_21);
        // i4 = tet_vinds[3]                                                                      <L 236>
        var_24 = wp::extract(var_15, var_23);
        // x1 = x[i1][0]                                                                          <L 237>
        var_26 = wp::address(var_x, var_18);
        var_28 = wp::load(var_26);
        var_27 = wp::extract(var_28, var_25);
        // x2 = x[i2][0]                                                                          <L 238>
        var_30 = wp::address(var_x, var_20);
        var_32 = wp::load(var_30);
        var_31 = wp::extract(var_32, var_29);
        // x3 = x[i3][0]                                                                          <L 239>
        var_34 = wp::address(var_x, var_22);
        var_36 = wp::load(var_34);
        var_35 = wp::extract(var_36, var_33);
        // x4 = x[i4][0]                                                                          <L 240>
        var_38 = wp::address(var_x, var_24);
        var_40 = wp::load(var_38);
        var_39 = wp::extract(var_40, var_37);
        // y1 = x[i1][1]                                                                          <L 241>
        var_42 = wp::address(var_x, var_18);
        var_44 = wp::load(var_42);
        var_43 = wp::extract(var_44, var_41);
        // y2 = x[i2][1]                                                                          <L 242>
        var_46 = wp::address(var_x, var_20);
        var_48 = wp::load(var_46);
        var_47 = wp::extract(var_48, var_45);
        // y3 = x[i3][1]                                                                          <L 243>
        var_50 = wp::address(var_x, var_22);
        var_52 = wp::load(var_50);
        var_51 = wp::extract(var_52, var_49);
        // y4 = x[i4][1]                                                                          <L 244>
        var_54 = wp::address(var_x, var_24);
        var_56 = wp::load(var_54);
        var_55 = wp::extract(var_56, var_53);
        // z1 = x[i1][2]                                                                          <L 245>
        var_58 = wp::address(var_x, var_18);
        var_60 = wp::load(var_58);
        var_59 = wp::extract(var_60, var_57);
        // z2 = x[i2][2]                                                                          <L 246>
        var_62 = wp::address(var_x, var_20);
        var_64 = wp::load(var_62);
        var_63 = wp::extract(var_64, var_61);
        // z3 = x[i3][2]                                                                          <L 247>
        var_66 = wp::address(var_x, var_22);
        var_68 = wp::load(var_66);
        var_67 = wp::extract(var_68, var_65);
        // z4 = x[i4][2]                                                                          <L 248>
        var_70 = wp::address(var_x, var_24);
        var_72 = wp::load(var_70);
        var_71 = wp::extract(var_72, var_69);
        // p1 = p_x[i1][0]                                                                        <L 250>
        var_74 = wp::address(var_p_x, var_18);
        var_76 = wp::load(var_74);
        var_75 = wp::extract(var_76, var_73);
        // p2 = p_x[i2][0]                                                                        <L 251>
        var_78 = wp::address(var_p_x, var_20);
        var_80 = wp::load(var_78);
        var_79 = wp::extract(var_80, var_77);
        // p3 = p_x[i3][0]                                                                        <L 252>
        var_82 = wp::address(var_p_x, var_22);
        var_84 = wp::load(var_82);
        var_83 = wp::extract(var_84, var_81);
        // p4 = p_x[i4][0]                                                                        <L 253>
        var_86 = wp::address(var_p_x, var_24);
        var_88 = wp::load(var_86);
        var_87 = wp::extract(var_88, var_85);
        // q1 = p_x[i1][1]                                                                        <L 254>
        var_90 = wp::address(var_p_x, var_18);
        var_92 = wp::load(var_90);
        var_91 = wp::extract(var_92, var_89);
        // q2 = p_x[i2][1]                                                                        <L 255>
        var_94 = wp::address(var_p_x, var_20);
        var_96 = wp::load(var_94);
        var_95 = wp::extract(var_96, var_93);
        // q3 = p_x[i3][1]                                                                        <L 256>
        var_98 = wp::address(var_p_x, var_22);
        var_100 = wp::load(var_98);
        var_99 = wp::extract(var_100, var_97);
        // q4 = p_x[i4][1]                                                                        <L 257>
        var_102 = wp::address(var_p_x, var_24);
        var_104 = wp::load(var_102);
        var_103 = wp::extract(var_104, var_101);
        // r1 = p_x[i1][2]                                                                        <L 258>
        var_106 = wp::address(var_p_x, var_18);
        var_108 = wp::load(var_106);
        var_107 = wp::extract(var_108, var_105);
        // r2 = p_x[i2][2]                                                                        <L 259>
        var_110 = wp::address(var_p_x, var_20);
        var_112 = wp::load(var_110);
        var_111 = wp::extract(var_112, var_109);
        // r3 = p_x[i3][2]                                                                        <L 260>
        var_114 = wp::address(var_p_x, var_22);
        var_116 = wp::load(var_114);
        var_115 = wp::extract(var_116, var_113);
        // r4 = p_x[i4][2]                                                                        <L 261>
        var_118 = wp::address(var_p_x, var_24);
        var_120 = wp::load(var_118);
        var_119 = wp::extract(var_120, var_117);
        // a = (                                                                                  <L 263>
        // -p1 * q2 * r3                                                                          <L 264>
        var_121 = wp::neg(var_75);
        var_122 = wp::mul(var_121, var_95);
        var_123 = wp::mul(var_122, var_115);
        // + p1 * r2 * q3                                                                         <L 265>
        var_124 = wp::mul(var_75, var_111);
        var_125 = wp::mul(var_124, var_99);
        var_126 = wp::add(var_123, var_125);
        // + q1 * p2 * r3                                                                         <L 266>
        var_127 = wp::mul(var_91, var_79);
        var_128 = wp::mul(var_127, var_115);
        var_129 = wp::add(var_126, var_128);
        // - q1 * r2 * p3                                                                         <L 267>
        var_130 = wp::mul(var_91, var_111);
        var_131 = wp::mul(var_130, var_83);
        var_132 = wp::sub(var_129, var_131);
        // - r1 * p2 * q3                                                                         <L 268>
        var_133 = wp::mul(var_107, var_79);
        var_134 = wp::mul(var_133, var_99);
        var_135 = wp::sub(var_132, var_134);
        // + r1 * q2 * p3                                                                         <L 269>
        var_136 = wp::mul(var_107, var_95);
        var_137 = wp::mul(var_136, var_83);
        var_138 = wp::add(var_135, var_137);
        // + p1 * q2 * r4                                                                         <L 270>
        var_139 = wp::mul(var_75, var_95);
        var_140 = wp::mul(var_139, var_119);
        var_141 = wp::add(var_138, var_140);
        // - p1 * r2 * q4                                                                         <L 271>
        var_142 = wp::mul(var_75, var_111);
        var_143 = wp::mul(var_142, var_103);
        var_144 = wp::sub(var_141, var_143);
        // - q1 * p2 * r4                                                                         <L 272>
        var_145 = wp::mul(var_91, var_79);
        var_146 = wp::mul(var_145, var_119);
        var_147 = wp::sub(var_144, var_146);
        // + q1 * r2 * p4                                                                         <L 273>
        var_148 = wp::mul(var_91, var_111);
        var_149 = wp::mul(var_148, var_87);
        var_150 = wp::add(var_147, var_149);
        // + r1 * p2 * q4                                                                         <L 274>
        var_151 = wp::mul(var_107, var_79);
        var_152 = wp::mul(var_151, var_103);
        var_153 = wp::add(var_150, var_152);
        // - r1 * q2 * p4                                                                         <L 275>
        var_154 = wp::mul(var_107, var_95);
        var_155 = wp::mul(var_154, var_87);
        var_156 = wp::sub(var_153, var_155);
        // - p1 * q3 * r4                                                                         <L 276>
        var_157 = wp::mul(var_75, var_99);
        var_158 = wp::mul(var_157, var_119);
        var_159 = wp::sub(var_156, var_158);
        // + p1 * r3 * q4                                                                         <L 277>
        var_160 = wp::mul(var_75, var_115);
        var_161 = wp::mul(var_160, var_103);
        var_162 = wp::add(var_159, var_161);
        // + q1 * p3 * r4                                                                         <L 278>
        var_163 = wp::mul(var_91, var_83);
        var_164 = wp::mul(var_163, var_119);
        var_165 = wp::add(var_162, var_164);
        // - q1 * r3 * p4                                                                         <L 279>
        var_166 = wp::mul(var_91, var_115);
        var_167 = wp::mul(var_166, var_87);
        var_168 = wp::sub(var_165, var_167);
        // - r1 * p3 * q4                                                                         <L 280>
        var_169 = wp::mul(var_107, var_83);
        var_170 = wp::mul(var_169, var_103);
        var_171 = wp::sub(var_168, var_170);
        // + r1 * q3 * p4                                                                         <L 281>
        var_172 = wp::mul(var_107, var_99);
        var_173 = wp::mul(var_172, var_87);
        var_174 = wp::add(var_171, var_173);
        // + p2 * q3 * r4                                                                         <L 282>
        var_175 = wp::mul(var_79, var_99);
        var_176 = wp::mul(var_175, var_119);
        var_177 = wp::add(var_174, var_176);
        // - p2 * r3 * q4                                                                         <L 283>
        var_178 = wp::mul(var_79, var_115);
        var_179 = wp::mul(var_178, var_103);
        var_180 = wp::sub(var_177, var_179);
        // - q2 * p3 * r4                                                                         <L 284>
        var_181 = wp::mul(var_95, var_83);
        var_182 = wp::mul(var_181, var_119);
        var_183 = wp::sub(var_180, var_182);
        // + q2 * r3 * p4                                                                         <L 285>
        var_184 = wp::mul(var_95, var_115);
        var_185 = wp::mul(var_184, var_87);
        var_186 = wp::add(var_183, var_185);
        // + r2 * p3 * q4                                                                         <L 286>
        var_187 = wp::mul(var_111, var_83);
        var_188 = wp::mul(var_187, var_103);
        var_189 = wp::add(var_186, var_188);
        // - r2 * q3 * p4                                                                         <L 287>
        var_190 = wp::mul(var_111, var_99);
        var_191 = wp::mul(var_190, var_87);
        var_192 = wp::sub(var_189, var_191);
        // b = (                                                                                  <L 289>
        // -x1 * q2 * r3                                                                          <L 290>
        var_193 = wp::neg(var_27);
        var_194 = wp::mul(var_193, var_95);
        var_195 = wp::mul(var_194, var_115);
        // + x1 * r2 * q3                                                                         <L 291>
        var_196 = wp::mul(var_27, var_111);
        var_197 = wp::mul(var_196, var_99);
        var_198 = wp::add(var_195, var_197);
        // + y1 * p2 * r3                                                                         <L 292>
        var_199 = wp::mul(var_43, var_79);
        var_200 = wp::mul(var_199, var_115);
        var_201 = wp::add(var_198, var_200);
        // - y1 * r2 * p3                                                                         <L 293>
        var_202 = wp::mul(var_43, var_111);
        var_203 = wp::mul(var_202, var_83);
        var_204 = wp::sub(var_201, var_203);
        // - z1 * p2 * q3                                                                         <L 294>
        var_205 = wp::mul(var_59, var_79);
        var_206 = wp::mul(var_205, var_99);
        var_207 = wp::sub(var_204, var_206);
        // + z1 * q2 * p3                                                                         <L 295>
        var_208 = wp::mul(var_59, var_95);
        var_209 = wp::mul(var_208, var_83);
        var_210 = wp::add(var_207, var_209);
        // + x2 * q1 * r3                                                                         <L 296>
        var_211 = wp::mul(var_31, var_91);
        var_212 = wp::mul(var_211, var_115);
        var_213 = wp::add(var_210, var_212);
        // - x2 * r1 * q3                                                                         <L 297>
        var_214 = wp::mul(var_31, var_107);
        var_215 = wp::mul(var_214, var_99);
        var_216 = wp::sub(var_213, var_215);
        // - y2 * p1 * r3                                                                         <L 298>
        var_217 = wp::mul(var_47, var_75);
        var_218 = wp::mul(var_217, var_115);
        var_219 = wp::sub(var_216, var_218);
        // + y2 * r1 * p3                                                                         <L 299>
        var_220 = wp::mul(var_47, var_107);
        var_221 = wp::mul(var_220, var_83);
        var_222 = wp::add(var_219, var_221);
        // + z2 * p1 * q3                                                                         <L 300>
        var_223 = wp::mul(var_63, var_75);
        var_224 = wp::mul(var_223, var_99);
        var_225 = wp::add(var_222, var_224);
        // - z2 * q1 * p3                                                                         <L 301>
        var_226 = wp::mul(var_63, var_91);
        var_227 = wp::mul(var_226, var_83);
        var_228 = wp::sub(var_225, var_227);
        // - x3 * q1 * r2                                                                         <L 302>
        var_229 = wp::mul(var_35, var_91);
        var_230 = wp::mul(var_229, var_111);
        var_231 = wp::sub(var_228, var_230);
        // + x3 * r1 * q2                                                                         <L 303>
        var_232 = wp::mul(var_35, var_107);
        var_233 = wp::mul(var_232, var_95);
        var_234 = wp::add(var_231, var_233);
        // + y3 * p1 * r2                                                                         <L 304>
        var_235 = wp::mul(var_51, var_75);
        var_236 = wp::mul(var_235, var_111);
        var_237 = wp::add(var_234, var_236);
        // - y3 * r1 * p2                                                                         <L 305>
        var_238 = wp::mul(var_51, var_107);
        var_239 = wp::mul(var_238, var_79);
        var_240 = wp::sub(var_237, var_239);
        // - z3 * p1 * q2                                                                         <L 306>
        var_241 = wp::mul(var_67, var_75);
        var_242 = wp::mul(var_241, var_95);
        var_243 = wp::sub(var_240, var_242);
        // + z3 * q1 * p2                                                                         <L 307>
        var_244 = wp::mul(var_67, var_91);
        var_245 = wp::mul(var_244, var_79);
        var_246 = wp::add(var_243, var_245);
        // + x1 * q2 * r4                                                                         <L 308>
        var_247 = wp::mul(var_27, var_95);
        var_248 = wp::mul(var_247, var_119);
        var_249 = wp::add(var_246, var_248);
        // - x1 * r2 * q4                                                                         <L 309>
        var_250 = wp::mul(var_27, var_111);
        var_251 = wp::mul(var_250, var_103);
        var_252 = wp::sub(var_249, var_251);
        // - y1 * p2 * r4                                                                         <L 310>
        var_253 = wp::mul(var_43, var_79);
        var_254 = wp::mul(var_253, var_119);
        var_255 = wp::sub(var_252, var_254);
        // + y1 * r2 * p4                                                                         <L 311>
        var_256 = wp::mul(var_43, var_111);
        var_257 = wp::mul(var_256, var_87);
        var_258 = wp::add(var_255, var_257);
        // + z1 * p2 * q4                                                                         <L 312>
        var_259 = wp::mul(var_59, var_79);
        var_260 = wp::mul(var_259, var_103);
        var_261 = wp::add(var_258, var_260);
        // - z1 * q2 * p4                                                                         <L 313>
        var_262 = wp::mul(var_59, var_95);
        var_263 = wp::mul(var_262, var_87);
        var_264 = wp::sub(var_261, var_263);
        // - x2 * q1 * r4                                                                         <L 314>
        var_265 = wp::mul(var_31, var_91);
        var_266 = wp::mul(var_265, var_119);
        var_267 = wp::sub(var_264, var_266);
        // + x2 * r1 * q4                                                                         <L 315>
        var_268 = wp::mul(var_31, var_107);
        var_269 = wp::mul(var_268, var_103);
        var_270 = wp::add(var_267, var_269);
        // + y2 * p1 * r4                                                                         <L 316>
        var_271 = wp::mul(var_47, var_75);
        var_272 = wp::mul(var_271, var_119);
        var_273 = wp::add(var_270, var_272);
        // - y2 * r1 * p4                                                                         <L 317>
        var_274 = wp::mul(var_47, var_107);
        var_275 = wp::mul(var_274, var_87);
        var_276 = wp::sub(var_273, var_275);
        // - z2 * p1 * q4                                                                         <L 318>
        var_277 = wp::mul(var_63, var_75);
        var_278 = wp::mul(var_277, var_103);
        var_279 = wp::sub(var_276, var_278);
        // + z2 * q1 * p4                                                                         <L 319>
        var_280 = wp::mul(var_63, var_91);
        var_281 = wp::mul(var_280, var_87);
        var_282 = wp::add(var_279, var_281);
        // + x4 * q1 * r2                                                                         <L 320>
        var_283 = wp::mul(var_39, var_91);
        var_284 = wp::mul(var_283, var_111);
        var_285 = wp::add(var_282, var_284);
        // - x4 * r1 * q2                                                                         <L 321>
        var_286 = wp::mul(var_39, var_107);
        var_287 = wp::mul(var_286, var_95);
        var_288 = wp::sub(var_285, var_287);
        // - y4 * p1 * r2                                                                         <L 322>
        var_289 = wp::mul(var_55, var_75);
        var_290 = wp::mul(var_289, var_111);
        var_291 = wp::sub(var_288, var_290);
        // + y4 * r1 * p2                                                                         <L 323>
        var_292 = wp::mul(var_55, var_107);
        var_293 = wp::mul(var_292, var_79);
        var_294 = wp::add(var_291, var_293);
        // + z4 * p1 * q2                                                                         <L 324>
        var_295 = wp::mul(var_71, var_75);
        var_296 = wp::mul(var_295, var_95);
        var_297 = wp::add(var_294, var_296);
        // - z4 * q1 * p2                                                                         <L 325>
        var_298 = wp::mul(var_71, var_91);
        var_299 = wp::mul(var_298, var_79);
        var_300 = wp::sub(var_297, var_299);
        // - x1 * q3 * r4                                                                         <L 326>
        var_301 = wp::mul(var_27, var_99);
        var_302 = wp::mul(var_301, var_119);
        var_303 = wp::sub(var_300, var_302);
        // + x1 * r3 * q4                                                                         <L 327>
        var_304 = wp::mul(var_27, var_115);
        var_305 = wp::mul(var_304, var_103);
        var_306 = wp::add(var_303, var_305);
        // + y1 * p3 * r4                                                                         <L 328>
        var_307 = wp::mul(var_43, var_83);
        var_308 = wp::mul(var_307, var_119);
        var_309 = wp::add(var_306, var_308);
        // - y1 * r3 * p4                                                                         <L 329>
        var_310 = wp::mul(var_43, var_115);
        var_311 = wp::mul(var_310, var_87);
        var_312 = wp::sub(var_309, var_311);
        // - z1 * p3 * q4                                                                         <L 330>
        var_313 = wp::mul(var_59, var_83);
        var_314 = wp::mul(var_313, var_103);
        var_315 = wp::sub(var_312, var_314);
        // + z1 * q3 * p4                                                                         <L 331>
        var_316 = wp::mul(var_59, var_99);
        var_317 = wp::mul(var_316, var_87);
        var_318 = wp::add(var_315, var_317);
        // + x3 * q1 * r4                                                                         <L 332>
        var_319 = wp::mul(var_35, var_91);
        var_320 = wp::mul(var_319, var_119);
        var_321 = wp::add(var_318, var_320);
        // - x3 * r1 * q4                                                                         <L 333>
        var_322 = wp::mul(var_35, var_107);
        var_323 = wp::mul(var_322, var_103);
        var_324 = wp::sub(var_321, var_323);
        // - y3 * p1 * r4                                                                         <L 334>
        var_325 = wp::mul(var_51, var_75);
        var_326 = wp::mul(var_325, var_119);
        var_327 = wp::sub(var_324, var_326);
        // + y3 * r1 * p4                                                                         <L 335>
        var_328 = wp::mul(var_51, var_107);
        var_329 = wp::mul(var_328, var_87);
        var_330 = wp::add(var_327, var_329);
        // + z3 * p1 * q4                                                                         <L 336>
        var_331 = wp::mul(var_67, var_75);
        var_332 = wp::mul(var_331, var_103);
        var_333 = wp::add(var_330, var_332);
        // - z3 * q1 * p4                                                                         <L 337>
        var_334 = wp::mul(var_67, var_91);
        var_335 = wp::mul(var_334, var_87);
        var_336 = wp::sub(var_333, var_335);
        // - x4 * q1 * r3                                                                         <L 338>
        var_337 = wp::mul(var_39, var_91);
        var_338 = wp::mul(var_337, var_115);
        var_339 = wp::sub(var_336, var_338);
        // + x4 * r1 * q3                                                                         <L 339>
        var_340 = wp::mul(var_39, var_107);
        var_341 = wp::mul(var_340, var_99);
        var_342 = wp::add(var_339, var_341);
        // + y4 * p1 * r3                                                                         <L 340>
        var_343 = wp::mul(var_55, var_75);
        var_344 = wp::mul(var_343, var_115);
        var_345 = wp::add(var_342, var_344);
        // - y4 * r1 * p3                                                                         <L 341>
        var_346 = wp::mul(var_55, var_107);
        var_347 = wp::mul(var_346, var_83);
        var_348 = wp::sub(var_345, var_347);
        // - z4 * p1 * q3                                                                         <L 342>
        var_349 = wp::mul(var_71, var_75);
        var_350 = wp::mul(var_349, var_99);
        var_351 = wp::sub(var_348, var_350);
        // + z4 * q1 * p3                                                                         <L 343>
        var_352 = wp::mul(var_71, var_91);
        var_353 = wp::mul(var_352, var_83);
        var_354 = wp::add(var_351, var_353);
        // + x2 * q3 * r4                                                                         <L 344>
        var_355 = wp::mul(var_31, var_99);
        var_356 = wp::mul(var_355, var_119);
        var_357 = wp::add(var_354, var_356);
        // - x2 * r3 * q4                                                                         <L 345>
        var_358 = wp::mul(var_31, var_115);
        var_359 = wp::mul(var_358, var_103);
        var_360 = wp::sub(var_357, var_359);
        // - y2 * p3 * r4                                                                         <L 346>
        var_361 = wp::mul(var_47, var_83);
        var_362 = wp::mul(var_361, var_119);
        var_363 = wp::sub(var_360, var_362);
        // + y2 * r3 * p4                                                                         <L 347>
        var_364 = wp::mul(var_47, var_115);
        var_365 = wp::mul(var_364, var_87);
        var_366 = wp::add(var_363, var_365);
        // + z2 * p3 * q4                                                                         <L 348>
        var_367 = wp::mul(var_63, var_83);
        var_368 = wp::mul(var_367, var_103);
        var_369 = wp::add(var_366, var_368);
        // - z2 * q3 * p4                                                                         <L 349>
        var_370 = wp::mul(var_63, var_99);
        var_371 = wp::mul(var_370, var_87);
        var_372 = wp::sub(var_369, var_371);
        // - x3 * q2 * r4                                                                         <L 350>
        var_373 = wp::mul(var_35, var_95);
        var_374 = wp::mul(var_373, var_119);
        var_375 = wp::sub(var_372, var_374);
        // + x3 * r2 * q4                                                                         <L 351>
        var_376 = wp::mul(var_35, var_111);
        var_377 = wp::mul(var_376, var_103);
        var_378 = wp::add(var_375, var_377);
        // + y3 * p2 * r4                                                                         <L 352>
        var_379 = wp::mul(var_51, var_79);
        var_380 = wp::mul(var_379, var_119);
        var_381 = wp::add(var_378, var_380);
        // - y3 * r2 * p4                                                                         <L 353>
        var_382 = wp::mul(var_51, var_111);
        var_383 = wp::mul(var_382, var_87);
        var_384 = wp::sub(var_381, var_383);
        // - z3 * p2 * q4                                                                         <L 354>
        var_385 = wp::mul(var_67, var_79);
        var_386 = wp::mul(var_385, var_103);
        var_387 = wp::sub(var_384, var_386);
        // + z3 * q2 * p4                                                                         <L 355>
        var_388 = wp::mul(var_67, var_95);
        var_389 = wp::mul(var_388, var_87);
        var_390 = wp::add(var_387, var_389);
        // + x4 * q2 * r3                                                                         <L 356>
        var_391 = wp::mul(var_39, var_95);
        var_392 = wp::mul(var_391, var_115);
        var_393 = wp::add(var_390, var_392);
        // - x4 * r2 * q3                                                                         <L 357>
        var_394 = wp::mul(var_39, var_111);
        var_395 = wp::mul(var_394, var_99);
        var_396 = wp::sub(var_393, var_395);
        // - y4 * p2 * r3                                                                         <L 358>
        var_397 = wp::mul(var_55, var_79);
        var_398 = wp::mul(var_397, var_115);
        var_399 = wp::sub(var_396, var_398);
        // + y4 * r2 * p3                                                                         <L 359>
        var_400 = wp::mul(var_55, var_111);
        var_401 = wp::mul(var_400, var_83);
        var_402 = wp::add(var_399, var_401);
        // + z4 * p2 * q3                                                                         <L 360>
        var_403 = wp::mul(var_71, var_79);
        var_404 = wp::mul(var_403, var_99);
        var_405 = wp::add(var_402, var_404);
        // - z4 * q2 * p3                                                                         <L 361>
        var_406 = wp::mul(var_71, var_95);
        var_407 = wp::mul(var_406, var_83);
        var_408 = wp::sub(var_405, var_407);
        // c = (                                                                                  <L 363>
        // -x1 * y2 * r3                                                                          <L 364>
        var_409 = wp::neg(var_27);
        var_410 = wp::mul(var_409, var_47);
        var_411 = wp::mul(var_410, var_115);
        // + x1 * z2 * q3                                                                         <L 365>
        var_412 = wp::mul(var_27, var_63);
        var_413 = wp::mul(var_412, var_99);
        var_414 = wp::add(var_411, var_413);
        // + x1 * y3 * r2                                                                         <L 366>
        var_415 = wp::mul(var_27, var_51);
        var_416 = wp::mul(var_415, var_111);
        var_417 = wp::add(var_414, var_416);
        // - x1 * z3 * q2                                                                         <L 367>
        var_418 = wp::mul(var_27, var_67);
        var_419 = wp::mul(var_418, var_95);
        var_420 = wp::sub(var_417, var_419);
        // + y1 * x2 * r3                                                                         <L 368>
        var_421 = wp::mul(var_43, var_31);
        var_422 = wp::mul(var_421, var_115);
        var_423 = wp::add(var_420, var_422);
        // - y1 * z2 * p3                                                                         <L 369>
        var_424 = wp::mul(var_43, var_63);
        var_425 = wp::mul(var_424, var_83);
        var_426 = wp::sub(var_423, var_425);
        // - y1 * x3 * r2                                                                         <L 370>
        var_427 = wp::mul(var_43, var_35);
        var_428 = wp::mul(var_427, var_111);
        var_429 = wp::sub(var_426, var_428);
        // + y1 * z3 * p2                                                                         <L 371>
        var_430 = wp::mul(var_43, var_67);
        var_431 = wp::mul(var_430, var_79);
        var_432 = wp::add(var_429, var_431);
        // - z1 * x2 * q3                                                                         <L 372>
        var_433 = wp::mul(var_59, var_31);
        var_434 = wp::mul(var_433, var_99);
        var_435 = wp::sub(var_432, var_434);
        // + z1 * y2 * p3                                                                         <L 373>
        var_436 = wp::mul(var_59, var_47);
        var_437 = wp::mul(var_436, var_83);
        var_438 = wp::add(var_435, var_437);
        // + z1 * x3 * q2                                                                         <L 374>
        var_439 = wp::mul(var_59, var_35);
        var_440 = wp::mul(var_439, var_95);
        var_441 = wp::add(var_438, var_440);
        // - z1 * y3 * p2                                                                         <L 375>
        var_442 = wp::mul(var_59, var_51);
        var_443 = wp::mul(var_442, var_79);
        var_444 = wp::sub(var_441, var_443);
        // - x2 * y3 * r1                                                                         <L 376>
        var_445 = wp::mul(var_31, var_51);
        var_446 = wp::mul(var_445, var_107);
        var_447 = wp::sub(var_444, var_446);
        // + x2 * z3 * q1                                                                         <L 377>
        var_448 = wp::mul(var_31, var_67);
        var_449 = wp::mul(var_448, var_91);
        var_450 = wp::add(var_447, var_449);
        // + y2 * x3 * r1                                                                         <L 378>
        var_451 = wp::mul(var_47, var_35);
        var_452 = wp::mul(var_451, var_107);
        var_453 = wp::add(var_450, var_452);
        // - y2 * z3 * p1                                                                         <L 379>
        var_454 = wp::mul(var_47, var_67);
        var_455 = wp::mul(var_454, var_75);
        var_456 = wp::sub(var_453, var_455);
        // - z2 * x3 * q1                                                                         <L 380>
        var_457 = wp::mul(var_63, var_35);
        var_458 = wp::mul(var_457, var_91);
        var_459 = wp::sub(var_456, var_458);
        // + z2 * y3 * p1                                                                         <L 381>
        var_460 = wp::mul(var_63, var_51);
        var_461 = wp::mul(var_460, var_75);
        var_462 = wp::add(var_459, var_461);
        // + x1 * y2 * r4                                                                         <L 382>
        var_463 = wp::mul(var_27, var_47);
        var_464 = wp::mul(var_463, var_119);
        var_465 = wp::add(var_462, var_464);
        // - x1 * z2 * q4                                                                         <L 383>
        var_466 = wp::mul(var_27, var_63);
        var_467 = wp::mul(var_466, var_103);
        var_468 = wp::sub(var_465, var_467);
        // - x1 * y4 * r2                                                                         <L 384>
        var_469 = wp::mul(var_27, var_55);
        var_470 = wp::mul(var_469, var_111);
        var_471 = wp::sub(var_468, var_470);
        // + x1 * z4 * q2                                                                         <L 385>
        var_472 = wp::mul(var_27, var_71);
        var_473 = wp::mul(var_472, var_95);
        var_474 = wp::add(var_471, var_473);
        // - y1 * x2 * r4                                                                         <L 386>
        var_475 = wp::mul(var_43, var_31);
        var_476 = wp::mul(var_475, var_119);
        var_477 = wp::sub(var_474, var_476);
        // + y1 * z2 * p4                                                                         <L 387>
        var_478 = wp::mul(var_43, var_63);
        var_479 = wp::mul(var_478, var_87);
        var_480 = wp::add(var_477, var_479);
        // + y1 * x4 * r2                                                                         <L 388>
        var_481 = wp::mul(var_43, var_39);
        var_482 = wp::mul(var_481, var_111);
        var_483 = wp::add(var_480, var_482);
        // - y1 * z4 * p2                                                                         <L 389>
        var_484 = wp::mul(var_43, var_71);
        var_485 = wp::mul(var_484, var_79);
        var_486 = wp::sub(var_483, var_485);
        // + z1 * x2 * q4                                                                         <L 390>
        var_487 = wp::mul(var_59, var_31);
        var_488 = wp::mul(var_487, var_103);
        var_489 = wp::add(var_486, var_488);
        // - z1 * y2 * p4                                                                         <L 391>
        var_490 = wp::mul(var_59, var_47);
        var_491 = wp::mul(var_490, var_87);
        var_492 = wp::sub(var_489, var_491);
        // - z1 * x4 * q2                                                                         <L 392>
        var_493 = wp::mul(var_59, var_39);
        var_494 = wp::mul(var_493, var_95);
        var_495 = wp::sub(var_492, var_494);
        // + z1 * y4 * p2                                                                         <L 393>
        var_496 = wp::mul(var_59, var_55);
        var_497 = wp::mul(var_496, var_79);
        var_498 = wp::add(var_495, var_497);
        // + x2 * y4 * r1                                                                         <L 394>
        var_499 = wp::mul(var_31, var_55);
        var_500 = wp::mul(var_499, var_107);
        var_501 = wp::add(var_498, var_500);
        // - x2 * z4 * q1                                                                         <L 395>
        var_502 = wp::mul(var_31, var_71);
        var_503 = wp::mul(var_502, var_91);
        var_504 = wp::sub(var_501, var_503);
        // - y2 * x4 * r1                                                                         <L 396>
        var_505 = wp::mul(var_47, var_39);
        var_506 = wp::mul(var_505, var_107);
        var_507 = wp::sub(var_504, var_506);
        // + y2 * z4 * p1                                                                         <L 397>
        var_508 = wp::mul(var_47, var_71);
        var_509 = wp::mul(var_508, var_75);
        var_510 = wp::add(var_507, var_509);
        // + z2 * x4 * q1                                                                         <L 398>
        var_511 = wp::mul(var_63, var_39);
        var_512 = wp::mul(var_511, var_91);
        var_513 = wp::add(var_510, var_512);
        // - z2 * y4 * p1                                                                         <L 399>
        var_514 = wp::mul(var_63, var_55);
        var_515 = wp::mul(var_514, var_75);
        var_516 = wp::sub(var_513, var_515);
        // - x1 * y3 * r4                                                                         <L 400>
        var_517 = wp::mul(var_27, var_51);
        var_518 = wp::mul(var_517, var_119);
        var_519 = wp::sub(var_516, var_518);
        // + x1 * z3 * q4                                                                         <L 401>
        var_520 = wp::mul(var_27, var_67);
        var_521 = wp::mul(var_520, var_103);
        var_522 = wp::add(var_519, var_521);
        // + x1 * y4 * r3                                                                         <L 402>
        var_523 = wp::mul(var_27, var_55);
        var_524 = wp::mul(var_523, var_115);
        var_525 = wp::add(var_522, var_524);
        // - x1 * z4 * q3                                                                         <L 403>
        var_526 = wp::mul(var_27, var_71);
        var_527 = wp::mul(var_526, var_99);
        var_528 = wp::sub(var_525, var_527);
        // + y1 * x3 * r4                                                                         <L 404>
        var_529 = wp::mul(var_43, var_35);
        var_530 = wp::mul(var_529, var_119);
        var_531 = wp::add(var_528, var_530);
        // - y1 * z3 * p4                                                                         <L 405>
        var_532 = wp::mul(var_43, var_67);
        var_533 = wp::mul(var_532, var_87);
        var_534 = wp::sub(var_531, var_533);
        // - y1 * x4 * r3                                                                         <L 406>
        var_535 = wp::mul(var_43, var_39);
        var_536 = wp::mul(var_535, var_115);
        var_537 = wp::sub(var_534, var_536);
        // + y1 * z4 * p3                                                                         <L 407>
        var_538 = wp::mul(var_43, var_71);
        var_539 = wp::mul(var_538, var_83);
        var_540 = wp::add(var_537, var_539);
        // - z1 * x3 * q4                                                                         <L 408>
        var_541 = wp::mul(var_59, var_35);
        var_542 = wp::mul(var_541, var_103);
        var_543 = wp::sub(var_540, var_542);
        // + z1 * y3 * p4                                                                         <L 409>
        var_544 = wp::mul(var_59, var_51);
        var_545 = wp::mul(var_544, var_87);
        var_546 = wp::add(var_543, var_545);
        // + z1 * x4 * q3                                                                         <L 410>
        var_547 = wp::mul(var_59, var_39);
        var_548 = wp::mul(var_547, var_99);
        var_549 = wp::add(var_546, var_548);
        // - z1 * y4 * p3                                                                         <L 411>
        var_550 = wp::mul(var_59, var_55);
        var_551 = wp::mul(var_550, var_83);
        var_552 = wp::sub(var_549, var_551);
        // - x3 * y4 * r1                                                                         <L 412>
        var_553 = wp::mul(var_35, var_55);
        var_554 = wp::mul(var_553, var_107);
        var_555 = wp::sub(var_552, var_554);
        // + x3 * z4 * q1                                                                         <L 413>
        var_556 = wp::mul(var_35, var_71);
        var_557 = wp::mul(var_556, var_91);
        var_558 = wp::add(var_555, var_557);
        // + y3 * x4 * r1                                                                         <L 414>
        var_559 = wp::mul(var_51, var_39);
        var_560 = wp::mul(var_559, var_107);
        var_561 = wp::add(var_558, var_560);
        // - y3 * z4 * p1                                                                         <L 415>
        var_562 = wp::mul(var_51, var_71);
        var_563 = wp::mul(var_562, var_75);
        var_564 = wp::sub(var_561, var_563);
        // - z3 * x4 * q1                                                                         <L 416>
        var_565 = wp::mul(var_67, var_39);
        var_566 = wp::mul(var_565, var_91);
        var_567 = wp::sub(var_564, var_566);
        // + z3 * y4 * p1                                                                         <L 417>
        var_568 = wp::mul(var_67, var_55);
        var_569 = wp::mul(var_568, var_75);
        var_570 = wp::add(var_567, var_569);
        // + x2 * y3 * r4                                                                         <L 418>
        var_571 = wp::mul(var_31, var_51);
        var_572 = wp::mul(var_571, var_119);
        var_573 = wp::add(var_570, var_572);
        // - x2 * z3 * q4                                                                         <L 419>
        var_574 = wp::mul(var_31, var_67);
        var_575 = wp::mul(var_574, var_103);
        var_576 = wp::sub(var_573, var_575);
        // - x2 * y4 * r3                                                                         <L 420>
        var_577 = wp::mul(var_31, var_55);
        var_578 = wp::mul(var_577, var_115);
        var_579 = wp::sub(var_576, var_578);
        // + x2 * z4 * q3                                                                         <L 421>
        var_580 = wp::mul(var_31, var_71);
        var_581 = wp::mul(var_580, var_99);
        var_582 = wp::add(var_579, var_581);
        // - y2 * x3 * r4                                                                         <L 422>
        var_583 = wp::mul(var_47, var_35);
        var_584 = wp::mul(var_583, var_119);
        var_585 = wp::sub(var_582, var_584);
        // + y2 * z3 * p4                                                                         <L 423>
        var_586 = wp::mul(var_47, var_67);
        var_587 = wp::mul(var_586, var_87);
        var_588 = wp::add(var_585, var_587);
        // + y2 * x4 * r3                                                                         <L 424>
        var_589 = wp::mul(var_47, var_39);
        var_590 = wp::mul(var_589, var_115);
        var_591 = wp::add(var_588, var_590);
        // - y2 * z4 * p3                                                                         <L 425>
        var_592 = wp::mul(var_47, var_71);
        var_593 = wp::mul(var_592, var_83);
        var_594 = wp::sub(var_591, var_593);
        // + z2 * x3 * q4                                                                         <L 426>
        var_595 = wp::mul(var_63, var_35);
        var_596 = wp::mul(var_595, var_103);
        var_597 = wp::add(var_594, var_596);
        // - z2 * y3 * p4                                                                         <L 427>
        var_598 = wp::mul(var_63, var_51);
        var_599 = wp::mul(var_598, var_87);
        var_600 = wp::sub(var_597, var_599);
        // - z2 * x4 * q3                                                                         <L 428>
        var_601 = wp::mul(var_63, var_39);
        var_602 = wp::mul(var_601, var_99);
        var_603 = wp::sub(var_600, var_602);
        // + z2 * y4 * p3                                                                         <L 429>
        var_604 = wp::mul(var_63, var_55);
        var_605 = wp::mul(var_604, var_83);
        var_606 = wp::add(var_603, var_605);
        // + x3 * y4 * r2                                                                         <L 430>
        var_607 = wp::mul(var_35, var_55);
        var_608 = wp::mul(var_607, var_111);
        var_609 = wp::add(var_606, var_608);
        // - x3 * z4 * q2                                                                         <L 431>
        var_610 = wp::mul(var_35, var_71);
        var_611 = wp::mul(var_610, var_95);
        var_612 = wp::sub(var_609, var_611);
        // - y3 * x4 * r2                                                                         <L 432>
        var_613 = wp::mul(var_51, var_39);
        var_614 = wp::mul(var_613, var_111);
        var_615 = wp::sub(var_612, var_614);
        // + y3 * z4 * p2                                                                         <L 433>
        var_616 = wp::mul(var_51, var_71);
        var_617 = wp::mul(var_616, var_79);
        var_618 = wp::add(var_615, var_617);
        // + z3 * x4 * q2                                                                         <L 434>
        var_619 = wp::mul(var_67, var_39);
        var_620 = wp::mul(var_619, var_95);
        var_621 = wp::add(var_618, var_620);
        // - z3 * y4 * p2                                                                         <L 435>
        var_622 = wp::mul(var_67, var_55);
        var_623 = wp::mul(var_622, var_79);
        var_624 = wp::sub(var_621, var_623);
        // d = wp.float64(1.0 - 0.2) * (                                                          <L 437>
        var_627 = wp::sub(var_625, var_626);
        var_628 = wp::float64(var_627);
        // x1 * z2 * y3                                                                           <L 438>
        var_629 = wp::mul(var_27, var_63);
        var_630 = wp::mul(var_629, var_51);
        // - x1 * y2 * z3                                                                         <L 439>
        var_631 = wp::mul(var_27, var_47);
        var_632 = wp::mul(var_631, var_67);
        var_633 = wp::sub(var_630, var_632);
        // + y1 * x2 * z3                                                                         <L 440>
        var_634 = wp::mul(var_43, var_31);
        var_635 = wp::mul(var_634, var_67);
        var_636 = wp::add(var_633, var_635);
        // - y1 * z2 * x3                                                                         <L 441>
        var_637 = wp::mul(var_43, var_63);
        var_638 = wp::mul(var_637, var_35);
        var_639 = wp::sub(var_636, var_638);
        // - z1 * x2 * y3                                                                         <L 442>
        var_640 = wp::mul(var_59, var_31);
        var_641 = wp::mul(var_640, var_51);
        var_642 = wp::sub(var_639, var_641);
        // + z1 * y2 * x3                                                                         <L 443>
        var_643 = wp::mul(var_59, var_47);
        var_644 = wp::mul(var_643, var_35);
        var_645 = wp::add(var_642, var_644);
        // + x1 * y2 * z4                                                                         <L 444>
        var_646 = wp::mul(var_27, var_47);
        var_647 = wp::mul(var_646, var_71);
        var_648 = wp::add(var_645, var_647);
        // - x1 * z2 * y4                                                                         <L 445>
        var_649 = wp::mul(var_27, var_63);
        var_650 = wp::mul(var_649, var_55);
        var_651 = wp::sub(var_648, var_650);
        // - y1 * x2 * z4                                                                         <L 446>
        var_652 = wp::mul(var_43, var_31);
        var_653 = wp::mul(var_652, var_71);
        var_654 = wp::sub(var_651, var_653);
        // + y1 * z2 * x4                                                                         <L 447>
        var_655 = wp::mul(var_43, var_63);
        var_656 = wp::mul(var_655, var_39);
        var_657 = wp::add(var_654, var_656);
        // + z1 * x2 * y4                                                                         <L 448>
        var_658 = wp::mul(var_59, var_31);
        var_659 = wp::mul(var_658, var_55);
        var_660 = wp::add(var_657, var_659);
        // - z1 * y2 * x4                                                                         <L 449>
        var_661 = wp::mul(var_59, var_47);
        var_662 = wp::mul(var_661, var_39);
        var_663 = wp::sub(var_660, var_662);
        // - x1 * y3 * z4                                                                         <L 450>
        var_664 = wp::mul(var_27, var_51);
        var_665 = wp::mul(var_664, var_71);
        var_666 = wp::sub(var_663, var_665);
        // + x1 * z3 * y4                                                                         <L 451>
        var_667 = wp::mul(var_27, var_67);
        var_668 = wp::mul(var_667, var_55);
        var_669 = wp::add(var_666, var_668);
        // + y1 * x3 * z4                                                                         <L 452>
        var_670 = wp::mul(var_43, var_35);
        var_671 = wp::mul(var_670, var_71);
        var_672 = wp::add(var_669, var_671);
        // - y1 * z3 * x4                                                                         <L 453>
        var_673 = wp::mul(var_43, var_67);
        var_674 = wp::mul(var_673, var_39);
        var_675 = wp::sub(var_672, var_674);
        // - z1 * x3 * y4                                                                         <L 454>
        var_676 = wp::mul(var_59, var_35);
        var_677 = wp::mul(var_676, var_55);
        var_678 = wp::sub(var_675, var_677);
        // + z1 * y3 * x4                                                                         <L 455>
        var_679 = wp::mul(var_59, var_51);
        var_680 = wp::mul(var_679, var_39);
        var_681 = wp::add(var_678, var_680);
        // + x2 * y3 * z4                                                                         <L 456>
        var_682 = wp::mul(var_31, var_51);
        var_683 = wp::mul(var_682, var_71);
        var_684 = wp::add(var_681, var_683);
        // - x2 * z3 * y4                                                                         <L 457>
        var_685 = wp::mul(var_31, var_67);
        var_686 = wp::mul(var_685, var_55);
        var_687 = wp::sub(var_684, var_686);
        // - y2 * x3 * z4                                                                         <L 458>
        var_688 = wp::mul(var_47, var_35);
        var_689 = wp::mul(var_688, var_71);
        var_690 = wp::sub(var_687, var_689);
        // + y2 * z3 * x4                                                                         <L 459>
        var_691 = wp::mul(var_47, var_67);
        var_692 = wp::mul(var_691, var_39);
        var_693 = wp::add(var_690, var_692);
        // + z2 * x3 * y4                                                                         <L 460>
        var_694 = wp::mul(var_63, var_35);
        var_695 = wp::mul(var_694, var_55);
        var_696 = wp::add(var_693, var_695);
        // - z2 * y3 * x4                                                                         <L 461>
        var_697 = wp::mul(var_63, var_51);
        var_698 = wp::mul(var_697, var_39);
        var_699 = wp::sub(var_696, var_698);
        var_700 = wp::mul(var_628, var_699);
        // t = get_smallest_positive_real_cubic_root(a, b, c, d, img_tol, cubic_coef_tol)         <L 463>
        var_701 = get_smallest_positive_real_cubic_root_0(var_192, var_408, var_624, var_700, var_img_tol, var_cubic_coef_tol);
        // if (t < _0) or (t > _1):                                                               <L 464>
        var_703 = (var_701 < var_702);
        var_705 = (var_701 > var_704);
        var_706 = var_703 || var_705;
        if (var_706) {
            // t = _1                                                                             <L 465>
            var_707 = wp::copy(var_704);
        }
        var_708 = wp::where(var_706, var_707, var_701);
        // if t < wp.float64(1e-3):                                                               <L 466>
        var_710 = wp::float64(var_709);
        var_711 = (var_708 < var_710);
        if (var_711) {
            // coef = wp.float64(1e10)                                                            <L 467>
            var_713 = wp::float64(var_712);
            // wp.printf(                                                                         <L 468>
            // "toi: %lf, a: %lf, b: %lf, c: %lf, d: %lf\n",                                      <L 469>
            // t,                                                                                 <L 470>
            // a * coef,                                                                          <L 471>
            var_715 = wp::mul(var_192, var_713);
            // b * coef,                                                                          <L 472>
            var_716 = wp::mul(var_408, var_713);
            // c * coef,                                                                          <L 473>
            var_717 = wp::mul(var_624, var_713);
            // d * coef,                                                                          <L 474>
            var_718 = wp::mul(var_700, var_713);
            printf(var_714, var_708, var_715, var_716, var_717, var_718);
        }
        // alphas[tid] = t                                                                        <L 476>
        // wp::array_store(var_alphas, var_0, var_708);
        //---------
        // reverse
        wp::adj_array_store(var_alphas, var_0, var_708, adj_alphas, adj_0, adj_708);
        // adj: alphas[tid] = t                                                                   <L 476>
        if (var_711) {
            adj_printf(var_714, var_708, var_715, var_716, var_717, var_718, adj_714, adj_708, adj_715, adj_716, adj_717, adj_718);
            wp::adj_mul(var_700, var_713, adj_700, adj_713, adj_718);
            // adj: d * coef,                                                                     <L 474>
            wp::adj_mul(var_624, var_713, adj_624, adj_713, adj_717);
            // adj: c * coef,                                                                     <L 473>
            wp::adj_mul(var_408, var_713, adj_408, adj_713, adj_716);
            // adj: b * coef,                                                                     <L 472>
            wp::adj_mul(var_192, var_713, adj_192, adj_713, adj_715);
            // adj: a * coef,                                                                     <L 471>
            // adj: t,                                                                            <L 470>
            // adj: "toi: %lf, a: %lf, b: %lf, c: %lf, d: %lf\n",                                 <L 469>
            // adj: wp.printf(                                                                    <L 468>
            wp::adj_float64(var_712, adj_712, adj_713);
            // adj: coef = wp.float64(1e10)                                                       <L 467>
        }
        wp::adj_float64(var_709, adj_709, adj_710);
        // adj: if t < wp.float64(1e-3):                                                          <L 466>
        wp::adj_where(var_706, var_707, var_701, adj_706, adj_707, adj_701, adj_708);
        if (var_706) {
            wp::adj_copy(var_704, adj_704, adj_707);
            // adj: t = _1                                                                        <L 465>
        }
        // adj: if (t < _0) or (t > _1):                                                          <L 464>
        adj_get_smallest_positive_real_cubic_root_0(var_192, var_408, var_624, var_700, var_img_tol, var_cubic_coef_tol, adj_192, adj_408, adj_624, adj_700, adj_img_tol, adj_cubic_coef_tol, adj_701);
        // adj: t = get_smallest_positive_real_cubic_root(a, b, c, d, img_tol, cubic_coef_tol)    <L 463>
        wp::adj_mul(var_628, var_699, adj_628, adj_699, adj_700);
        wp::adj_sub(var_696, var_698, adj_696, adj_698, adj_699);
        wp::adj_mul(var_697, var_39, adj_697, adj_39, adj_698);
        wp::adj_mul(var_63, var_51, adj_63, adj_51, adj_697);
        // adj: - z2 * y3 * x4                                                                    <L 461>
        wp::adj_add(var_693, var_695, adj_693, adj_695, adj_696);
        wp::adj_mul(var_694, var_55, adj_694, adj_55, adj_695);
        wp::adj_mul(var_63, var_35, adj_63, adj_35, adj_694);
        // adj: + z2 * x3 * y4                                                                    <L 460>
        wp::adj_add(var_690, var_692, adj_690, adj_692, adj_693);
        wp::adj_mul(var_691, var_39, adj_691, adj_39, adj_692);
        wp::adj_mul(var_47, var_67, adj_47, adj_67, adj_691);
        // adj: + y2 * z3 * x4                                                                    <L 459>
        wp::adj_sub(var_687, var_689, adj_687, adj_689, adj_690);
        wp::adj_mul(var_688, var_71, adj_688, adj_71, adj_689);
        wp::adj_mul(var_47, var_35, adj_47, adj_35, adj_688);
        // adj: - y2 * x3 * z4                                                                    <L 458>
        wp::adj_sub(var_684, var_686, adj_684, adj_686, adj_687);
        wp::adj_mul(var_685, var_55, adj_685, adj_55, adj_686);
        wp::adj_mul(var_31, var_67, adj_31, adj_67, adj_685);
        // adj: - x2 * z3 * y4                                                                    <L 457>
        wp::adj_add(var_681, var_683, adj_681, adj_683, adj_684);
        wp::adj_mul(var_682, var_71, adj_682, adj_71, adj_683);
        wp::adj_mul(var_31, var_51, adj_31, adj_51, adj_682);
        // adj: + x2 * y3 * z4                                                                    <L 456>
        wp::adj_add(var_678, var_680, adj_678, adj_680, adj_681);
        wp::adj_mul(var_679, var_39, adj_679, adj_39, adj_680);
        wp::adj_mul(var_59, var_51, adj_59, adj_51, adj_679);
        // adj: + z1 * y3 * x4                                                                    <L 455>
        wp::adj_sub(var_675, var_677, adj_675, adj_677, adj_678);
        wp::adj_mul(var_676, var_55, adj_676, adj_55, adj_677);
        wp::adj_mul(var_59, var_35, adj_59, adj_35, adj_676);
        // adj: - z1 * x3 * y4                                                                    <L 454>
        wp::adj_sub(var_672, var_674, adj_672, adj_674, adj_675);
        wp::adj_mul(var_673, var_39, adj_673, adj_39, adj_674);
        wp::adj_mul(var_43, var_67, adj_43, adj_67, adj_673);
        // adj: - y1 * z3 * x4                                                                    <L 453>
        wp::adj_add(var_669, var_671, adj_669, adj_671, adj_672);
        wp::adj_mul(var_670, var_71, adj_670, adj_71, adj_671);
        wp::adj_mul(var_43, var_35, adj_43, adj_35, adj_670);
        // adj: + y1 * x3 * z4                                                                    <L 452>
        wp::adj_add(var_666, var_668, adj_666, adj_668, adj_669);
        wp::adj_mul(var_667, var_55, adj_667, adj_55, adj_668);
        wp::adj_mul(var_27, var_67, adj_27, adj_67, adj_667);
        // adj: + x1 * z3 * y4                                                                    <L 451>
        wp::adj_sub(var_663, var_665, adj_663, adj_665, adj_666);
        wp::adj_mul(var_664, var_71, adj_664, adj_71, adj_665);
        wp::adj_mul(var_27, var_51, adj_27, adj_51, adj_664);
        // adj: - x1 * y3 * z4                                                                    <L 450>
        wp::adj_sub(var_660, var_662, adj_660, adj_662, adj_663);
        wp::adj_mul(var_661, var_39, adj_661, adj_39, adj_662);
        wp::adj_mul(var_59, var_47, adj_59, adj_47, adj_661);
        // adj: - z1 * y2 * x4                                                                    <L 449>
        wp::adj_add(var_657, var_659, adj_657, adj_659, adj_660);
        wp::adj_mul(var_658, var_55, adj_658, adj_55, adj_659);
        wp::adj_mul(var_59, var_31, adj_59, adj_31, adj_658);
        // adj: + z1 * x2 * y4                                                                    <L 448>
        wp::adj_add(var_654, var_656, adj_654, adj_656, adj_657);
        wp::adj_mul(var_655, var_39, adj_655, adj_39, adj_656);
        wp::adj_mul(var_43, var_63, adj_43, adj_63, adj_655);
        // adj: + y1 * z2 * x4                                                                    <L 447>
        wp::adj_sub(var_651, var_653, adj_651, adj_653, adj_654);
        wp::adj_mul(var_652, var_71, adj_652, adj_71, adj_653);
        wp::adj_mul(var_43, var_31, adj_43, adj_31, adj_652);
        // adj: - y1 * x2 * z4                                                                    <L 446>
        wp::adj_sub(var_648, var_650, adj_648, adj_650, adj_651);
        wp::adj_mul(var_649, var_55, adj_649, adj_55, adj_650);
        wp::adj_mul(var_27, var_63, adj_27, adj_63, adj_649);
        // adj: - x1 * z2 * y4                                                                    <L 445>
        wp::adj_add(var_645, var_647, adj_645, adj_647, adj_648);
        wp::adj_mul(var_646, var_71, adj_646, adj_71, adj_647);
        wp::adj_mul(var_27, var_47, adj_27, adj_47, adj_646);
        // adj: + x1 * y2 * z4                                                                    <L 444>
        wp::adj_add(var_642, var_644, adj_642, adj_644, adj_645);
        wp::adj_mul(var_643, var_35, adj_643, adj_35, adj_644);
        wp::adj_mul(var_59, var_47, adj_59, adj_47, adj_643);
        // adj: + z1 * y2 * x3                                                                    <L 443>
        wp::adj_sub(var_639, var_641, adj_639, adj_641, adj_642);
        wp::adj_mul(var_640, var_51, adj_640, adj_51, adj_641);
        wp::adj_mul(var_59, var_31, adj_59, adj_31, adj_640);
        // adj: - z1 * x2 * y3                                                                    <L 442>
        wp::adj_sub(var_636, var_638, adj_636, adj_638, adj_639);
        wp::adj_mul(var_637, var_35, adj_637, adj_35, adj_638);
        wp::adj_mul(var_43, var_63, adj_43, adj_63, adj_637);
        // adj: - y1 * z2 * x3                                                                    <L 441>
        wp::adj_add(var_633, var_635, adj_633, adj_635, adj_636);
        wp::adj_mul(var_634, var_67, adj_634, adj_67, adj_635);
        wp::adj_mul(var_43, var_31, adj_43, adj_31, adj_634);
        // adj: + y1 * x2 * z3                                                                    <L 440>
        wp::adj_sub(var_630, var_632, adj_630, adj_632, adj_633);
        wp::adj_mul(var_631, var_67, adj_631, adj_67, adj_632);
        wp::adj_mul(var_27, var_47, adj_27, adj_47, adj_631);
        // adj: - x1 * y2 * z3                                                                    <L 439>
        wp::adj_mul(var_629, var_51, adj_629, adj_51, adj_630);
        wp::adj_mul(var_27, var_63, adj_27, adj_63, adj_629);
        // adj: x1 * z2 * y3                                                                      <L 438>
        wp::adj_float64(var_627, adj_627, adj_628);
        wp::adj_sub(var_625, var_626, adj_625, adj_626, adj_627);
        // adj: d = wp.float64(1.0 - 0.2) * (                                                     <L 437>
        wp::adj_sub(var_621, var_623, adj_621, adj_623, adj_624);
        wp::adj_mul(var_622, var_79, adj_622, adj_79, adj_623);
        wp::adj_mul(var_67, var_55, adj_67, adj_55, adj_622);
        // adj: - z3 * y4 * p2                                                                    <L 435>
        wp::adj_add(var_618, var_620, adj_618, adj_620, adj_621);
        wp::adj_mul(var_619, var_95, adj_619, adj_95, adj_620);
        wp::adj_mul(var_67, var_39, adj_67, adj_39, adj_619);
        // adj: + z3 * x4 * q2                                                                    <L 434>
        wp::adj_add(var_615, var_617, adj_615, adj_617, adj_618);
        wp::adj_mul(var_616, var_79, adj_616, adj_79, adj_617);
        wp::adj_mul(var_51, var_71, adj_51, adj_71, adj_616);
        // adj: + y3 * z4 * p2                                                                    <L 433>
        wp::adj_sub(var_612, var_614, adj_612, adj_614, adj_615);
        wp::adj_mul(var_613, var_111, adj_613, adj_111, adj_614);
        wp::adj_mul(var_51, var_39, adj_51, adj_39, adj_613);
        // adj: - y3 * x4 * r2                                                                    <L 432>
        wp::adj_sub(var_609, var_611, adj_609, adj_611, adj_612);
        wp::adj_mul(var_610, var_95, adj_610, adj_95, adj_611);
        wp::adj_mul(var_35, var_71, adj_35, adj_71, adj_610);
        // adj: - x3 * z4 * q2                                                                    <L 431>
        wp::adj_add(var_606, var_608, adj_606, adj_608, adj_609);
        wp::adj_mul(var_607, var_111, adj_607, adj_111, adj_608);
        wp::adj_mul(var_35, var_55, adj_35, adj_55, adj_607);
        // adj: + x3 * y4 * r2                                                                    <L 430>
        wp::adj_add(var_603, var_605, adj_603, adj_605, adj_606);
        wp::adj_mul(var_604, var_83, adj_604, adj_83, adj_605);
        wp::adj_mul(var_63, var_55, adj_63, adj_55, adj_604);
        // adj: + z2 * y4 * p3                                                                    <L 429>
        wp::adj_sub(var_600, var_602, adj_600, adj_602, adj_603);
        wp::adj_mul(var_601, var_99, adj_601, adj_99, adj_602);
        wp::adj_mul(var_63, var_39, adj_63, adj_39, adj_601);
        // adj: - z2 * x4 * q3                                                                    <L 428>
        wp::adj_sub(var_597, var_599, adj_597, adj_599, adj_600);
        wp::adj_mul(var_598, var_87, adj_598, adj_87, adj_599);
        wp::adj_mul(var_63, var_51, adj_63, adj_51, adj_598);
        // adj: - z2 * y3 * p4                                                                    <L 427>
        wp::adj_add(var_594, var_596, adj_594, adj_596, adj_597);
        wp::adj_mul(var_595, var_103, adj_595, adj_103, adj_596);
        wp::adj_mul(var_63, var_35, adj_63, adj_35, adj_595);
        // adj: + z2 * x3 * q4                                                                    <L 426>
        wp::adj_sub(var_591, var_593, adj_591, adj_593, adj_594);
        wp::adj_mul(var_592, var_83, adj_592, adj_83, adj_593);
        wp::adj_mul(var_47, var_71, adj_47, adj_71, adj_592);
        // adj: - y2 * z4 * p3                                                                    <L 425>
        wp::adj_add(var_588, var_590, adj_588, adj_590, adj_591);
        wp::adj_mul(var_589, var_115, adj_589, adj_115, adj_590);
        wp::adj_mul(var_47, var_39, adj_47, adj_39, adj_589);
        // adj: + y2 * x4 * r3                                                                    <L 424>
        wp::adj_add(var_585, var_587, adj_585, adj_587, adj_588);
        wp::adj_mul(var_586, var_87, adj_586, adj_87, adj_587);
        wp::adj_mul(var_47, var_67, adj_47, adj_67, adj_586);
        // adj: + y2 * z3 * p4                                                                    <L 423>
        wp::adj_sub(var_582, var_584, adj_582, adj_584, adj_585);
        wp::adj_mul(var_583, var_119, adj_583, adj_119, adj_584);
        wp::adj_mul(var_47, var_35, adj_47, adj_35, adj_583);
        // adj: - y2 * x3 * r4                                                                    <L 422>
        wp::adj_add(var_579, var_581, adj_579, adj_581, adj_582);
        wp::adj_mul(var_580, var_99, adj_580, adj_99, adj_581);
        wp::adj_mul(var_31, var_71, adj_31, adj_71, adj_580);
        // adj: + x2 * z4 * q3                                                                    <L 421>
        wp::adj_sub(var_576, var_578, adj_576, adj_578, adj_579);
        wp::adj_mul(var_577, var_115, adj_577, adj_115, adj_578);
        wp::adj_mul(var_31, var_55, adj_31, adj_55, adj_577);
        // adj: - x2 * y4 * r3                                                                    <L 420>
        wp::adj_sub(var_573, var_575, adj_573, adj_575, adj_576);
        wp::adj_mul(var_574, var_103, adj_574, adj_103, adj_575);
        wp::adj_mul(var_31, var_67, adj_31, adj_67, adj_574);
        // adj: - x2 * z3 * q4                                                                    <L 419>
        wp::adj_add(var_570, var_572, adj_570, adj_572, adj_573);
        wp::adj_mul(var_571, var_119, adj_571, adj_119, adj_572);
        wp::adj_mul(var_31, var_51, adj_31, adj_51, adj_571);
        // adj: + x2 * y3 * r4                                                                    <L 418>
        wp::adj_add(var_567, var_569, adj_567, adj_569, adj_570);
        wp::adj_mul(var_568, var_75, adj_568, adj_75, adj_569);
        wp::adj_mul(var_67, var_55, adj_67, adj_55, adj_568);
        // adj: + z3 * y4 * p1                                                                    <L 417>
        wp::adj_sub(var_564, var_566, adj_564, adj_566, adj_567);
        wp::adj_mul(var_565, var_91, adj_565, adj_91, adj_566);
        wp::adj_mul(var_67, var_39, adj_67, adj_39, adj_565);
        // adj: - z3 * x4 * q1                                                                    <L 416>
        wp::adj_sub(var_561, var_563, adj_561, adj_563, adj_564);
        wp::adj_mul(var_562, var_75, adj_562, adj_75, adj_563);
        wp::adj_mul(var_51, var_71, adj_51, adj_71, adj_562);
        // adj: - y3 * z4 * p1                                                                    <L 415>
        wp::adj_add(var_558, var_560, adj_558, adj_560, adj_561);
        wp::adj_mul(var_559, var_107, adj_559, adj_107, adj_560);
        wp::adj_mul(var_51, var_39, adj_51, adj_39, adj_559);
        // adj: + y3 * x4 * r1                                                                    <L 414>
        wp::adj_add(var_555, var_557, adj_555, adj_557, adj_558);
        wp::adj_mul(var_556, var_91, adj_556, adj_91, adj_557);
        wp::adj_mul(var_35, var_71, adj_35, adj_71, adj_556);
        // adj: + x3 * z4 * q1                                                                    <L 413>
        wp::adj_sub(var_552, var_554, adj_552, adj_554, adj_555);
        wp::adj_mul(var_553, var_107, adj_553, adj_107, adj_554);
        wp::adj_mul(var_35, var_55, adj_35, adj_55, adj_553);
        // adj: - x3 * y4 * r1                                                                    <L 412>
        wp::adj_sub(var_549, var_551, adj_549, adj_551, adj_552);
        wp::adj_mul(var_550, var_83, adj_550, adj_83, adj_551);
        wp::adj_mul(var_59, var_55, adj_59, adj_55, adj_550);
        // adj: - z1 * y4 * p3                                                                    <L 411>
        wp::adj_add(var_546, var_548, adj_546, adj_548, adj_549);
        wp::adj_mul(var_547, var_99, adj_547, adj_99, adj_548);
        wp::adj_mul(var_59, var_39, adj_59, adj_39, adj_547);
        // adj: + z1 * x4 * q3                                                                    <L 410>
        wp::adj_add(var_543, var_545, adj_543, adj_545, adj_546);
        wp::adj_mul(var_544, var_87, adj_544, adj_87, adj_545);
        wp::adj_mul(var_59, var_51, adj_59, adj_51, adj_544);
        // adj: + z1 * y3 * p4                                                                    <L 409>
        wp::adj_sub(var_540, var_542, adj_540, adj_542, adj_543);
        wp::adj_mul(var_541, var_103, adj_541, adj_103, adj_542);
        wp::adj_mul(var_59, var_35, adj_59, adj_35, adj_541);
        // adj: - z1 * x3 * q4                                                                    <L 408>
        wp::adj_add(var_537, var_539, adj_537, adj_539, adj_540);
        wp::adj_mul(var_538, var_83, adj_538, adj_83, adj_539);
        wp::adj_mul(var_43, var_71, adj_43, adj_71, adj_538);
        // adj: + y1 * z4 * p3                                                                    <L 407>
        wp::adj_sub(var_534, var_536, adj_534, adj_536, adj_537);
        wp::adj_mul(var_535, var_115, adj_535, adj_115, adj_536);
        wp::adj_mul(var_43, var_39, adj_43, adj_39, adj_535);
        // adj: - y1 * x4 * r3                                                                    <L 406>
        wp::adj_sub(var_531, var_533, adj_531, adj_533, adj_534);
        wp::adj_mul(var_532, var_87, adj_532, adj_87, adj_533);
        wp::adj_mul(var_43, var_67, adj_43, adj_67, adj_532);
        // adj: - y1 * z3 * p4                                                                    <L 405>
        wp::adj_add(var_528, var_530, adj_528, adj_530, adj_531);
        wp::adj_mul(var_529, var_119, adj_529, adj_119, adj_530);
        wp::adj_mul(var_43, var_35, adj_43, adj_35, adj_529);
        // adj: + y1 * x3 * r4                                                                    <L 404>
        wp::adj_sub(var_525, var_527, adj_525, adj_527, adj_528);
        wp::adj_mul(var_526, var_99, adj_526, adj_99, adj_527);
        wp::adj_mul(var_27, var_71, adj_27, adj_71, adj_526);
        // adj: - x1 * z4 * q3                                                                    <L 403>
        wp::adj_add(var_522, var_524, adj_522, adj_524, adj_525);
        wp::adj_mul(var_523, var_115, adj_523, adj_115, adj_524);
        wp::adj_mul(var_27, var_55, adj_27, adj_55, adj_523);
        // adj: + x1 * y4 * r3                                                                    <L 402>
        wp::adj_add(var_519, var_521, adj_519, adj_521, adj_522);
        wp::adj_mul(var_520, var_103, adj_520, adj_103, adj_521);
        wp::adj_mul(var_27, var_67, adj_27, adj_67, adj_520);
        // adj: + x1 * z3 * q4                                                                    <L 401>
        wp::adj_sub(var_516, var_518, adj_516, adj_518, adj_519);
        wp::adj_mul(var_517, var_119, adj_517, adj_119, adj_518);
        wp::adj_mul(var_27, var_51, adj_27, adj_51, adj_517);
        // adj: - x1 * y3 * r4                                                                    <L 400>
        wp::adj_sub(var_513, var_515, adj_513, adj_515, adj_516);
        wp::adj_mul(var_514, var_75, adj_514, adj_75, adj_515);
        wp::adj_mul(var_63, var_55, adj_63, adj_55, adj_514);
        // adj: - z2 * y4 * p1                                                                    <L 399>
        wp::adj_add(var_510, var_512, adj_510, adj_512, adj_513);
        wp::adj_mul(var_511, var_91, adj_511, adj_91, adj_512);
        wp::adj_mul(var_63, var_39, adj_63, adj_39, adj_511);
        // adj: + z2 * x4 * q1                                                                    <L 398>
        wp::adj_add(var_507, var_509, adj_507, adj_509, adj_510);
        wp::adj_mul(var_508, var_75, adj_508, adj_75, adj_509);
        wp::adj_mul(var_47, var_71, adj_47, adj_71, adj_508);
        // adj: + y2 * z4 * p1                                                                    <L 397>
        wp::adj_sub(var_504, var_506, adj_504, adj_506, adj_507);
        wp::adj_mul(var_505, var_107, adj_505, adj_107, adj_506);
        wp::adj_mul(var_47, var_39, adj_47, adj_39, adj_505);
        // adj: - y2 * x4 * r1                                                                    <L 396>
        wp::adj_sub(var_501, var_503, adj_501, adj_503, adj_504);
        wp::adj_mul(var_502, var_91, adj_502, adj_91, adj_503);
        wp::adj_mul(var_31, var_71, adj_31, adj_71, adj_502);
        // adj: - x2 * z4 * q1                                                                    <L 395>
        wp::adj_add(var_498, var_500, adj_498, adj_500, adj_501);
        wp::adj_mul(var_499, var_107, adj_499, adj_107, adj_500);
        wp::adj_mul(var_31, var_55, adj_31, adj_55, adj_499);
        // adj: + x2 * y4 * r1                                                                    <L 394>
        wp::adj_add(var_495, var_497, adj_495, adj_497, adj_498);
        wp::adj_mul(var_496, var_79, adj_496, adj_79, adj_497);
        wp::adj_mul(var_59, var_55, adj_59, adj_55, adj_496);
        // adj: + z1 * y4 * p2                                                                    <L 393>
        wp::adj_sub(var_492, var_494, adj_492, adj_494, adj_495);
        wp::adj_mul(var_493, var_95, adj_493, adj_95, adj_494);
        wp::adj_mul(var_59, var_39, adj_59, adj_39, adj_493);
        // adj: - z1 * x4 * q2                                                                    <L 392>
        wp::adj_sub(var_489, var_491, adj_489, adj_491, adj_492);
        wp::adj_mul(var_490, var_87, adj_490, adj_87, adj_491);
        wp::adj_mul(var_59, var_47, adj_59, adj_47, adj_490);
        // adj: - z1 * y2 * p4                                                                    <L 391>
        wp::adj_add(var_486, var_488, adj_486, adj_488, adj_489);
        wp::adj_mul(var_487, var_103, adj_487, adj_103, adj_488);
        wp::adj_mul(var_59, var_31, adj_59, adj_31, adj_487);
        // adj: + z1 * x2 * q4                                                                    <L 390>
        wp::adj_sub(var_483, var_485, adj_483, adj_485, adj_486);
        wp::adj_mul(var_484, var_79, adj_484, adj_79, adj_485);
        wp::adj_mul(var_43, var_71, adj_43, adj_71, adj_484);
        // adj: - y1 * z4 * p2                                                                    <L 389>
        wp::adj_add(var_480, var_482, adj_480, adj_482, adj_483);
        wp::adj_mul(var_481, var_111, adj_481, adj_111, adj_482);
        wp::adj_mul(var_43, var_39, adj_43, adj_39, adj_481);
        // adj: + y1 * x4 * r2                                                                    <L 388>
        wp::adj_add(var_477, var_479, adj_477, adj_479, adj_480);
        wp::adj_mul(var_478, var_87, adj_478, adj_87, adj_479);
        wp::adj_mul(var_43, var_63, adj_43, adj_63, adj_478);
        // adj: + y1 * z2 * p4                                                                    <L 387>
        wp::adj_sub(var_474, var_476, adj_474, adj_476, adj_477);
        wp::adj_mul(var_475, var_119, adj_475, adj_119, adj_476);
        wp::adj_mul(var_43, var_31, adj_43, adj_31, adj_475);
        // adj: - y1 * x2 * r4                                                                    <L 386>
        wp::adj_add(var_471, var_473, adj_471, adj_473, adj_474);
        wp::adj_mul(var_472, var_95, adj_472, adj_95, adj_473);
        wp::adj_mul(var_27, var_71, adj_27, adj_71, adj_472);
        // adj: + x1 * z4 * q2                                                                    <L 385>
        wp::adj_sub(var_468, var_470, adj_468, adj_470, adj_471);
        wp::adj_mul(var_469, var_111, adj_469, adj_111, adj_470);
        wp::adj_mul(var_27, var_55, adj_27, adj_55, adj_469);
        // adj: - x1 * y4 * r2                                                                    <L 384>
        wp::adj_sub(var_465, var_467, adj_465, adj_467, adj_468);
        wp::adj_mul(var_466, var_103, adj_466, adj_103, adj_467);
        wp::adj_mul(var_27, var_63, adj_27, adj_63, adj_466);
        // adj: - x1 * z2 * q4                                                                    <L 383>
        wp::adj_add(var_462, var_464, adj_462, adj_464, adj_465);
        wp::adj_mul(var_463, var_119, adj_463, adj_119, adj_464);
        wp::adj_mul(var_27, var_47, adj_27, adj_47, adj_463);
        // adj: + x1 * y2 * r4                                                                    <L 382>
        wp::adj_add(var_459, var_461, adj_459, adj_461, adj_462);
        wp::adj_mul(var_460, var_75, adj_460, adj_75, adj_461);
        wp::adj_mul(var_63, var_51, adj_63, adj_51, adj_460);
        // adj: + z2 * y3 * p1                                                                    <L 381>
        wp::adj_sub(var_456, var_458, adj_456, adj_458, adj_459);
        wp::adj_mul(var_457, var_91, adj_457, adj_91, adj_458);
        wp::adj_mul(var_63, var_35, adj_63, adj_35, adj_457);
        // adj: - z2 * x3 * q1                                                                    <L 380>
        wp::adj_sub(var_453, var_455, adj_453, adj_455, adj_456);
        wp::adj_mul(var_454, var_75, adj_454, adj_75, adj_455);
        wp::adj_mul(var_47, var_67, adj_47, adj_67, adj_454);
        // adj: - y2 * z3 * p1                                                                    <L 379>
        wp::adj_add(var_450, var_452, adj_450, adj_452, adj_453);
        wp::adj_mul(var_451, var_107, adj_451, adj_107, adj_452);
        wp::adj_mul(var_47, var_35, adj_47, adj_35, adj_451);
        // adj: + y2 * x3 * r1                                                                    <L 378>
        wp::adj_add(var_447, var_449, adj_447, adj_449, adj_450);
        wp::adj_mul(var_448, var_91, adj_448, adj_91, adj_449);
        wp::adj_mul(var_31, var_67, adj_31, adj_67, adj_448);
        // adj: + x2 * z3 * q1                                                                    <L 377>
        wp::adj_sub(var_444, var_446, adj_444, adj_446, adj_447);
        wp::adj_mul(var_445, var_107, adj_445, adj_107, adj_446);
        wp::adj_mul(var_31, var_51, adj_31, adj_51, adj_445);
        // adj: - x2 * y3 * r1                                                                    <L 376>
        wp::adj_sub(var_441, var_443, adj_441, adj_443, adj_444);
        wp::adj_mul(var_442, var_79, adj_442, adj_79, adj_443);
        wp::adj_mul(var_59, var_51, adj_59, adj_51, adj_442);
        // adj: - z1 * y3 * p2                                                                    <L 375>
        wp::adj_add(var_438, var_440, adj_438, adj_440, adj_441);
        wp::adj_mul(var_439, var_95, adj_439, adj_95, adj_440);
        wp::adj_mul(var_59, var_35, adj_59, adj_35, adj_439);
        // adj: + z1 * x3 * q2                                                                    <L 374>
        wp::adj_add(var_435, var_437, adj_435, adj_437, adj_438);
        wp::adj_mul(var_436, var_83, adj_436, adj_83, adj_437);
        wp::adj_mul(var_59, var_47, adj_59, adj_47, adj_436);
        // adj: + z1 * y2 * p3                                                                    <L 373>
        wp::adj_sub(var_432, var_434, adj_432, adj_434, adj_435);
        wp::adj_mul(var_433, var_99, adj_433, adj_99, adj_434);
        wp::adj_mul(var_59, var_31, adj_59, adj_31, adj_433);
        // adj: - z1 * x2 * q3                                                                    <L 372>
        wp::adj_add(var_429, var_431, adj_429, adj_431, adj_432);
        wp::adj_mul(var_430, var_79, adj_430, adj_79, adj_431);
        wp::adj_mul(var_43, var_67, adj_43, adj_67, adj_430);
        // adj: + y1 * z3 * p2                                                                    <L 371>
        wp::adj_sub(var_426, var_428, adj_426, adj_428, adj_429);
        wp::adj_mul(var_427, var_111, adj_427, adj_111, adj_428);
        wp::adj_mul(var_43, var_35, adj_43, adj_35, adj_427);
        // adj: - y1 * x3 * r2                                                                    <L 370>
        wp::adj_sub(var_423, var_425, adj_423, adj_425, adj_426);
        wp::adj_mul(var_424, var_83, adj_424, adj_83, adj_425);
        wp::adj_mul(var_43, var_63, adj_43, adj_63, adj_424);
        // adj: - y1 * z2 * p3                                                                    <L 369>
        wp::adj_add(var_420, var_422, adj_420, adj_422, adj_423);
        wp::adj_mul(var_421, var_115, adj_421, adj_115, adj_422);
        wp::adj_mul(var_43, var_31, adj_43, adj_31, adj_421);
        // adj: + y1 * x2 * r3                                                                    <L 368>
        wp::adj_sub(var_417, var_419, adj_417, adj_419, adj_420);
        wp::adj_mul(var_418, var_95, adj_418, adj_95, adj_419);
        wp::adj_mul(var_27, var_67, adj_27, adj_67, adj_418);
        // adj: - x1 * z3 * q2                                                                    <L 367>
        wp::adj_add(var_414, var_416, adj_414, adj_416, adj_417);
        wp::adj_mul(var_415, var_111, adj_415, adj_111, adj_416);
        wp::adj_mul(var_27, var_51, adj_27, adj_51, adj_415);
        // adj: + x1 * y3 * r2                                                                    <L 366>
        wp::adj_add(var_411, var_413, adj_411, adj_413, adj_414);
        wp::adj_mul(var_412, var_99, adj_412, adj_99, adj_413);
        wp::adj_mul(var_27, var_63, adj_27, adj_63, adj_412);
        // adj: + x1 * z2 * q3                                                                    <L 365>
        wp::adj_mul(var_410, var_115, adj_410, adj_115, adj_411);
        wp::adj_mul(var_409, var_47, adj_409, adj_47, adj_410);
        wp::adj_neg(var_27, adj_27, adj_409);
        // adj: -x1 * y2 * r3                                                                     <L 364>
        // adj: c = (                                                                             <L 363>
        wp::adj_sub(var_405, var_407, adj_405, adj_407, adj_408);
        wp::adj_mul(var_406, var_83, adj_406, adj_83, adj_407);
        wp::adj_mul(var_71, var_95, adj_71, adj_95, adj_406);
        // adj: - z4 * q2 * p3                                                                    <L 361>
        wp::adj_add(var_402, var_404, adj_402, adj_404, adj_405);
        wp::adj_mul(var_403, var_99, adj_403, adj_99, adj_404);
        wp::adj_mul(var_71, var_79, adj_71, adj_79, adj_403);
        // adj: + z4 * p2 * q3                                                                    <L 360>
        wp::adj_add(var_399, var_401, adj_399, adj_401, adj_402);
        wp::adj_mul(var_400, var_83, adj_400, adj_83, adj_401);
        wp::adj_mul(var_55, var_111, adj_55, adj_111, adj_400);
        // adj: + y4 * r2 * p3                                                                    <L 359>
        wp::adj_sub(var_396, var_398, adj_396, adj_398, adj_399);
        wp::adj_mul(var_397, var_115, adj_397, adj_115, adj_398);
        wp::adj_mul(var_55, var_79, adj_55, adj_79, adj_397);
        // adj: - y4 * p2 * r3                                                                    <L 358>
        wp::adj_sub(var_393, var_395, adj_393, adj_395, adj_396);
        wp::adj_mul(var_394, var_99, adj_394, adj_99, adj_395);
        wp::adj_mul(var_39, var_111, adj_39, adj_111, adj_394);
        // adj: - x4 * r2 * q3                                                                    <L 357>
        wp::adj_add(var_390, var_392, adj_390, adj_392, adj_393);
        wp::adj_mul(var_391, var_115, adj_391, adj_115, adj_392);
        wp::adj_mul(var_39, var_95, adj_39, adj_95, adj_391);
        // adj: + x4 * q2 * r3                                                                    <L 356>
        wp::adj_add(var_387, var_389, adj_387, adj_389, adj_390);
        wp::adj_mul(var_388, var_87, adj_388, adj_87, adj_389);
        wp::adj_mul(var_67, var_95, adj_67, adj_95, adj_388);
        // adj: + z3 * q2 * p4                                                                    <L 355>
        wp::adj_sub(var_384, var_386, adj_384, adj_386, adj_387);
        wp::adj_mul(var_385, var_103, adj_385, adj_103, adj_386);
        wp::adj_mul(var_67, var_79, adj_67, adj_79, adj_385);
        // adj: - z3 * p2 * q4                                                                    <L 354>
        wp::adj_sub(var_381, var_383, adj_381, adj_383, adj_384);
        wp::adj_mul(var_382, var_87, adj_382, adj_87, adj_383);
        wp::adj_mul(var_51, var_111, adj_51, adj_111, adj_382);
        // adj: - y3 * r2 * p4                                                                    <L 353>
        wp::adj_add(var_378, var_380, adj_378, adj_380, adj_381);
        wp::adj_mul(var_379, var_119, adj_379, adj_119, adj_380);
        wp::adj_mul(var_51, var_79, adj_51, adj_79, adj_379);
        // adj: + y3 * p2 * r4                                                                    <L 352>
        wp::adj_add(var_375, var_377, adj_375, adj_377, adj_378);
        wp::adj_mul(var_376, var_103, adj_376, adj_103, adj_377);
        wp::adj_mul(var_35, var_111, adj_35, adj_111, adj_376);
        // adj: + x3 * r2 * q4                                                                    <L 351>
        wp::adj_sub(var_372, var_374, adj_372, adj_374, adj_375);
        wp::adj_mul(var_373, var_119, adj_373, adj_119, adj_374);
        wp::adj_mul(var_35, var_95, adj_35, adj_95, adj_373);
        // adj: - x3 * q2 * r4                                                                    <L 350>
        wp::adj_sub(var_369, var_371, adj_369, adj_371, adj_372);
        wp::adj_mul(var_370, var_87, adj_370, adj_87, adj_371);
        wp::adj_mul(var_63, var_99, adj_63, adj_99, adj_370);
        // adj: - z2 * q3 * p4                                                                    <L 349>
        wp::adj_add(var_366, var_368, adj_366, adj_368, adj_369);
        wp::adj_mul(var_367, var_103, adj_367, adj_103, adj_368);
        wp::adj_mul(var_63, var_83, adj_63, adj_83, adj_367);
        // adj: + z2 * p3 * q4                                                                    <L 348>
        wp::adj_add(var_363, var_365, adj_363, adj_365, adj_366);
        wp::adj_mul(var_364, var_87, adj_364, adj_87, adj_365);
        wp::adj_mul(var_47, var_115, adj_47, adj_115, adj_364);
        // adj: + y2 * r3 * p4                                                                    <L 347>
        wp::adj_sub(var_360, var_362, adj_360, adj_362, adj_363);
        wp::adj_mul(var_361, var_119, adj_361, adj_119, adj_362);
        wp::adj_mul(var_47, var_83, adj_47, adj_83, adj_361);
        // adj: - y2 * p3 * r4                                                                    <L 346>
        wp::adj_sub(var_357, var_359, adj_357, adj_359, adj_360);
        wp::adj_mul(var_358, var_103, adj_358, adj_103, adj_359);
        wp::adj_mul(var_31, var_115, adj_31, adj_115, adj_358);
        // adj: - x2 * r3 * q4                                                                    <L 345>
        wp::adj_add(var_354, var_356, adj_354, adj_356, adj_357);
        wp::adj_mul(var_355, var_119, adj_355, adj_119, adj_356);
        wp::adj_mul(var_31, var_99, adj_31, adj_99, adj_355);
        // adj: + x2 * q3 * r4                                                                    <L 344>
        wp::adj_add(var_351, var_353, adj_351, adj_353, adj_354);
        wp::adj_mul(var_352, var_83, adj_352, adj_83, adj_353);
        wp::adj_mul(var_71, var_91, adj_71, adj_91, adj_352);
        // adj: + z4 * q1 * p3                                                                    <L 343>
        wp::adj_sub(var_348, var_350, adj_348, adj_350, adj_351);
        wp::adj_mul(var_349, var_99, adj_349, adj_99, adj_350);
        wp::adj_mul(var_71, var_75, adj_71, adj_75, adj_349);
        // adj: - z4 * p1 * q3                                                                    <L 342>
        wp::adj_sub(var_345, var_347, adj_345, adj_347, adj_348);
        wp::adj_mul(var_346, var_83, adj_346, adj_83, adj_347);
        wp::adj_mul(var_55, var_107, adj_55, adj_107, adj_346);
        // adj: - y4 * r1 * p3                                                                    <L 341>
        wp::adj_add(var_342, var_344, adj_342, adj_344, adj_345);
        wp::adj_mul(var_343, var_115, adj_343, adj_115, adj_344);
        wp::adj_mul(var_55, var_75, adj_55, adj_75, adj_343);
        // adj: + y4 * p1 * r3                                                                    <L 340>
        wp::adj_add(var_339, var_341, adj_339, adj_341, adj_342);
        wp::adj_mul(var_340, var_99, adj_340, adj_99, adj_341);
        wp::adj_mul(var_39, var_107, adj_39, adj_107, adj_340);
        // adj: + x4 * r1 * q3                                                                    <L 339>
        wp::adj_sub(var_336, var_338, adj_336, adj_338, adj_339);
        wp::adj_mul(var_337, var_115, adj_337, adj_115, adj_338);
        wp::adj_mul(var_39, var_91, adj_39, adj_91, adj_337);
        // adj: - x4 * q1 * r3                                                                    <L 338>
        wp::adj_sub(var_333, var_335, adj_333, adj_335, adj_336);
        wp::adj_mul(var_334, var_87, adj_334, adj_87, adj_335);
        wp::adj_mul(var_67, var_91, adj_67, adj_91, adj_334);
        // adj: - z3 * q1 * p4                                                                    <L 337>
        wp::adj_add(var_330, var_332, adj_330, adj_332, adj_333);
        wp::adj_mul(var_331, var_103, adj_331, adj_103, adj_332);
        wp::adj_mul(var_67, var_75, adj_67, adj_75, adj_331);
        // adj: + z3 * p1 * q4                                                                    <L 336>
        wp::adj_add(var_327, var_329, adj_327, adj_329, adj_330);
        wp::adj_mul(var_328, var_87, adj_328, adj_87, adj_329);
        wp::adj_mul(var_51, var_107, adj_51, adj_107, adj_328);
        // adj: + y3 * r1 * p4                                                                    <L 335>
        wp::adj_sub(var_324, var_326, adj_324, adj_326, adj_327);
        wp::adj_mul(var_325, var_119, adj_325, adj_119, adj_326);
        wp::adj_mul(var_51, var_75, adj_51, adj_75, adj_325);
        // adj: - y3 * p1 * r4                                                                    <L 334>
        wp::adj_sub(var_321, var_323, adj_321, adj_323, adj_324);
        wp::adj_mul(var_322, var_103, adj_322, adj_103, adj_323);
        wp::adj_mul(var_35, var_107, adj_35, adj_107, adj_322);
        // adj: - x3 * r1 * q4                                                                    <L 333>
        wp::adj_add(var_318, var_320, adj_318, adj_320, adj_321);
        wp::adj_mul(var_319, var_119, adj_319, adj_119, adj_320);
        wp::adj_mul(var_35, var_91, adj_35, adj_91, adj_319);
        // adj: + x3 * q1 * r4                                                                    <L 332>
        wp::adj_add(var_315, var_317, adj_315, adj_317, adj_318);
        wp::adj_mul(var_316, var_87, adj_316, adj_87, adj_317);
        wp::adj_mul(var_59, var_99, adj_59, adj_99, adj_316);
        // adj: + z1 * q3 * p4                                                                    <L 331>
        wp::adj_sub(var_312, var_314, adj_312, adj_314, adj_315);
        wp::adj_mul(var_313, var_103, adj_313, adj_103, adj_314);
        wp::adj_mul(var_59, var_83, adj_59, adj_83, adj_313);
        // adj: - z1 * p3 * q4                                                                    <L 330>
        wp::adj_sub(var_309, var_311, adj_309, adj_311, adj_312);
        wp::adj_mul(var_310, var_87, adj_310, adj_87, adj_311);
        wp::adj_mul(var_43, var_115, adj_43, adj_115, adj_310);
        // adj: - y1 * r3 * p4                                                                    <L 329>
        wp::adj_add(var_306, var_308, adj_306, adj_308, adj_309);
        wp::adj_mul(var_307, var_119, adj_307, adj_119, adj_308);
        wp::adj_mul(var_43, var_83, adj_43, adj_83, adj_307);
        // adj: + y1 * p3 * r4                                                                    <L 328>
        wp::adj_add(var_303, var_305, adj_303, adj_305, adj_306);
        wp::adj_mul(var_304, var_103, adj_304, adj_103, adj_305);
        wp::adj_mul(var_27, var_115, adj_27, adj_115, adj_304);
        // adj: + x1 * r3 * q4                                                                    <L 327>
        wp::adj_sub(var_300, var_302, adj_300, adj_302, adj_303);
        wp::adj_mul(var_301, var_119, adj_301, adj_119, adj_302);
        wp::adj_mul(var_27, var_99, adj_27, adj_99, adj_301);
        // adj: - x1 * q3 * r4                                                                    <L 326>
        wp::adj_sub(var_297, var_299, adj_297, adj_299, adj_300);
        wp::adj_mul(var_298, var_79, adj_298, adj_79, adj_299);
        wp::adj_mul(var_71, var_91, adj_71, adj_91, adj_298);
        // adj: - z4 * q1 * p2                                                                    <L 325>
        wp::adj_add(var_294, var_296, adj_294, adj_296, adj_297);
        wp::adj_mul(var_295, var_95, adj_295, adj_95, adj_296);
        wp::adj_mul(var_71, var_75, adj_71, adj_75, adj_295);
        // adj: + z4 * p1 * q2                                                                    <L 324>
        wp::adj_add(var_291, var_293, adj_291, adj_293, adj_294);
        wp::adj_mul(var_292, var_79, adj_292, adj_79, adj_293);
        wp::adj_mul(var_55, var_107, adj_55, adj_107, adj_292);
        // adj: + y4 * r1 * p2                                                                    <L 323>
        wp::adj_sub(var_288, var_290, adj_288, adj_290, adj_291);
        wp::adj_mul(var_289, var_111, adj_289, adj_111, adj_290);
        wp::adj_mul(var_55, var_75, adj_55, adj_75, adj_289);
        // adj: - y4 * p1 * r2                                                                    <L 322>
        wp::adj_sub(var_285, var_287, adj_285, adj_287, adj_288);
        wp::adj_mul(var_286, var_95, adj_286, adj_95, adj_287);
        wp::adj_mul(var_39, var_107, adj_39, adj_107, adj_286);
        // adj: - x4 * r1 * q2                                                                    <L 321>
        wp::adj_add(var_282, var_284, adj_282, adj_284, adj_285);
        wp::adj_mul(var_283, var_111, adj_283, adj_111, adj_284);
        wp::adj_mul(var_39, var_91, adj_39, adj_91, adj_283);
        // adj: + x4 * q1 * r2                                                                    <L 320>
        wp::adj_add(var_279, var_281, adj_279, adj_281, adj_282);
        wp::adj_mul(var_280, var_87, adj_280, adj_87, adj_281);
        wp::adj_mul(var_63, var_91, adj_63, adj_91, adj_280);
        // adj: + z2 * q1 * p4                                                                    <L 319>
        wp::adj_sub(var_276, var_278, adj_276, adj_278, adj_279);
        wp::adj_mul(var_277, var_103, adj_277, adj_103, adj_278);
        wp::adj_mul(var_63, var_75, adj_63, adj_75, adj_277);
        // adj: - z2 * p1 * q4                                                                    <L 318>
        wp::adj_sub(var_273, var_275, adj_273, adj_275, adj_276);
        wp::adj_mul(var_274, var_87, adj_274, adj_87, adj_275);
        wp::adj_mul(var_47, var_107, adj_47, adj_107, adj_274);
        // adj: - y2 * r1 * p4                                                                    <L 317>
        wp::adj_add(var_270, var_272, adj_270, adj_272, adj_273);
        wp::adj_mul(var_271, var_119, adj_271, adj_119, adj_272);
        wp::adj_mul(var_47, var_75, adj_47, adj_75, adj_271);
        // adj: + y2 * p1 * r4                                                                    <L 316>
        wp::adj_add(var_267, var_269, adj_267, adj_269, adj_270);
        wp::adj_mul(var_268, var_103, adj_268, adj_103, adj_269);
        wp::adj_mul(var_31, var_107, adj_31, adj_107, adj_268);
        // adj: + x2 * r1 * q4                                                                    <L 315>
        wp::adj_sub(var_264, var_266, adj_264, adj_266, adj_267);
        wp::adj_mul(var_265, var_119, adj_265, adj_119, adj_266);
        wp::adj_mul(var_31, var_91, adj_31, adj_91, adj_265);
        // adj: - x2 * q1 * r4                                                                    <L 314>
        wp::adj_sub(var_261, var_263, adj_261, adj_263, adj_264);
        wp::adj_mul(var_262, var_87, adj_262, adj_87, adj_263);
        wp::adj_mul(var_59, var_95, adj_59, adj_95, adj_262);
        // adj: - z1 * q2 * p4                                                                    <L 313>
        wp::adj_add(var_258, var_260, adj_258, adj_260, adj_261);
        wp::adj_mul(var_259, var_103, adj_259, adj_103, adj_260);
        wp::adj_mul(var_59, var_79, adj_59, adj_79, adj_259);
        // adj: + z1 * p2 * q4                                                                    <L 312>
        wp::adj_add(var_255, var_257, adj_255, adj_257, adj_258);
        wp::adj_mul(var_256, var_87, adj_256, adj_87, adj_257);
        wp::adj_mul(var_43, var_111, adj_43, adj_111, adj_256);
        // adj: + y1 * r2 * p4                                                                    <L 311>
        wp::adj_sub(var_252, var_254, adj_252, adj_254, adj_255);
        wp::adj_mul(var_253, var_119, adj_253, adj_119, adj_254);
        wp::adj_mul(var_43, var_79, adj_43, adj_79, adj_253);
        // adj: - y1 * p2 * r4                                                                    <L 310>
        wp::adj_sub(var_249, var_251, adj_249, adj_251, adj_252);
        wp::adj_mul(var_250, var_103, adj_250, adj_103, adj_251);
        wp::adj_mul(var_27, var_111, adj_27, adj_111, adj_250);
        // adj: - x1 * r2 * q4                                                                    <L 309>
        wp::adj_add(var_246, var_248, adj_246, adj_248, adj_249);
        wp::adj_mul(var_247, var_119, adj_247, adj_119, adj_248);
        wp::adj_mul(var_27, var_95, adj_27, adj_95, adj_247);
        // adj: + x1 * q2 * r4                                                                    <L 308>
        wp::adj_add(var_243, var_245, adj_243, adj_245, adj_246);
        wp::adj_mul(var_244, var_79, adj_244, adj_79, adj_245);
        wp::adj_mul(var_67, var_91, adj_67, adj_91, adj_244);
        // adj: + z3 * q1 * p2                                                                    <L 307>
        wp::adj_sub(var_240, var_242, adj_240, adj_242, adj_243);
        wp::adj_mul(var_241, var_95, adj_241, adj_95, adj_242);
        wp::adj_mul(var_67, var_75, adj_67, adj_75, adj_241);
        // adj: - z3 * p1 * q2                                                                    <L 306>
        wp::adj_sub(var_237, var_239, adj_237, adj_239, adj_240);
        wp::adj_mul(var_238, var_79, adj_238, adj_79, adj_239);
        wp::adj_mul(var_51, var_107, adj_51, adj_107, adj_238);
        // adj: - y3 * r1 * p2                                                                    <L 305>
        wp::adj_add(var_234, var_236, adj_234, adj_236, adj_237);
        wp::adj_mul(var_235, var_111, adj_235, adj_111, adj_236);
        wp::adj_mul(var_51, var_75, adj_51, adj_75, adj_235);
        // adj: + y3 * p1 * r2                                                                    <L 304>
        wp::adj_add(var_231, var_233, adj_231, adj_233, adj_234);
        wp::adj_mul(var_232, var_95, adj_232, adj_95, adj_233);
        wp::adj_mul(var_35, var_107, adj_35, adj_107, adj_232);
        // adj: + x3 * r1 * q2                                                                    <L 303>
        wp::adj_sub(var_228, var_230, adj_228, adj_230, adj_231);
        wp::adj_mul(var_229, var_111, adj_229, adj_111, adj_230);
        wp::adj_mul(var_35, var_91, adj_35, adj_91, adj_229);
        // adj: - x3 * q1 * r2                                                                    <L 302>
        wp::adj_sub(var_225, var_227, adj_225, adj_227, adj_228);
        wp::adj_mul(var_226, var_83, adj_226, adj_83, adj_227);
        wp::adj_mul(var_63, var_91, adj_63, adj_91, adj_226);
        // adj: - z2 * q1 * p3                                                                    <L 301>
        wp::adj_add(var_222, var_224, adj_222, adj_224, adj_225);
        wp::adj_mul(var_223, var_99, adj_223, adj_99, adj_224);
        wp::adj_mul(var_63, var_75, adj_63, adj_75, adj_223);
        // adj: + z2 * p1 * q3                                                                    <L 300>
        wp::adj_add(var_219, var_221, adj_219, adj_221, adj_222);
        wp::adj_mul(var_220, var_83, adj_220, adj_83, adj_221);
        wp::adj_mul(var_47, var_107, adj_47, adj_107, adj_220);
        // adj: + y2 * r1 * p3                                                                    <L 299>
        wp::adj_sub(var_216, var_218, adj_216, adj_218, adj_219);
        wp::adj_mul(var_217, var_115, adj_217, adj_115, adj_218);
        wp::adj_mul(var_47, var_75, adj_47, adj_75, adj_217);
        // adj: - y2 * p1 * r3                                                                    <L 298>
        wp::adj_sub(var_213, var_215, adj_213, adj_215, adj_216);
        wp::adj_mul(var_214, var_99, adj_214, adj_99, adj_215);
        wp::adj_mul(var_31, var_107, adj_31, adj_107, adj_214);
        // adj: - x2 * r1 * q3                                                                    <L 297>
        wp::adj_add(var_210, var_212, adj_210, adj_212, adj_213);
        wp::adj_mul(var_211, var_115, adj_211, adj_115, adj_212);
        wp::adj_mul(var_31, var_91, adj_31, adj_91, adj_211);
        // adj: + x2 * q1 * r3                                                                    <L 296>
        wp::adj_add(var_207, var_209, adj_207, adj_209, adj_210);
        wp::adj_mul(var_208, var_83, adj_208, adj_83, adj_209);
        wp::adj_mul(var_59, var_95, adj_59, adj_95, adj_208);
        // adj: + z1 * q2 * p3                                                                    <L 295>
        wp::adj_sub(var_204, var_206, adj_204, adj_206, adj_207);
        wp::adj_mul(var_205, var_99, adj_205, adj_99, adj_206);
        wp::adj_mul(var_59, var_79, adj_59, adj_79, adj_205);
        // adj: - z1 * p2 * q3                                                                    <L 294>
        wp::adj_sub(var_201, var_203, adj_201, adj_203, adj_204);
        wp::adj_mul(var_202, var_83, adj_202, adj_83, adj_203);
        wp::adj_mul(var_43, var_111, adj_43, adj_111, adj_202);
        // adj: - y1 * r2 * p3                                                                    <L 293>
        wp::adj_add(var_198, var_200, adj_198, adj_200, adj_201);
        wp::adj_mul(var_199, var_115, adj_199, adj_115, adj_200);
        wp::adj_mul(var_43, var_79, adj_43, adj_79, adj_199);
        // adj: + y1 * p2 * r3                                                                    <L 292>
        wp::adj_add(var_195, var_197, adj_195, adj_197, adj_198);
        wp::adj_mul(var_196, var_99, adj_196, adj_99, adj_197);
        wp::adj_mul(var_27, var_111, adj_27, adj_111, adj_196);
        // adj: + x1 * r2 * q3                                                                    <L 291>
        wp::adj_mul(var_194, var_115, adj_194, adj_115, adj_195);
        wp::adj_mul(var_193, var_95, adj_193, adj_95, adj_194);
        wp::adj_neg(var_27, adj_27, adj_193);
        // adj: -x1 * q2 * r3                                                                     <L 290>
        // adj: b = (                                                                             <L 289>
        wp::adj_sub(var_189, var_191, adj_189, adj_191, adj_192);
        wp::adj_mul(var_190, var_87, adj_190, adj_87, adj_191);
        wp::adj_mul(var_111, var_99, adj_111, adj_99, adj_190);
        // adj: - r2 * q3 * p4                                                                    <L 287>
        wp::adj_add(var_186, var_188, adj_186, adj_188, adj_189);
        wp::adj_mul(var_187, var_103, adj_187, adj_103, adj_188);
        wp::adj_mul(var_111, var_83, adj_111, adj_83, adj_187);
        // adj: + r2 * p3 * q4                                                                    <L 286>
        wp::adj_add(var_183, var_185, adj_183, adj_185, adj_186);
        wp::adj_mul(var_184, var_87, adj_184, adj_87, adj_185);
        wp::adj_mul(var_95, var_115, adj_95, adj_115, adj_184);
        // adj: + q2 * r3 * p4                                                                    <L 285>
        wp::adj_sub(var_180, var_182, adj_180, adj_182, adj_183);
        wp::adj_mul(var_181, var_119, adj_181, adj_119, adj_182);
        wp::adj_mul(var_95, var_83, adj_95, adj_83, adj_181);
        // adj: - q2 * p3 * r4                                                                    <L 284>
        wp::adj_sub(var_177, var_179, adj_177, adj_179, adj_180);
        wp::adj_mul(var_178, var_103, adj_178, adj_103, adj_179);
        wp::adj_mul(var_79, var_115, adj_79, adj_115, adj_178);
        // adj: - p2 * r3 * q4                                                                    <L 283>
        wp::adj_add(var_174, var_176, adj_174, adj_176, adj_177);
        wp::adj_mul(var_175, var_119, adj_175, adj_119, adj_176);
        wp::adj_mul(var_79, var_99, adj_79, adj_99, adj_175);
        // adj: + p2 * q3 * r4                                                                    <L 282>
        wp::adj_add(var_171, var_173, adj_171, adj_173, adj_174);
        wp::adj_mul(var_172, var_87, adj_172, adj_87, adj_173);
        wp::adj_mul(var_107, var_99, adj_107, adj_99, adj_172);
        // adj: + r1 * q3 * p4                                                                    <L 281>
        wp::adj_sub(var_168, var_170, adj_168, adj_170, adj_171);
        wp::adj_mul(var_169, var_103, adj_169, adj_103, adj_170);
        wp::adj_mul(var_107, var_83, adj_107, adj_83, adj_169);
        // adj: - r1 * p3 * q4                                                                    <L 280>
        wp::adj_sub(var_165, var_167, adj_165, adj_167, adj_168);
        wp::adj_mul(var_166, var_87, adj_166, adj_87, adj_167);
        wp::adj_mul(var_91, var_115, adj_91, adj_115, adj_166);
        // adj: - q1 * r3 * p4                                                                    <L 279>
        wp::adj_add(var_162, var_164, adj_162, adj_164, adj_165);
        wp::adj_mul(var_163, var_119, adj_163, adj_119, adj_164);
        wp::adj_mul(var_91, var_83, adj_91, adj_83, adj_163);
        // adj: + q1 * p3 * r4                                                                    <L 278>
        wp::adj_add(var_159, var_161, adj_159, adj_161, adj_162);
        wp::adj_mul(var_160, var_103, adj_160, adj_103, adj_161);
        wp::adj_mul(var_75, var_115, adj_75, adj_115, adj_160);
        // adj: + p1 * r3 * q4                                                                    <L 277>
        wp::adj_sub(var_156, var_158, adj_156, adj_158, adj_159);
        wp::adj_mul(var_157, var_119, adj_157, adj_119, adj_158);
        wp::adj_mul(var_75, var_99, adj_75, adj_99, adj_157);
        // adj: - p1 * q3 * r4                                                                    <L 276>
        wp::adj_sub(var_153, var_155, adj_153, adj_155, adj_156);
        wp::adj_mul(var_154, var_87, adj_154, adj_87, adj_155);
        wp::adj_mul(var_107, var_95, adj_107, adj_95, adj_154);
        // adj: - r1 * q2 * p4                                                                    <L 275>
        wp::adj_add(var_150, var_152, adj_150, adj_152, adj_153);
        wp::adj_mul(var_151, var_103, adj_151, adj_103, adj_152);
        wp::adj_mul(var_107, var_79, adj_107, adj_79, adj_151);
        // adj: + r1 * p2 * q4                                                                    <L 274>
        wp::adj_add(var_147, var_149, adj_147, adj_149, adj_150);
        wp::adj_mul(var_148, var_87, adj_148, adj_87, adj_149);
        wp::adj_mul(var_91, var_111, adj_91, adj_111, adj_148);
        // adj: + q1 * r2 * p4                                                                    <L 273>
        wp::adj_sub(var_144, var_146, adj_144, adj_146, adj_147);
        wp::adj_mul(var_145, var_119, adj_145, adj_119, adj_146);
        wp::adj_mul(var_91, var_79, adj_91, adj_79, adj_145);
        // adj: - q1 * p2 * r4                                                                    <L 272>
        wp::adj_sub(var_141, var_143, adj_141, adj_143, adj_144);
        wp::adj_mul(var_142, var_103, adj_142, adj_103, adj_143);
        wp::adj_mul(var_75, var_111, adj_75, adj_111, adj_142);
        // adj: - p1 * r2 * q4                                                                    <L 271>
        wp::adj_add(var_138, var_140, adj_138, adj_140, adj_141);
        wp::adj_mul(var_139, var_119, adj_139, adj_119, adj_140);
        wp::adj_mul(var_75, var_95, adj_75, adj_95, adj_139);
        // adj: + p1 * q2 * r4                                                                    <L 270>
        wp::adj_add(var_135, var_137, adj_135, adj_137, adj_138);
        wp::adj_mul(var_136, var_83, adj_136, adj_83, adj_137);
        wp::adj_mul(var_107, var_95, adj_107, adj_95, adj_136);
        // adj: + r1 * q2 * p3                                                                    <L 269>
        wp::adj_sub(var_132, var_134, adj_132, adj_134, adj_135);
        wp::adj_mul(var_133, var_99, adj_133, adj_99, adj_134);
        wp::adj_mul(var_107, var_79, adj_107, adj_79, adj_133);
        // adj: - r1 * p2 * q3                                                                    <L 268>
        wp::adj_sub(var_129, var_131, adj_129, adj_131, adj_132);
        wp::adj_mul(var_130, var_83, adj_130, adj_83, adj_131);
        wp::adj_mul(var_91, var_111, adj_91, adj_111, adj_130);
        // adj: - q1 * r2 * p3                                                                    <L 267>
        wp::adj_add(var_126, var_128, adj_126, adj_128, adj_129);
        wp::adj_mul(var_127, var_115, adj_127, adj_115, adj_128);
        wp::adj_mul(var_91, var_79, adj_91, adj_79, adj_127);
        // adj: + q1 * p2 * r3                                                                    <L 266>
        wp::adj_add(var_123, var_125, adj_123, adj_125, adj_126);
        wp::adj_mul(var_124, var_99, adj_124, adj_99, adj_125);
        wp::adj_mul(var_75, var_111, adj_75, adj_111, adj_124);
        // adj: + p1 * r2 * q3                                                                    <L 265>
        wp::adj_mul(var_122, var_115, adj_122, adj_115, adj_123);
        wp::adj_mul(var_121, var_95, adj_121, adj_95, adj_122);
        wp::adj_neg(var_75, adj_75, adj_121);
        // adj: -p1 * q2 * r3                                                                     <L 264>
        // adj: a = (                                                                             <L 263>
        wp::adj_extract(var_120, var_117, adj_118, adj_117, adj_119);
        wp::adj_load(var_118, adj_118, adj_120);
        wp::adj_address(var_p_x, var_24, adj_p_x, adj_24, adj_118);
        // adj: r4 = p_x[i4][2]                                                                   <L 261>
        wp::adj_extract(var_116, var_113, adj_114, adj_113, adj_115);
        wp::adj_load(var_114, adj_114, adj_116);
        wp::adj_address(var_p_x, var_22, adj_p_x, adj_22, adj_114);
        // adj: r3 = p_x[i3][2]                                                                   <L 260>
        wp::adj_extract(var_112, var_109, adj_110, adj_109, adj_111);
        wp::adj_load(var_110, adj_110, adj_112);
        wp::adj_address(var_p_x, var_20, adj_p_x, adj_20, adj_110);
        // adj: r2 = p_x[i2][2]                                                                   <L 259>
        wp::adj_extract(var_108, var_105, adj_106, adj_105, adj_107);
        wp::adj_load(var_106, adj_106, adj_108);
        wp::adj_address(var_p_x, var_18, adj_p_x, adj_18, adj_106);
        // adj: r1 = p_x[i1][2]                                                                   <L 258>
        wp::adj_extract(var_104, var_101, adj_102, adj_101, adj_103);
        wp::adj_load(var_102, adj_102, adj_104);
        wp::adj_address(var_p_x, var_24, adj_p_x, adj_24, adj_102);
        // adj: q4 = p_x[i4][1]                                                                   <L 257>
        wp::adj_extract(var_100, var_97, adj_98, adj_97, adj_99);
        wp::adj_load(var_98, adj_98, adj_100);
        wp::adj_address(var_p_x, var_22, adj_p_x, adj_22, adj_98);
        // adj: q3 = p_x[i3][1]                                                                   <L 256>
        wp::adj_extract(var_96, var_93, adj_94, adj_93, adj_95);
        wp::adj_load(var_94, adj_94, adj_96);
        wp::adj_address(var_p_x, var_20, adj_p_x, adj_20, adj_94);
        // adj: q2 = p_x[i2][1]                                                                   <L 255>
        wp::adj_extract(var_92, var_89, adj_90, adj_89, adj_91);
        wp::adj_load(var_90, adj_90, adj_92);
        wp::adj_address(var_p_x, var_18, adj_p_x, adj_18, adj_90);
        // adj: q1 = p_x[i1][1]                                                                   <L 254>
        wp::adj_extract(var_88, var_85, adj_86, adj_85, adj_87);
        wp::adj_load(var_86, adj_86, adj_88);
        wp::adj_address(var_p_x, var_24, adj_p_x, adj_24, adj_86);
        // adj: p4 = p_x[i4][0]                                                                   <L 253>
        wp::adj_extract(var_84, var_81, adj_82, adj_81, adj_83);
        wp::adj_load(var_82, adj_82, adj_84);
        wp::adj_address(var_p_x, var_22, adj_p_x, adj_22, adj_82);
        // adj: p3 = p_x[i3][0]                                                                   <L 252>
        wp::adj_extract(var_80, var_77, adj_78, adj_77, adj_79);
        wp::adj_load(var_78, adj_78, adj_80);
        wp::adj_address(var_p_x, var_20, adj_p_x, adj_20, adj_78);
        // adj: p2 = p_x[i2][0]                                                                   <L 251>
        wp::adj_extract(var_76, var_73, adj_74, adj_73, adj_75);
        wp::adj_load(var_74, adj_74, adj_76);
        wp::adj_address(var_p_x, var_18, adj_p_x, adj_18, adj_74);
        // adj: p1 = p_x[i1][0]                                                                   <L 250>
        wp::adj_extract(var_72, var_69, adj_70, adj_69, adj_71);
        wp::adj_load(var_70, adj_70, adj_72);
        wp::adj_address(var_x, var_24, adj_x, adj_24, adj_70);
        // adj: z4 = x[i4][2]                                                                     <L 248>
        wp::adj_extract(var_68, var_65, adj_66, adj_65, adj_67);
        wp::adj_load(var_66, adj_66, adj_68);
        wp::adj_address(var_x, var_22, adj_x, adj_22, adj_66);
        // adj: z3 = x[i3][2]                                                                     <L 247>
        wp::adj_extract(var_64, var_61, adj_62, adj_61, adj_63);
        wp::adj_load(var_62, adj_62, adj_64);
        wp::adj_address(var_x, var_20, adj_x, adj_20, adj_62);
        // adj: z2 = x[i2][2]                                                                     <L 246>
        wp::adj_extract(var_60, var_57, adj_58, adj_57, adj_59);
        wp::adj_load(var_58, adj_58, adj_60);
        wp::adj_address(var_x, var_18, adj_x, adj_18, adj_58);
        // adj: z1 = x[i1][2]                                                                     <L 245>
        wp::adj_extract(var_56, var_53, adj_54, adj_53, adj_55);
        wp::adj_load(var_54, adj_54, adj_56);
        wp::adj_address(var_x, var_24, adj_x, adj_24, adj_54);
        // adj: y4 = x[i4][1]                                                                     <L 244>
        wp::adj_extract(var_52, var_49, adj_50, adj_49, adj_51);
        wp::adj_load(var_50, adj_50, adj_52);
        wp::adj_address(var_x, var_22, adj_x, adj_22, adj_50);
        // adj: y3 = x[i3][1]                                                                     <L 243>
        wp::adj_extract(var_48, var_45, adj_46, adj_45, adj_47);
        wp::adj_load(var_46, adj_46, adj_48);
        wp::adj_address(var_x, var_20, adj_x, adj_20, adj_46);
        // adj: y2 = x[i2][1]                                                                     <L 242>
        wp::adj_extract(var_44, var_41, adj_42, adj_41, adj_43);
        wp::adj_load(var_42, adj_42, adj_44);
        wp::adj_address(var_x, var_18, adj_x, adj_18, adj_42);
        // adj: y1 = x[i1][1]                                                                     <L 241>
        wp::adj_extract(var_40, var_37, adj_38, adj_37, adj_39);
        wp::adj_load(var_38, adj_38, adj_40);
        wp::adj_address(var_x, var_24, adj_x, adj_24, adj_38);
        // adj: x4 = x[i4][0]                                                                     <L 240>
        wp::adj_extract(var_36, var_33, adj_34, adj_33, adj_35);
        wp::adj_load(var_34, adj_34, adj_36);
        wp::adj_address(var_x, var_22, adj_x, adj_22, adj_34);
        // adj: x3 = x[i3][0]                                                                     <L 239>
        wp::adj_extract(var_32, var_29, adj_30, adj_29, adj_31);
        wp::adj_load(var_30, adj_30, adj_32);
        wp::adj_address(var_x, var_20, adj_x, adj_20, adj_30);
        // adj: x2 = x[i2][0]                                                                     <L 238>
        wp::adj_extract(var_28, var_25, adj_26, adj_25, adj_27);
        wp::adj_load(var_26, adj_26, adj_28);
        wp::adj_address(var_x, var_18, adj_x, adj_18, adj_26);
        // adj: x1 = x[i1][0]                                                                     <L 237>
        wp::adj_extract(var_15, var_23, adj_15, adj_23, adj_24);
        // adj: i4 = tet_vinds[3]                                                                 <L 236>
        wp::adj_extract(var_15, var_21, adj_15, adj_21, adj_22);
        // adj: i3 = tet_vinds[2]                                                                 <L 235>
        wp::adj_extract(var_15, var_19, adj_15, adj_19, adj_20);
        // adj: i2 = tet_vinds[1]                                                                 <L 234>
        wp::adj_extract(var_15, var_17, adj_15, adj_17, adj_18);
        // adj: i1 = tet_vinds[0]                                                                 <L 233>
        wp::adj_copy(var_16, adj_14, adj_15);
        wp::adj_load(var_14, adj_14, adj_16);
        wp::adj_address(var_tet_elems, var_0, adj_tet_elems, adj_0, adj_14);
        // adj: tet_vinds = tet_elems[tid]                                                        <L 232>
        if (var_13) {
            label0:;
            // adj: return                                                                        <L 231>
        }
        wp::adj_load(var_8, adj_8, adj_12);
        wp::adj_address(var_env_states, var_9, adj_env_states, adj_7, adj_8);
        wp::adj_load(var_7, adj_7, adj_9);
        wp::adj_address(var_tet_envs, var_0, adj_tet_envs, adj_0, adj_7);
        wp::adj_load(var_2, adj_2, adj_6);
        wp::adj_address(var_env_states, var_3, adj_env_states, adj_1, adj_2);
        wp::adj_load(var_1, adj_1, adj_3);
        wp::adj_address(var_tet_envs, var_0, adj_tet_envs, adj_0, adj_1);
        // adj: if env_states[tet_envs[tid]] == ENV_STATE_INVALID or env_states[tet_envs[tid]] == ENV_STATE_NEWTON_SOLVED:  <L 230>
        // adj: tid = wp.tid()                                                                    <L 229>
        // adj: def init_step_size_inversion_free_kernel(                                         <L 217>
        continue;
    }
}



extern "C" __global__ void bvh_query_aabb_EE_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::int32> var_num_collisions,
    wp::array_t<wp::int32> var_EE_count,
    wp::array_t<wp::int32> var_nodeI,
    wp::array_t<wp::int32> var_nodeJ,
    wp::array_t<wp::int32> var_bodyI,
    wp::array_t<wp::int32> var_bodyJ,
    wp::array_t<wp::int32> var_collision_type,
    wp::uint64 var_EE_bvh_id,
    wp::array_t<wp::vec_t<3,wp::float32>> var_edgeBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> var_edgeBB_upper,
    wp::array_t<wp::vec_t<2,wp::int32>> var_edge,
    wp::array_t<wp::int32> var_edge2body,
    wp::array_t<wp::int32> var_body_enable_self_collision,
    wp::array_t<wp::int32> var_body_env_id,
    wp::array_t<wp::int32> var_env_states,
    wp::array_t<wp::int64> var_body_collision_layer,
    wp::array_t<wp::int64> var_collision_layer_filter,
    wp::array_t<wp::int32> var_stitch_map,
    wp::array_t<wp::int32> var_num_stitch_per_x,
    wp::int32 var_max_collision,
    wp::array_t<wp::int32> var_explode)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        const wp::int32 var_0 = 0;
        wp::int32* var_1;
        wp::int32 var_2;
        wp::int32 var_3;
        wp::int32 var_4;
        wp::int32* var_5;
        wp::int32 var_6;
        wp::int32 var_7;
        wp::int32* var_8;
        wp::int32 var_9;
        wp::int32 var_10;
        wp::int32* var_11;
        const wp::int32 var_12 = 1;
        bool var_13;
        wp::int32 var_14;
        wp::int32* var_15;
        const wp::int32 var_16 = 2;
        bool var_17;
        wp::int32 var_18;
        bool var_19;
        wp::vec_t<3,wp::float32>* var_20;
        wp::vec_t<3,wp::float32>* var_21;
        wp::bvh_query_t var_22;
        wp::vec_t<3,wp::float32> var_23;
        wp::vec_t<3,wp::float32> var_24;
        const wp::int32 var_25 = 0;
        wp::int32 var_26;
        wp::int64* var_27;
        wp::int64 var_28;
        wp::int64 var_29;
        wp::int32 var_30;
        wp::int64* var_31;
        wp::int64 var_32;
        wp::int64 var_33;
        wp::int32* var_34;
        wp::int32 var_35;
        wp::int32 var_36;
        const wp::int32 var_37 = 0;
        wp::vec_t<2,wp::int32>* var_38;
        wp::int32 var_39;
        wp::vec_t<2,wp::int32> var_40;
        const wp::int32 var_41 = 1;
        wp::vec_t<2,wp::int32>* var_42;
        wp::int32 var_43;
        wp::vec_t<2,wp::int32> var_44;
        bool var_45;
        const bool var_46 = true;
        bool var_47;
        wp::vec_t<2,wp::int32>* var_48;
        bool var_49;
        wp::vec_t<2,wp::int32> var_50;
        wp::vec_t<2,wp::int32>* var_51;
        bool var_52;
        wp::vec_t<2,wp::int32> var_53;
        bool var_54;
        const bool var_55 = false;
        bool var_56;
        bool var_57;
        wp::int32* var_58;
        wp::range_t var_59;
        wp::int32 var_60;
        wp::int32 var_61;
        wp::vec_t<2,wp::int32>* var_62;
        wp::int32* var_63;
        bool var_64;
        wp::vec_t<2,wp::int32> var_65;
        wp::int32 var_66;
        const bool var_67 = false;
        bool var_68;
        bool var_69;
        wp::int32* var_70;
        wp::range_t var_71;
        wp::int32 var_72;
        wp::int32 var_73;
        wp::vec_t<2,wp::int32>* var_74;
        wp::int32* var_75;
        bool var_76;
        wp::vec_t<2,wp::int32> var_77;
        wp::int32 var_78;
        const bool var_79 = false;
        bool var_80;
        bool var_81;
        wp::int32* var_82;
        wp::int32 var_83;
        wp::int32 var_84;
        wp::int64* var_85;
        wp::int64 var_86;
        wp::int64 var_87;
        wp::int32* var_88;
        wp::int32 var_89;
        wp::int32 var_90;
        bool var_91;
        wp::int64 var_92;
        const wp::int32 var_93 = 2;
        wp::int64 var_94;
        wp::int64 var_95;
        const wp::int32 var_96 = 1;
        wp::int64 var_97;
        bool var_98;
        bool var_99;
        bool var_100;
        bool var_101;
        const wp::int32 var_102 = 0;
        const wp::int32 var_103 = 1;
        wp::int32 var_104;
        const wp::int32 var_105 = 1;
        wp::int32 var_106;
        bool var_107;
        const wp::int32 var_108 = 0;
        const wp::int32 var_109 = 1;
        wp::int32 var_110;
        const wp::int32 var_111 = 0;
        const wp::int32 var_112 = 1;
        wp::int32 var_113;
        wp::int32* var_114;
        wp::int32 var_115;
        const wp::int32 var_116 = 2;
        //---------
        // forward
        // def bvh_query_aabb_EE(                                                                 <L 678>
        // if explode[0]:                                                                         <L 701>
        var_1 = wp::address(var_explode, var_0);
        var_2 = wp::load(var_1);
        if (var_2) {
            // return                                                                             <L 702>
            continue;
        }
        var_3 = wp::load(var_1);
        // idx = wp.tid()                                                                         <L 703>
        var_4 = builtin_tid1d();
        // body_ei = edge2body[idx]                                                               <L 704>
        var_5 = wp::address(var_edge2body, var_4);
        var_7 = wp::load(var_5);
        var_6 = wp::copy(var_7);
        // env_ei = body_env_id[body_ei]                                                          <L 705>
        var_8 = wp::address(var_body_env_id, var_6);
        var_10 = wp::load(var_8);
        var_9 = wp::copy(var_10);
        // if (env_states[env_ei] == ENV_STATE_INVALID) or (env_states[env_ei] == ENV_STATE_NEWTON_SOLVED):       <L 706>
        var_11 = wp::address(var_env_states, var_9);
        var_14 = wp::load(var_11);
        var_13 = (var_14 == var_12);
        var_15 = wp::address(var_env_states, var_9);
        var_18 = wp::load(var_15);
        var_17 = (var_18 == var_16);
        var_19 = var_13 || var_17;
        if (var_19) {
            // return                                                                             <L 707>
            continue;
        }
        // query = wp.bvh_query_aabb(EE_bvh_id, edgeBB_lower[idx], edgeBB_upper[idx])             <L 708>
        var_20 = wp::address(var_edgeBB_lower, var_4);
        var_21 = wp::address(var_edgeBB_upper, var_4);
        var_23 = wp::load(var_20);
        var_24 = wp::load(var_21);
        var_22 = wp::bvh_query_aabb(var_EE_bvh_id, var_23, var_24);
        // bounds_nr = wp.int32(0)                                                                <L 709>
        var_26 = wp::int32(var_25);
        // layer_ei = body_collision_layer[body_ei]                                               <L 710>
        var_27 = wp::address(var_body_collision_layer, var_6);
        var_29 = wp::load(var_27);
        var_28 = wp::copy(var_29);
        // filter_ei = collision_layer_filter[wp.int32(layer_ei)]                                 <L 711>
        var_30 = wp::int32(var_28);
        var_31 = wp::address(var_collision_layer_filter, var_30);
        var_33 = wp::load(var_31);
        var_32 = wp::copy(var_33);
        // include_self = body_enable_self_collision[body_ei]                                     <L 712>
        var_34 = wp::address(var_body_enable_self_collision, var_6);
        var_36 = wp::load(var_34);
        var_35 = wp::copy(var_36);
        // e0 = edge[idx][0]                                                                      <L 713>
        var_38 = wp::address(var_edge, var_4);
        var_40 = wp::load(var_38);
        var_39 = wp::extract(var_40, var_37);
        // e1 = edge[idx][1]                                                                      <L 714>
        var_42 = wp::address(var_edge, var_4);
        var_44 = wp::load(var_42);
        var_43 = wp::extract(var_44, var_41);
        // while wp.bvh_query_next(query, bounds_nr):                                             <L 715>
        start_while_2:;
        var_45 = wp::bvh_query_next(var_22, var_26);
        if ((var_45) == false) goto end_while_2;
            // valid = wp.bool(True)                                                              <L 716>
            var_47 = bool(var_46);
            // if subset2(edge[bounds_nr], e0) or subset2(edge[bounds_nr], e1):                   <L 717>
            var_48 = wp::address(var_edge, var_26);
            var_50 = wp::load(var_48);
            var_49 = subset2_0(var_50, var_39);
            var_51 = wp::address(var_edge, var_26);
            var_53 = wp::load(var_51);
            var_52 = subset2_0(var_53, var_43);
            var_54 = var_49 || var_52;
            if (var_54) {
                // valid = wp.bool(False)                                                         <L 718>
                var_56 = bool(var_55);
            }
            var_57 = wp::where(var_54, var_56, var_47);
            // for i in range(num_stitch_per_x[e0]):                                              <L 719>
            var_58 = wp::address(var_num_stitch_per_x, var_39);
            var_60 = wp::load(var_58);
            var_59 = wp::range(var_60);
            start_for_4:;
                if (iter_cmp(var_59) == 0) goto end_for_4;
                var_61 = wp::iter_next(var_59);
                // if subset2(edge[bounds_nr], stitch_map[e0, i]):                                <L 720>
                var_62 = wp::address(var_edge, var_26);
                var_63 = wp::address(var_stitch_map, var_39, var_61);
                var_65 = wp::load(var_62);
                var_66 = wp::load(var_63);
                var_64 = subset2_0(var_65, var_66);
                if (var_64) {
                    // valid = wp.bool(False)                                                     <L 721>
                    var_68 = bool(var_67);
                }
                var_69 = wp::where(var_64, var_68, var_57);
                wp::assign(var_57, var_69);
                goto start_for_4;
            end_for_4:;
            // for i in range(num_stitch_per_x[e1]):                                              <L 722>
            var_70 = wp::address(var_num_stitch_per_x, var_43);
            var_72 = wp::load(var_70);
            var_71 = wp::range(var_72);
            start_for_6:;
                if (iter_cmp(var_71) == 0) goto end_for_6;
                var_73 = wp::iter_next(var_71);
                // if subset2(edge[bounds_nr], stitch_map[e1, i]):                                <L 723>
                var_74 = wp::address(var_edge, var_26);
                var_75 = wp::address(var_stitch_map, var_43, var_73);
                var_77 = wp::load(var_74);
                var_78 = wp::load(var_75);
                var_76 = subset2_0(var_77, var_78);
                if (var_76) {
                    // valid = wp.bool(False)                                                     <L 724>
                    var_80 = bool(var_79);
                }
                var_81 = wp::where(var_76, var_80, var_57);
                wp::assign(var_57, var_81);
                goto start_for_6;
            end_for_6:;
            // if valid:                                                                          <L 725>
            if (var_57) {
                // body_ej = edge2body[bounds_nr]                                                 <L 726>
                var_82 = wp::address(var_edge2body, var_26);
                var_84 = wp::load(var_82);
                var_83 = wp::copy(var_84);
                // layer_ej = body_collision_layer[body_ej]                                       <L 727>
                var_85 = wp::address(var_body_collision_layer, var_83);
                var_87 = wp::load(var_85);
                var_86 = wp::copy(var_87);
                // env_ej = body_env_id[body_ej]                                                  <L 728>
                var_88 = wp::address(var_body_env_id, var_83);
                var_90 = wp::load(var_88);
                var_89 = wp::copy(var_90);
                // pass_env_id = env_ei == env_ej                                                 <L 729>
                var_91 = (var_9 == var_89);
                // pass_collision_filter = (filter_ei >> layer_ej) % wp.int64(2) == wp.int64(1)       <L 730>
                var_92 = wp::rshift(var_32, var_86);
                var_94 = wp::int64(var_93);
                var_95 = wp::mod(var_92, var_94);
                var_97 = wp::int64(var_96);
                var_98 = (var_95 == var_97);
                // if (include_self or (body_ej != body_ei)) and pass_collision_filter and pass_env_id:       <L 731>
                var_99 = (var_83 != var_6);
                var_100 = var_35 || var_99;
                var_101 = var_100 && var_98 && var_91;
                if (var_101) {
                    // offset = wp.atomic_add(num_collisions, 0, 1)                               <L 732>
                    var_104 = wp::atomic_add(var_num_collisions, var_102, var_103);
                    // if offset >= max_collision - 1:                                            <L 733>
                    var_106 = wp::sub(var_max_collision, var_105);
                    var_107 = (var_104 >= var_106);
                    if (var_107) {
                        // wp.atomic_max(explode, 0, 1)                                           <L 734>
                        var_110 = wp::atomic_max(var_explode, var_108, var_109);
                        // return                                                                 <L 735>
                        continue;
                    }
                    // wp.atomic_add(EE_count, 0, 1)                                              <L 736>
                    var_113 = wp::atomic_add(var_EE_count, var_111, var_112);
                    // nodeI[offset] = idx                                                        <L 737>
                    wp::array_store(var_nodeI, var_104, var_4);
                    // bodyI[offset] = body_ei                                                    <L 738>
                    wp::array_store(var_bodyI, var_104, var_6);
                    // nodeJ[offset] = bounds_nr                                                  <L 739>
                    wp::array_store(var_nodeJ, var_104, var_26);
                    // bodyJ[offset] = edge2body[bounds_nr]                                       <L 740>
                    var_114 = wp::address(var_edge2body, var_26);
                    var_115 = wp::load(var_114);
                    wp::array_store(var_bodyJ, var_104, var_115);
                    // collision_type[offset] = EDGE_EDGE_PAIR                                    <L 741>
                    wp::array_store(var_collision_type, var_104, var_116);
                }
            }
        goto start_while_2;
        end_while_2:;
    }
}



extern "C" __global__ void bvh_query_aabb_EE_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::int32> var_num_collisions,
    wp::array_t<wp::int32> var_EE_count,
    wp::array_t<wp::int32> var_nodeI,
    wp::array_t<wp::int32> var_nodeJ,
    wp::array_t<wp::int32> var_bodyI,
    wp::array_t<wp::int32> var_bodyJ,
    wp::array_t<wp::int32> var_collision_type,
    wp::uint64 var_EE_bvh_id,
    wp::array_t<wp::vec_t<3,wp::float32>> var_edgeBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> var_edgeBB_upper,
    wp::array_t<wp::vec_t<2,wp::int32>> var_edge,
    wp::array_t<wp::int32> var_edge2body,
    wp::array_t<wp::int32> var_body_enable_self_collision,
    wp::array_t<wp::int32> var_body_env_id,
    wp::array_t<wp::int32> var_env_states,
    wp::array_t<wp::int64> var_body_collision_layer,
    wp::array_t<wp::int64> var_collision_layer_filter,
    wp::array_t<wp::int32> var_stitch_map,
    wp::array_t<wp::int32> var_num_stitch_per_x,
    wp::int32 var_max_collision,
    wp::array_t<wp::int32> var_explode,
    wp::array_t<wp::int32> adj_num_collisions,
    wp::array_t<wp::int32> adj_EE_count,
    wp::array_t<wp::int32> adj_nodeI,
    wp::array_t<wp::int32> adj_nodeJ,
    wp::array_t<wp::int32> adj_bodyI,
    wp::array_t<wp::int32> adj_bodyJ,
    wp::array_t<wp::int32> adj_collision_type,
    wp::uint64 adj_EE_bvh_id,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_edgeBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_edgeBB_upper,
    wp::array_t<wp::vec_t<2,wp::int32>> adj_edge,
    wp::array_t<wp::int32> adj_edge2body,
    wp::array_t<wp::int32> adj_body_enable_self_collision,
    wp::array_t<wp::int32> adj_body_env_id,
    wp::array_t<wp::int32> adj_env_states,
    wp::array_t<wp::int64> adj_body_collision_layer,
    wp::array_t<wp::int64> adj_collision_layer_filter,
    wp::array_t<wp::int32> adj_stitch_map,
    wp::array_t<wp::int32> adj_num_stitch_per_x,
    wp::int32 adj_max_collision,
    wp::array_t<wp::int32> adj_explode)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        const wp::int32 var_0 = 0;
        wp::int32* var_1;
        wp::int32 var_2;
        wp::int32 var_3;
        wp::int32 var_4;
        wp::int32* var_5;
        wp::int32 var_6;
        wp::int32 var_7;
        wp::int32* var_8;
        wp::int32 var_9;
        wp::int32 var_10;
        wp::int32* var_11;
        const wp::int32 var_12 = 1;
        bool var_13;
        wp::int32 var_14;
        wp::int32* var_15;
        const wp::int32 var_16 = 2;
        bool var_17;
        wp::int32 var_18;
        bool var_19;
        wp::vec_t<3,wp::float32>* var_20;
        wp::vec_t<3,wp::float32>* var_21;
        wp::bvh_query_t var_22;
        wp::vec_t<3,wp::float32> var_23;
        wp::vec_t<3,wp::float32> var_24;
        const wp::int32 var_25 = 0;
        wp::int32 var_26;
        wp::int64* var_27;
        wp::int64 var_28;
        wp::int64 var_29;
        wp::int32 var_30;
        wp::int64* var_31;
        wp::int64 var_32;
        wp::int64 var_33;
        wp::int32* var_34;
        wp::int32 var_35;
        wp::int32 var_36;
        const wp::int32 var_37 = 0;
        wp::vec_t<2,wp::int32>* var_38;
        wp::int32 var_39;
        wp::vec_t<2,wp::int32> var_40;
        const wp::int32 var_41 = 1;
        wp::vec_t<2,wp::int32>* var_42;
        wp::int32 var_43;
        wp::vec_t<2,wp::int32> var_44;
        bool var_45;
        const bool var_46 = true;
        bool var_47;
        wp::vec_t<2,wp::int32>* var_48;
        bool var_49;
        wp::vec_t<2,wp::int32> var_50;
        wp::vec_t<2,wp::int32>* var_51;
        bool var_52;
        wp::vec_t<2,wp::int32> var_53;
        bool var_54;
        const bool var_55 = false;
        bool var_56;
        bool var_57;
        wp::int32* var_58;
        wp::range_t var_59;
        wp::int32 var_60;
        wp::int32 var_61;
        wp::vec_t<2,wp::int32>* var_62;
        wp::int32* var_63;
        bool var_64;
        wp::vec_t<2,wp::int32> var_65;
        wp::int32 var_66;
        const bool var_67 = false;
        bool var_68;
        bool var_69;
        wp::int32* var_70;
        wp::range_t var_71;
        wp::int32 var_72;
        wp::int32 var_73;
        wp::vec_t<2,wp::int32>* var_74;
        wp::int32* var_75;
        bool var_76;
        wp::vec_t<2,wp::int32> var_77;
        wp::int32 var_78;
        const bool var_79 = false;
        bool var_80;
        bool var_81;
        wp::int32* var_82;
        wp::int32 var_83;
        wp::int32 var_84;
        wp::int64* var_85;
        wp::int64 var_86;
        wp::int64 var_87;
        wp::int32* var_88;
        wp::int32 var_89;
        wp::int32 var_90;
        bool var_91;
        wp::int64 var_92;
        const wp::int32 var_93 = 2;
        wp::int64 var_94;
        wp::int64 var_95;
        const wp::int32 var_96 = 1;
        wp::int64 var_97;
        bool var_98;
        bool var_99;
        bool var_100;
        bool var_101;
        const wp::int32 var_102 = 0;
        const wp::int32 var_103 = 1;
        wp::int32 var_104;
        const wp::int32 var_105 = 1;
        wp::int32 var_106;
        bool var_107;
        const wp::int32 var_108 = 0;
        const wp::int32 var_109 = 1;
        wp::int32 var_110;
        const wp::int32 var_111 = 0;
        const wp::int32 var_112 = 1;
        wp::int32 var_113;
        wp::int32* var_114;
        wp::int32 var_115;
        const wp::int32 var_116 = 2;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        wp::int32 adj_3 = {};
        wp::int32 adj_4 = {};
        wp::int32 adj_5 = {};
        wp::int32 adj_6 = {};
        wp::int32 adj_7 = {};
        wp::int32 adj_8 = {};
        wp::int32 adj_9 = {};
        wp::int32 adj_10 = {};
        wp::int32 adj_11 = {};
        wp::int32 adj_12 = {};
        bool adj_13 = {};
        wp::int32 adj_14 = {};
        wp::int32 adj_15 = {};
        wp::int32 adj_16 = {};
        bool adj_17 = {};
        wp::int32 adj_18 = {};
        bool adj_19 = {};
        wp::vec_t<3,wp::float32> adj_20 = {};
        wp::vec_t<3,wp::float32> adj_21 = {};
        wp::bvh_query_t adj_22 = {};
        wp::vec_t<3,wp::float32> adj_23 = {};
        wp::vec_t<3,wp::float32> adj_24 = {};
        wp::int32 adj_25 = {};
        wp::int32 adj_26 = {};
        wp::int64 adj_27 = {};
        wp::int64 adj_28 = {};
        wp::int64 adj_29 = {};
        wp::int32 adj_30 = {};
        wp::int64 adj_31 = {};
        wp::int64 adj_32 = {};
        wp::int64 adj_33 = {};
        wp::int32 adj_34 = {};
        wp::int32 adj_35 = {};
        wp::int32 adj_36 = {};
        wp::int32 adj_37 = {};
        wp::vec_t<2,wp::int32> adj_38 = {};
        wp::int32 adj_39 = {};
        wp::vec_t<2,wp::int32> adj_40 = {};
        wp::int32 adj_41 = {};
        wp::vec_t<2,wp::int32> adj_42 = {};
        wp::int32 adj_43 = {};
        wp::vec_t<2,wp::int32> adj_44 = {};
        bool adj_45 = {};
        bool adj_46 = {};
        bool adj_47 = {};
        wp::vec_t<2,wp::int32> adj_48 = {};
        bool adj_49 = {};
        wp::vec_t<2,wp::int32> adj_50 = {};
        wp::vec_t<2,wp::int32> adj_51 = {};
        bool adj_52 = {};
        wp::vec_t<2,wp::int32> adj_53 = {};
        bool adj_54 = {};
        bool adj_55 = {};
        bool adj_56 = {};
        bool adj_57 = {};
        wp::int32 adj_58 = {};
        wp::range_t adj_59 = {};
        wp::int32 adj_60 = {};
        wp::int32 adj_61 = {};
        wp::vec_t<2,wp::int32> adj_62 = {};
        wp::int32 adj_63 = {};
        bool adj_64 = {};
        wp::vec_t<2,wp::int32> adj_65 = {};
        wp::int32 adj_66 = {};
        bool adj_67 = {};
        bool adj_68 = {};
        bool adj_69 = {};
        wp::int32 adj_70 = {};
        wp::range_t adj_71 = {};
        wp::int32 adj_72 = {};
        wp::int32 adj_73 = {};
        wp::vec_t<2,wp::int32> adj_74 = {};
        wp::int32 adj_75 = {};
        bool adj_76 = {};
        wp::vec_t<2,wp::int32> adj_77 = {};
        wp::int32 adj_78 = {};
        bool adj_79 = {};
        bool adj_80 = {};
        bool adj_81 = {};
        wp::int32 adj_82 = {};
        wp::int32 adj_83 = {};
        wp::int32 adj_84 = {};
        wp::int64 adj_85 = {};
        wp::int64 adj_86 = {};
        wp::int64 adj_87 = {};
        wp::int32 adj_88 = {};
        wp::int32 adj_89 = {};
        wp::int32 adj_90 = {};
        bool adj_91 = {};
        wp::int64 adj_92 = {};
        wp::int32 adj_93 = {};
        wp::int64 adj_94 = {};
        wp::int64 adj_95 = {};
        wp::int32 adj_96 = {};
        wp::int64 adj_97 = {};
        bool adj_98 = {};
        bool adj_99 = {};
        bool adj_100 = {};
        bool adj_101 = {};
        wp::int32 adj_102 = {};
        wp::int32 adj_103 = {};
        wp::int32 adj_104 = {};
        wp::int32 adj_105 = {};
        wp::int32 adj_106 = {};
        bool adj_107 = {};
        wp::int32 adj_108 = {};
        wp::int32 adj_109 = {};
        wp::int32 adj_110 = {};
        wp::int32 adj_111 = {};
        wp::int32 adj_112 = {};
        wp::int32 adj_113 = {};
        wp::int32 adj_114 = {};
        wp::int32 adj_115 = {};
        wp::int32 adj_116 = {};
        //---------
        // forward
        // def bvh_query_aabb_EE(                                                                 <L 678>
        // if explode[0]:                                                                         <L 701>
        var_1 = wp::address(var_explode, var_0);
        var_2 = wp::load(var_1);
        if (var_2) {
            // return                                                                             <L 702>
            goto label0;
        }
        var_3 = wp::load(var_1);
        // idx = wp.tid()                                                                         <L 703>
        var_4 = builtin_tid1d();
        // body_ei = edge2body[idx]                                                               <L 704>
        var_5 = wp::address(var_edge2body, var_4);
        var_7 = wp::load(var_5);
        var_6 = wp::copy(var_7);
        // env_ei = body_env_id[body_ei]                                                          <L 705>
        var_8 = wp::address(var_body_env_id, var_6);
        var_10 = wp::load(var_8);
        var_9 = wp::copy(var_10);
        // if (env_states[env_ei] == ENV_STATE_INVALID) or (env_states[env_ei] == ENV_STATE_NEWTON_SOLVED):       <L 706>
        var_11 = wp::address(var_env_states, var_9);
        var_14 = wp::load(var_11);
        var_13 = (var_14 == var_12);
        var_15 = wp::address(var_env_states, var_9);
        var_18 = wp::load(var_15);
        var_17 = (var_18 == var_16);
        var_19 = var_13 || var_17;
        if (var_19) {
            // return                                                                             <L 707>
            goto label1;
        }
        // query = wp.bvh_query_aabb(EE_bvh_id, edgeBB_lower[idx], edgeBB_upper[idx])             <L 708>
        var_20 = wp::address(var_edgeBB_lower, var_4);
        var_21 = wp::address(var_edgeBB_upper, var_4);
        var_23 = wp::load(var_20);
        var_24 = wp::load(var_21);
        var_22 = wp::bvh_query_aabb(var_EE_bvh_id, var_23, var_24);
        // bounds_nr = wp.int32(0)                                                                <L 709>
        var_26 = wp::int32(var_25);
        // layer_ei = body_collision_layer[body_ei]                                               <L 710>
        var_27 = wp::address(var_body_collision_layer, var_6);
        var_29 = wp::load(var_27);
        var_28 = wp::copy(var_29);
        // filter_ei = collision_layer_filter[wp.int32(layer_ei)]                                 <L 711>
        var_30 = wp::int32(var_28);
        var_31 = wp::address(var_collision_layer_filter, var_30);
        var_33 = wp::load(var_31);
        var_32 = wp::copy(var_33);
        // include_self = body_enable_self_collision[body_ei]                                     <L 712>
        var_34 = wp::address(var_body_enable_self_collision, var_6);
        var_36 = wp::load(var_34);
        var_35 = wp::copy(var_36);
        // e0 = edge[idx][0]                                                                      <L 713>
        var_38 = wp::address(var_edge, var_4);
        var_40 = wp::load(var_38);
        var_39 = wp::extract(var_40, var_37);
        // e1 = edge[idx][1]                                                                      <L 714>
        var_42 = wp::address(var_edge, var_4);
        var_44 = wp::load(var_42);
        var_43 = wp::extract(var_44, var_41);
        // while wp.bvh_query_next(query, bounds_nr):                                             <L 715>
        //---------
        // reverse
        start_while_2:;
        var_45 = wp::bvh_query_next(var_22, var_26);
        if ((var_45) == false) goto end_while_2;
        adj_46 = {};
        adj_47 = {};
        adj_48 = {};
        adj_49 = {};
        adj_50 = {};
        adj_51 = {};
        adj_52 = {};
        adj_53 = {};
        adj_54 = {};
        adj_55 = {};
        adj_56 = {};
        adj_57 = {};
        adj_58 = {};
        adj_59 = {};
        adj_60 = {};
        adj_70 = {};
        adj_71 = {};
        adj_72 = {};
        adj_82 = {};
        adj_83 = {};
        adj_84 = {};
        adj_85 = {};
        adj_86 = {};
        adj_87 = {};
        adj_88 = {};
        adj_89 = {};
        adj_90 = {};
        adj_91 = {};
        adj_92 = {};
        adj_93 = {};
        adj_94 = {};
        adj_95 = {};
        adj_96 = {};
        adj_97 = {};
        adj_98 = {};
        adj_99 = {};
        adj_100 = {};
        adj_101 = {};
        adj_102 = {};
        adj_103 = {};
        adj_104 = {};
        adj_105 = {};
        adj_106 = {};
        adj_107 = {};
        adj_108 = {};
        adj_109 = {};
        adj_110 = {};
        adj_111 = {};
        adj_112 = {};
        adj_113 = {};
        adj_114 = {};
        adj_115 = {};
        adj_116 = {};
            // valid = wp.bool(True)                                                              <L 716>
            var_47 = bool(var_46);
            // if subset2(edge[bounds_nr], e0) or subset2(edge[bounds_nr], e1):                   <L 717>
            var_48 = wp::address(var_edge, var_26);
            var_50 = wp::load(var_48);
            var_49 = subset2_0(var_50, var_39);
            var_51 = wp::address(var_edge, var_26);
            var_53 = wp::load(var_51);
            var_52 = subset2_0(var_53, var_43);
            var_54 = var_49 || var_52;
            if (var_54) {
                // valid = wp.bool(False)                                                         <L 718>
                var_56 = bool(var_55);
            }
            var_57 = wp::where(var_54, var_56, var_47);
            // for i in range(num_stitch_per_x[e0]):                                              <L 719>
            var_58 = wp::address(var_num_stitch_per_x, var_39);
            var_60 = wp::load(var_58);
            var_59 = wp::range(var_60);
            // for i in range(num_stitch_per_x[e1]):                                              <L 722>
            var_70 = wp::address(var_num_stitch_per_x, var_43);
            var_72 = wp::load(var_70);
            var_71 = wp::range(var_72);
            // if valid:                                                                          <L 725>
            if (var_57) {
                // body_ej = edge2body[bounds_nr]                                                 <L 726>
                var_82 = wp::address(var_edge2body, var_26);
                var_84 = wp::load(var_82);
                var_83 = wp::copy(var_84);
                // layer_ej = body_collision_layer[body_ej]                                       <L 727>
                var_85 = wp::address(var_body_collision_layer, var_83);
                var_87 = wp::load(var_85);
                var_86 = wp::copy(var_87);
                // env_ej = body_env_id[body_ej]                                                  <L 728>
                var_88 = wp::address(var_body_env_id, var_83);
                var_90 = wp::load(var_88);
                var_89 = wp::copy(var_90);
                // pass_env_id = env_ei == env_ej                                                 <L 729>
                var_91 = (var_9 == var_89);
                // pass_collision_filter = (filter_ei >> layer_ej) % wp.int64(2) == wp.int64(1)       <L 730>
                var_92 = wp::rshift(var_32, var_86);
                var_94 = wp::int64(var_93);
                var_95 = wp::mod(var_92, var_94);
                var_97 = wp::int64(var_96);
                var_98 = (var_95 == var_97);
                // if (include_self or (body_ej != body_ei)) and pass_collision_filter and pass_env_id:       <L 731>
                var_99 = (var_83 != var_6);
                var_100 = var_35 || var_99;
                var_101 = var_100 && var_98 && var_91;
                if (var_101) {
                    // offset = wp.atomic_add(num_collisions, 0, 1)                               <L 732>
                    // var_104 = wp::atomic_add(var_num_collisions, var_102, var_103);
                    // if offset >= max_collision - 1:                                            <L 733>
                    var_106 = wp::sub(var_max_collision, var_105);
                    var_107 = (var_104 >= var_106);
                    if (var_107) {
                        // wp.atomic_max(explode, 0, 1)                                           <L 734>
                        // var_110 = wp::atomic_max(var_explode, var_108, var_109);
                        // return                                                                 <L 735>
                        goto label8;
                    }
                    // wp.atomic_add(EE_count, 0, 1)                                              <L 736>
                    // var_113 = wp::atomic_add(var_EE_count, var_111, var_112);
                    // nodeI[offset] = idx                                                        <L 737>
                    // wp::array_store(var_nodeI, var_104, var_4);
                    // bodyI[offset] = body_ei                                                    <L 738>
                    // wp::array_store(var_bodyI, var_104, var_6);
                    // nodeJ[offset] = bounds_nr                                                  <L 739>
                    // wp::array_store(var_nodeJ, var_104, var_26);
                    // bodyJ[offset] = edge2body[bounds_nr]                                       <L 740>
                    var_114 = wp::address(var_edge2body, var_26);
                    var_115 = wp::load(var_114);
                    // wp::array_store(var_bodyJ, var_104, var_115);
                    // collision_type[offset] = EDGE_EDGE_PAIR                                    <L 741>
                    // wp::array_store(var_collision_type, var_104, var_116);
                }
            }
            if (var_57) {
                if (var_101) {
                    wp::adj_array_store(var_collision_type, var_104, var_116, adj_collision_type, adj_104, adj_116);
                    // adj: collision_type[offset] = EDGE_EDGE_PAIR                               <L 741>
                    wp::adj_array_store(var_bodyJ, var_104, var_115, adj_bodyJ, adj_104, adj_114);
                    wp::adj_load(var_114, adj_114, adj_115);
                    wp::adj_address(var_edge2body, var_26, adj_edge2body, adj_26, adj_114);
                    // adj: bodyJ[offset] = edge2body[bounds_nr]                                  <L 740>
                    wp::adj_array_store(var_nodeJ, var_104, var_26, adj_nodeJ, adj_104, adj_26);
                    // adj: nodeJ[offset] = bounds_nr                                             <L 739>
                    wp::adj_array_store(var_bodyI, var_104, var_6, adj_bodyI, adj_104, adj_6);
                    // adj: bodyI[offset] = body_ei                                               <L 738>
                    wp::adj_array_store(var_nodeI, var_104, var_4, adj_nodeI, adj_104, adj_4);
                    // adj: nodeI[offset] = idx                                                   <L 737>
                    wp::adj_atomic_add(var_EE_count, var_111, var_112, adj_EE_count, adj_111, adj_112, adj_113);
                    // adj: wp.atomic_add(EE_count, 0, 1)                                         <L 736>
                    if (var_107) {
                        label8:;
                        // adj: return                                                            <L 735>
                        wp::adj_atomic_max(var_explode, var_108, var_109, adj_explode, adj_108, adj_109, adj_110);
                        // adj: wp.atomic_max(explode, 0, 1)                                      <L 734>
                    }
                    wp::adj_sub(var_max_collision, var_105, adj_max_collision, adj_105, adj_106);
                    // adj: if offset >= max_collision - 1:                                       <L 733>
                    wp::adj_atomic_add(var_num_collisions, var_102, var_103, adj_num_collisions, adj_102, adj_103, adj_104);
                    // adj: offset = wp.atomic_add(num_collisions, 0, 1)                          <L 732>
                }
                // adj: if (include_self or (body_ej != body_ei)) and pass_collision_filter and pass_env_id:  <L 731>
                wp::adj_int64(var_96, adj_96, adj_97);
                wp::adj_mod(var_92, var_94, adj_92, adj_94, adj_95);
                wp::adj_int64(var_93, adj_93, adj_94);
                wp::adj_rshift(var_32, var_86, adj_32, adj_86, adj_92);
                // adj: pass_collision_filter = (filter_ei >> layer_ej) % wp.int64(2) == wp.int64(1)  <L 730>
                // adj: pass_env_id = env_ei == env_ej                                            <L 729>
                wp::adj_copy(var_90, adj_88, adj_89);
                wp::adj_load(var_88, adj_88, adj_90);
                wp::adj_address(var_body_env_id, var_83, adj_body_env_id, adj_83, adj_88);
                // adj: env_ej = body_env_id[body_ej]                                             <L 728>
                wp::adj_copy(var_87, adj_85, adj_86);
                wp::adj_load(var_85, adj_85, adj_87);
                wp::adj_address(var_body_collision_layer, var_83, adj_body_collision_layer, adj_83, adj_85);
                // adj: layer_ej = body_collision_layer[body_ej]                                  <L 727>
                wp::adj_copy(var_84, adj_82, adj_83);
                wp::adj_load(var_82, adj_82, adj_84);
                wp::adj_address(var_edge2body, var_26, adj_edge2body, adj_26, adj_82);
                // adj: body_ej = edge2body[bounds_nr]                                            <L 726>
            }
            // adj: if valid:                                                                     <L 725>
            var_71 = wp::iter_reverse(var_71);
            start_for_6:;
                if (iter_cmp(var_71) == 0) goto end_for_6;
                var_73 = wp::iter_next(var_71);
            	adj_74 = {};
            	adj_75 = {};
            	adj_76 = {};
            	adj_77 = {};
            	adj_78 = {};
            	adj_79 = {};
            	adj_80 = {};
            	adj_81 = {};
                // if subset2(edge[bounds_nr], stitch_map[e1, i]):                                <L 723>
                var_74 = wp::address(var_edge, var_26);
                var_75 = wp::address(var_stitch_map, var_43, var_73);
                var_77 = wp::load(var_74);
                var_78 = wp::load(var_75);
                var_76 = subset2_0(var_77, var_78);
                if (var_76) {
                    // valid = wp.bool(False)                                                     <L 724>
                    var_80 = bool(var_79);
                }
                var_81 = wp::where(var_76, var_80, var_57);
                wp::assign(var_57, var_81);
                wp::adj_assign(var_57, var_81, adj_57, adj_81);
                wp::adj_where(var_76, var_80, var_57, adj_76, adj_80, adj_57, adj_81);
                if (var_76) {
                    adj_bool(var_79, adj_79, adj_80);
                    // adj: valid = wp.bool(False)                                                <L 724>
                }
                adj_subset2_0(var_77, var_78, adj_74, adj_75, adj_76);
                wp::adj_load(var_75, adj_75, adj_78);
                wp::adj_load(var_74, adj_74, adj_77);
                wp::adj_address(var_stitch_map, var_43, var_73, adj_stitch_map, adj_43, adj_73, adj_75);
                wp::adj_address(var_edge, var_26, adj_edge, adj_26, adj_74);
                // adj: if subset2(edge[bounds_nr], stitch_map[e1, i]):                           <L 723>
            	goto start_for_6;
            end_for_6:;
            wp::adj_range(var_72, adj_70, adj_71);
            wp::adj_load(var_70, adj_70, adj_72);
            wp::adj_address(var_num_stitch_per_x, var_43, adj_num_stitch_per_x, adj_43, adj_70);
            // adj: for i in range(num_stitch_per_x[e1]):                                         <L 722>
            var_59 = wp::iter_reverse(var_59);
            start_for_4:;
                if (iter_cmp(var_59) == 0) goto end_for_4;
                var_61 = wp::iter_next(var_59);
            	adj_62 = {};
            	adj_63 = {};
            	adj_64 = {};
            	adj_65 = {};
            	adj_66 = {};
            	adj_67 = {};
            	adj_68 = {};
            	adj_69 = {};
                // if subset2(edge[bounds_nr], stitch_map[e0, i]):                                <L 720>
                var_62 = wp::address(var_edge, var_26);
                var_63 = wp::address(var_stitch_map, var_39, var_61);
                var_65 = wp::load(var_62);
                var_66 = wp::load(var_63);
                var_64 = subset2_0(var_65, var_66);
                if (var_64) {
                    // valid = wp.bool(False)                                                     <L 721>
                    var_68 = bool(var_67);
                }
                var_69 = wp::where(var_64, var_68, var_57);
                wp::assign(var_57, var_69);
                wp::adj_assign(var_57, var_69, adj_57, adj_69);
                wp::adj_where(var_64, var_68, var_57, adj_64, adj_68, adj_57, adj_69);
                if (var_64) {
                    adj_bool(var_67, adj_67, adj_68);
                    // adj: valid = wp.bool(False)                                                <L 721>
                }
                adj_subset2_0(var_65, var_66, adj_62, adj_63, adj_64);
                wp::adj_load(var_63, adj_63, adj_66);
                wp::adj_load(var_62, adj_62, adj_65);
                wp::adj_address(var_stitch_map, var_39, var_61, adj_stitch_map, adj_39, adj_61, adj_63);
                wp::adj_address(var_edge, var_26, adj_edge, adj_26, adj_62);
                // adj: if subset2(edge[bounds_nr], stitch_map[e0, i]):                           <L 720>
            	goto start_for_4;
            end_for_4:;
            wp::adj_range(var_60, adj_58, adj_59);
            wp::adj_load(var_58, adj_58, adj_60);
            wp::adj_address(var_num_stitch_per_x, var_39, adj_num_stitch_per_x, adj_39, adj_58);
            // adj: for i in range(num_stitch_per_x[e0]):                                         <L 719>
            wp::adj_where(var_54, var_56, var_47, adj_54, adj_56, adj_47, adj_57);
            if (var_54) {
                adj_bool(var_55, adj_55, adj_56);
                // adj: valid = wp.bool(False)                                                    <L 718>
            }
            adj_subset2_0(var_53, var_43, adj_51, adj_43, adj_52);
            wp::adj_load(var_51, adj_51, adj_53);
            wp::adj_address(var_edge, var_26, adj_edge, adj_26, adj_51);
            adj_subset2_0(var_50, var_39, adj_48, adj_39, adj_49);
            wp::adj_load(var_48, adj_48, adj_50);
            wp::adj_address(var_edge, var_26, adj_edge, adj_26, adj_48);
            // adj: if subset2(edge[bounds_nr], e0) or subset2(edge[bounds_nr], e1):              <L 717>
            adj_bool(var_46, adj_46, adj_47);
            // adj: valid = wp.bool(True)                                                         <L 716>
        goto start_while_2;
        end_while_2:;
        // adj: while wp.bvh_query_next(query, bounds_nr):                                        <L 715>
        wp::adj_extract(var_44, var_41, adj_42, adj_41, adj_43);
        wp::adj_load(var_42, adj_42, adj_44);
        wp::adj_address(var_edge, var_4, adj_edge, adj_4, adj_42);
        // adj: e1 = edge[idx][1]                                                                 <L 714>
        wp::adj_extract(var_40, var_37, adj_38, adj_37, adj_39);
        wp::adj_load(var_38, adj_38, adj_40);
        wp::adj_address(var_edge, var_4, adj_edge, adj_4, adj_38);
        // adj: e0 = edge[idx][0]                                                                 <L 713>
        wp::adj_copy(var_36, adj_34, adj_35);
        wp::adj_load(var_34, adj_34, adj_36);
        wp::adj_address(var_body_enable_self_collision, var_6, adj_body_enable_self_collision, adj_6, adj_34);
        // adj: include_self = body_enable_self_collision[body_ei]                                <L 712>
        wp::adj_copy(var_33, adj_31, adj_32);
        wp::adj_load(var_31, adj_31, adj_33);
        wp::adj_address(var_collision_layer_filter, var_30, adj_collision_layer_filter, adj_30, adj_31);
        wp::adj_int32(var_28, adj_28, adj_30);
        // adj: filter_ei = collision_layer_filter[wp.int32(layer_ei)]                            <L 711>
        wp::adj_copy(var_29, adj_27, adj_28);
        wp::adj_load(var_27, adj_27, adj_29);
        wp::adj_address(var_body_collision_layer, var_6, adj_body_collision_layer, adj_6, adj_27);
        // adj: layer_ei = body_collision_layer[body_ei]                                          <L 710>
        wp::adj_int32(var_25, adj_25, adj_26);
        // adj: bounds_nr = wp.int32(0)                                                           <L 709>
        wp::adj_bvh_query_aabb(var_EE_bvh_id, var_23, var_24, adj_EE_bvh_id, adj_20, adj_21, adj_22);
        wp::adj_load(var_21, adj_21, adj_24);
        wp::adj_load(var_20, adj_20, adj_23);
        wp::adj_address(var_edgeBB_upper, var_4, adj_edgeBB_upper, adj_4, adj_21);
        wp::adj_address(var_edgeBB_lower, var_4, adj_edgeBB_lower, adj_4, adj_20);
        // adj: query = wp.bvh_query_aabb(EE_bvh_id, edgeBB_lower[idx], edgeBB_upper[idx])        <L 708>
        if (var_19) {
            label1:;
            // adj: return                                                                        <L 707>
        }
        wp::adj_load(var_15, adj_15, adj_18);
        wp::adj_address(var_env_states, var_9, adj_env_states, adj_9, adj_15);
        wp::adj_load(var_11, adj_11, adj_14);
        wp::adj_address(var_env_states, var_9, adj_env_states, adj_9, adj_11);
        // adj: if (env_states[env_ei] == ENV_STATE_INVALID) or (env_states[env_ei] == ENV_STATE_NEWTON_SOLVED):  <L 706>
        wp::adj_copy(var_10, adj_8, adj_9);
        wp::adj_load(var_8, adj_8, adj_10);
        wp::adj_address(var_body_env_id, var_6, adj_body_env_id, adj_6, adj_8);
        // adj: env_ei = body_env_id[body_ei]                                                     <L 705>
        wp::adj_copy(var_7, adj_5, adj_6);
        wp::adj_load(var_5, adj_5, adj_7);
        wp::adj_address(var_edge2body, var_4, adj_edge2body, adj_4, adj_5);
        // adj: body_ei = edge2body[idx]                                                          <L 704>
        // adj: idx = wp.tid()                                                                    <L 703>
        if (var_3) {
        wp::adj_load(var_1, adj_1, adj_3);
            label0:;
            // adj: return                                                                        <L 702>
        }
        wp::adj_load(var_1, adj_1, adj_2);
        wp::adj_address(var_explode, var_0, adj_explode, adj_0, adj_1);
        // adj: if explode[0]:                                                                    <L 701>
        // adj: def bvh_query_aabb_EE(                                                            <L 678>
        continue;
    }
}



extern "C" __global__ void compute_edge_BB_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_edgeBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> var_edgeBB_upper,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::vec_t<3,wp::float64>> var_dx,
    wp::array_t<wp::vec_t<2,wp::int32>> var_edge,
    wp::array_t<wp::float64> var_edge_xi,
    wp::float64 var_dist)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        const wp::int32 var_1 = 0;
        wp::vec_t<2,wp::int32>* var_2;
        wp::int32 var_3;
        wp::vec_t<2,wp::int32> var_4;
        wp::vec_t<3,wp::float64>* var_5;
        wp::vec_t<3,wp::float64> var_6;
        wp::vec_t<3,wp::float64> var_7;
        const wp::int32 var_8 = 1;
        wp::vec_t<2,wp::int32>* var_9;
        wp::int32 var_10;
        wp::vec_t<2,wp::int32> var_11;
        wp::vec_t<3,wp::float64>* var_12;
        wp::vec_t<3,wp::float64> var_13;
        wp::vec_t<3,wp::float64> var_14;
        const wp::int32 var_15 = 0;
        wp::vec_t<2,wp::int32>* var_16;
        wp::int32 var_17;
        wp::vec_t<2,wp::int32> var_18;
        wp::vec_t<3,wp::float64>* var_19;
        wp::vec_t<3,wp::float64> var_20;
        wp::vec_t<3,wp::float64> var_21;
        const wp::int32 var_22 = 1;
        wp::vec_t<2,wp::int32>* var_23;
        wp::int32 var_24;
        wp::vec_t<2,wp::int32> var_25;
        wp::vec_t<3,wp::float64>* var_26;
        wp::vec_t<3,wp::float64> var_27;
        wp::vec_t<3,wp::float64> var_28;
        const wp::int32 var_29 = 0;
        wp::float64 var_30;
        wp::float64 var_31;
        wp::float64 var_32;
        wp::float64 var_33;
        wp::float64 var_34;
        wp::float64 var_35;
        wp::float64 var_36;
        wp::float64 var_37;
        wp::float64 var_38;
        wp::float64 var_39;
        wp::float64 var_40;
        const wp::float32 var_41 = 2.0;
        wp::float64 var_42;
        wp::float64 var_43;
        wp::float64 var_44;
        wp::float64* var_45;
        wp::float64 var_46;
        wp::float64 var_47;
        wp::float32 var_48;
        wp::vec_t<3,wp::float32>* var_49;
        wp::float32* var_50;
        wp::float64 var_51;
        wp::float64 var_52;
        wp::float64 var_53;
        wp::float64 var_54;
        wp::float64 var_55;
        wp::float64 var_56;
        wp::float64 var_57;
        wp::float64 var_58;
        wp::float64 var_59;
        wp::float64 var_60;
        wp::float64 var_61;
        const wp::float32 var_62 = 2.0;
        wp::float64 var_63;
        wp::float64 var_64;
        wp::float64 var_65;
        wp::float64* var_66;
        wp::float64 var_67;
        wp::float64 var_68;
        wp::float32 var_69;
        wp::vec_t<3,wp::float32>* var_70;
        wp::float32* var_71;
        const wp::int32 var_72 = 1;
        wp::float64 var_73;
        wp::float64 var_74;
        wp::float64 var_75;
        wp::float64 var_76;
        wp::float64 var_77;
        wp::float64 var_78;
        wp::float64 var_79;
        wp::float64 var_80;
        wp::float64 var_81;
        wp::float64 var_82;
        wp::float64 var_83;
        const wp::float32 var_84 = 2.0;
        wp::float64 var_85;
        wp::float64 var_86;
        wp::float64 var_87;
        wp::float64* var_88;
        wp::float64 var_89;
        wp::float64 var_90;
        wp::float32 var_91;
        wp::vec_t<3,wp::float32>* var_92;
        wp::float32* var_93;
        wp::float64 var_94;
        wp::float64 var_95;
        wp::float64 var_96;
        wp::float64 var_97;
        wp::float64 var_98;
        wp::float64 var_99;
        wp::float64 var_100;
        wp::float64 var_101;
        wp::float64 var_102;
        wp::float64 var_103;
        wp::float64 var_104;
        const wp::float32 var_105 = 2.0;
        wp::float64 var_106;
        wp::float64 var_107;
        wp::float64 var_108;
        wp::float64* var_109;
        wp::float64 var_110;
        wp::float64 var_111;
        wp::float32 var_112;
        wp::vec_t<3,wp::float32>* var_113;
        wp::float32* var_114;
        const wp::int32 var_115 = 2;
        wp::float64 var_116;
        wp::float64 var_117;
        wp::float64 var_118;
        wp::float64 var_119;
        wp::float64 var_120;
        wp::float64 var_121;
        wp::float64 var_122;
        wp::float64 var_123;
        wp::float64 var_124;
        wp::float64 var_125;
        wp::float64 var_126;
        const wp::float32 var_127 = 2.0;
        wp::float64 var_128;
        wp::float64 var_129;
        wp::float64 var_130;
        wp::float64* var_131;
        wp::float64 var_132;
        wp::float64 var_133;
        wp::float32 var_134;
        wp::vec_t<3,wp::float32>* var_135;
        wp::float32* var_136;
        wp::float64 var_137;
        wp::float64 var_138;
        wp::float64 var_139;
        wp::float64 var_140;
        wp::float64 var_141;
        wp::float64 var_142;
        wp::float64 var_143;
        wp::float64 var_144;
        wp::float64 var_145;
        wp::float64 var_146;
        wp::float64 var_147;
        const wp::float32 var_148 = 2.0;
        wp::float64 var_149;
        wp::float64 var_150;
        wp::float64 var_151;
        wp::float64* var_152;
        wp::float64 var_153;
        wp::float64 var_154;
        wp::float32 var_155;
        wp::vec_t<3,wp::float32>* var_156;
        wp::float32* var_157;
        //---------
        // forward
        // def compute_edge_BB(                                                                   <L 517>
        // idx = wp.tid()                                                                         <L 526>
        var_0 = builtin_tid1d();
        // A = x[edge[idx][0]]                                                                    <L 527>
        var_2 = wp::address(var_edge, var_0);
        var_4 = wp::load(var_2);
        var_3 = wp::extract(var_4, var_1);
        var_5 = wp::address(var_x, var_3);
        var_7 = wp::load(var_5);
        var_6 = wp::copy(var_7);
        // B = x[edge[idx][1]]                                                                    <L 528>
        var_9 = wp::address(var_edge, var_0);
        var_11 = wp::load(var_9);
        var_10 = wp::extract(var_11, var_8);
        var_12 = wp::address(var_x, var_10);
        var_14 = wp::load(var_12);
        var_13 = wp::copy(var_14);
        // dA = dx[edge[idx][0]]                                                                  <L 529>
        var_16 = wp::address(var_edge, var_0);
        var_18 = wp::load(var_16);
        var_17 = wp::extract(var_18, var_15);
        var_19 = wp::address(var_dx, var_17);
        var_21 = wp::load(var_19);
        var_20 = wp::copy(var_21);
        // dB = dx[edge[idx][1]]                                                                  <L 530>
        var_23 = wp::address(var_edge, var_0);
        var_25 = wp::load(var_23);
        var_24 = wp::extract(var_25, var_22);
        var_26 = wp::address(var_dx, var_24);
        var_28 = wp::load(var_26);
        var_27 = wp::copy(var_28);
        // for d in range(3):                                                                     <L 532>
        // edgeBB_lower[idx][d] = wp.float32(wp.min(wp.min(A[d], B[d]), wp.min(A[d] + dA[d], B[d] + dB[d])) - dist / wp.float64(2.0) - edge_xi[idx])       <L 533>
        var_30 = wp::extract(var_6, var_29);
        var_31 = wp::extract(var_13, var_29);
        var_32 = wp::min(var_30, var_31);
        var_33 = wp::extract(var_6, var_29);
        var_34 = wp::extract(var_20, var_29);
        var_35 = wp::add(var_33, var_34);
        var_36 = wp::extract(var_13, var_29);
        var_37 = wp::extract(var_27, var_29);
        var_38 = wp::add(var_36, var_37);
        var_39 = wp::min(var_35, var_38);
        var_40 = wp::min(var_32, var_39);
        var_42 = wp::float64(var_41);
        var_43 = wp::div(var_dist, var_42);
        var_44 = wp::sub(var_40, var_43);
        var_45 = wp::address(var_edge_xi, var_0);
        var_47 = wp::load(var_45);
        var_46 = wp::sub(var_44, var_47);
        var_48 = wp::float32(var_46);
        var_49 = wp::address(var_edgeBB_lower, var_0);
        var_50 = wp::indexref(var_49, var_29);
        wp::store(var_50, var_48);
        // edgeBB_upper[idx][d] = wp.float32(wp.max(wp.max(A[d], B[d]), wp.max(A[d] + dA[d], B[d] + dB[d])) + dist / wp.float64(2.0) + edge_xi[idx])       <L 534>
        var_51 = wp::extract(var_6, var_29);
        var_52 = wp::extract(var_13, var_29);
        var_53 = wp::max(var_51, var_52);
        var_54 = wp::extract(var_6, var_29);
        var_55 = wp::extract(var_20, var_29);
        var_56 = wp::add(var_54, var_55);
        var_57 = wp::extract(var_13, var_29);
        var_58 = wp::extract(var_27, var_29);
        var_59 = wp::add(var_57, var_58);
        var_60 = wp::max(var_56, var_59);
        var_61 = wp::max(var_53, var_60);
        var_63 = wp::float64(var_62);
        var_64 = wp::div(var_dist, var_63);
        var_65 = wp::add(var_61, var_64);
        var_66 = wp::address(var_edge_xi, var_0);
        var_68 = wp::load(var_66);
        var_67 = wp::add(var_65, var_68);
        var_69 = wp::float32(var_67);
        var_70 = wp::address(var_edgeBB_upper, var_0);
        var_71 = wp::indexref(var_70, var_29);
        wp::store(var_71, var_69);
        // edgeBB_lower[idx][d] = wp.float32(wp.min(wp.min(A[d], B[d]), wp.min(A[d] + dA[d], B[d] + dB[d])) - dist / wp.float64(2.0) - edge_xi[idx])       <L 533>
        var_73 = wp::extract(var_6, var_72);
        var_74 = wp::extract(var_13, var_72);
        var_75 = wp::min(var_73, var_74);
        var_76 = wp::extract(var_6, var_72);
        var_77 = wp::extract(var_20, var_72);
        var_78 = wp::add(var_76, var_77);
        var_79 = wp::extract(var_13, var_72);
        var_80 = wp::extract(var_27, var_72);
        var_81 = wp::add(var_79, var_80);
        var_82 = wp::min(var_78, var_81);
        var_83 = wp::min(var_75, var_82);
        var_85 = wp::float64(var_84);
        var_86 = wp::div(var_dist, var_85);
        var_87 = wp::sub(var_83, var_86);
        var_88 = wp::address(var_edge_xi, var_0);
        var_90 = wp::load(var_88);
        var_89 = wp::sub(var_87, var_90);
        var_91 = wp::float32(var_89);
        var_92 = wp::address(var_edgeBB_lower, var_0);
        var_93 = wp::indexref(var_92, var_72);
        wp::store(var_93, var_91);
        // edgeBB_upper[idx][d] = wp.float32(wp.max(wp.max(A[d], B[d]), wp.max(A[d] + dA[d], B[d] + dB[d])) + dist / wp.float64(2.0) + edge_xi[idx])       <L 534>
        var_94 = wp::extract(var_6, var_72);
        var_95 = wp::extract(var_13, var_72);
        var_96 = wp::max(var_94, var_95);
        var_97 = wp::extract(var_6, var_72);
        var_98 = wp::extract(var_20, var_72);
        var_99 = wp::add(var_97, var_98);
        var_100 = wp::extract(var_13, var_72);
        var_101 = wp::extract(var_27, var_72);
        var_102 = wp::add(var_100, var_101);
        var_103 = wp::max(var_99, var_102);
        var_104 = wp::max(var_96, var_103);
        var_106 = wp::float64(var_105);
        var_107 = wp::div(var_dist, var_106);
        var_108 = wp::add(var_104, var_107);
        var_109 = wp::address(var_edge_xi, var_0);
        var_111 = wp::load(var_109);
        var_110 = wp::add(var_108, var_111);
        var_112 = wp::float32(var_110);
        var_113 = wp::address(var_edgeBB_upper, var_0);
        var_114 = wp::indexref(var_113, var_72);
        wp::store(var_114, var_112);
        // edgeBB_lower[idx][d] = wp.float32(wp.min(wp.min(A[d], B[d]), wp.min(A[d] + dA[d], B[d] + dB[d])) - dist / wp.float64(2.0) - edge_xi[idx])       <L 533>
        var_116 = wp::extract(var_6, var_115);
        var_117 = wp::extract(var_13, var_115);
        var_118 = wp::min(var_116, var_117);
        var_119 = wp::extract(var_6, var_115);
        var_120 = wp::extract(var_20, var_115);
        var_121 = wp::add(var_119, var_120);
        var_122 = wp::extract(var_13, var_115);
        var_123 = wp::extract(var_27, var_115);
        var_124 = wp::add(var_122, var_123);
        var_125 = wp::min(var_121, var_124);
        var_126 = wp::min(var_118, var_125);
        var_128 = wp::float64(var_127);
        var_129 = wp::div(var_dist, var_128);
        var_130 = wp::sub(var_126, var_129);
        var_131 = wp::address(var_edge_xi, var_0);
        var_133 = wp::load(var_131);
        var_132 = wp::sub(var_130, var_133);
        var_134 = wp::float32(var_132);
        var_135 = wp::address(var_edgeBB_lower, var_0);
        var_136 = wp::indexref(var_135, var_115);
        wp::store(var_136, var_134);
        // edgeBB_upper[idx][d] = wp.float32(wp.max(wp.max(A[d], B[d]), wp.max(A[d] + dA[d], B[d] + dB[d])) + dist / wp.float64(2.0) + edge_xi[idx])       <L 534>
        var_137 = wp::extract(var_6, var_115);
        var_138 = wp::extract(var_13, var_115);
        var_139 = wp::max(var_137, var_138);
        var_140 = wp::extract(var_6, var_115);
        var_141 = wp::extract(var_20, var_115);
        var_142 = wp::add(var_140, var_141);
        var_143 = wp::extract(var_13, var_115);
        var_144 = wp::extract(var_27, var_115);
        var_145 = wp::add(var_143, var_144);
        var_146 = wp::max(var_142, var_145);
        var_147 = wp::max(var_139, var_146);
        var_149 = wp::float64(var_148);
        var_150 = wp::div(var_dist, var_149);
        var_151 = wp::add(var_147, var_150);
        var_152 = wp::address(var_edge_xi, var_0);
        var_154 = wp::load(var_152);
        var_153 = wp::add(var_151, var_154);
        var_155 = wp::float32(var_153);
        var_156 = wp::address(var_edgeBB_upper, var_0);
        var_157 = wp::indexref(var_156, var_115);
        wp::store(var_157, var_155);
    }
}



extern "C" __global__ void compute_edge_BB_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_edgeBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> var_edgeBB_upper,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::vec_t<3,wp::float64>> var_dx,
    wp::array_t<wp::vec_t<2,wp::int32>> var_edge,
    wp::array_t<wp::float64> var_edge_xi,
    wp::float64 var_dist,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_edgeBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_edgeBB_upper,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_x,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_dx,
    wp::array_t<wp::vec_t<2,wp::int32>> adj_edge,
    wp::array_t<wp::float64> adj_edge_xi,
    wp::float64 adj_dist)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        const wp::int32 var_1 = 0;
        wp::vec_t<2,wp::int32>* var_2;
        wp::int32 var_3;
        wp::vec_t<2,wp::int32> var_4;
        wp::vec_t<3,wp::float64>* var_5;
        wp::vec_t<3,wp::float64> var_6;
        wp::vec_t<3,wp::float64> var_7;
        const wp::int32 var_8 = 1;
        wp::vec_t<2,wp::int32>* var_9;
        wp::int32 var_10;
        wp::vec_t<2,wp::int32> var_11;
        wp::vec_t<3,wp::float64>* var_12;
        wp::vec_t<3,wp::float64> var_13;
        wp::vec_t<3,wp::float64> var_14;
        const wp::int32 var_15 = 0;
        wp::vec_t<2,wp::int32>* var_16;
        wp::int32 var_17;
        wp::vec_t<2,wp::int32> var_18;
        wp::vec_t<3,wp::float64>* var_19;
        wp::vec_t<3,wp::float64> var_20;
        wp::vec_t<3,wp::float64> var_21;
        const wp::int32 var_22 = 1;
        wp::vec_t<2,wp::int32>* var_23;
        wp::int32 var_24;
        wp::vec_t<2,wp::int32> var_25;
        wp::vec_t<3,wp::float64>* var_26;
        wp::vec_t<3,wp::float64> var_27;
        wp::vec_t<3,wp::float64> var_28;
        const wp::int32 var_29 = 0;
        wp::float64 var_30;
        wp::float64 var_31;
        wp::float64 var_32;
        wp::float64 var_33;
        wp::float64 var_34;
        wp::float64 var_35;
        wp::float64 var_36;
        wp::float64 var_37;
        wp::float64 var_38;
        wp::float64 var_39;
        wp::float64 var_40;
        const wp::float32 var_41 = 2.0;
        wp::float64 var_42;
        wp::float64 var_43;
        wp::float64 var_44;
        wp::float64* var_45;
        wp::float64 var_46;
        wp::float64 var_47;
        wp::float32 var_48;
        wp::vec_t<3,wp::float32>* var_49;
        wp::float32* var_50;
        wp::float64 var_51;
        wp::float64 var_52;
        wp::float64 var_53;
        wp::float64 var_54;
        wp::float64 var_55;
        wp::float64 var_56;
        wp::float64 var_57;
        wp::float64 var_58;
        wp::float64 var_59;
        wp::float64 var_60;
        wp::float64 var_61;
        const wp::float32 var_62 = 2.0;
        wp::float64 var_63;
        wp::float64 var_64;
        wp::float64 var_65;
        wp::float64* var_66;
        wp::float64 var_67;
        wp::float64 var_68;
        wp::float32 var_69;
        wp::vec_t<3,wp::float32>* var_70;
        wp::float32* var_71;
        const wp::int32 var_72 = 1;
        wp::float64 var_73;
        wp::float64 var_74;
        wp::float64 var_75;
        wp::float64 var_76;
        wp::float64 var_77;
        wp::float64 var_78;
        wp::float64 var_79;
        wp::float64 var_80;
        wp::float64 var_81;
        wp::float64 var_82;
        wp::float64 var_83;
        const wp::float32 var_84 = 2.0;
        wp::float64 var_85;
        wp::float64 var_86;
        wp::float64 var_87;
        wp::float64* var_88;
        wp::float64 var_89;
        wp::float64 var_90;
        wp::float32 var_91;
        wp::vec_t<3,wp::float32>* var_92;
        wp::float32* var_93;
        wp::float64 var_94;
        wp::float64 var_95;
        wp::float64 var_96;
        wp::float64 var_97;
        wp::float64 var_98;
        wp::float64 var_99;
        wp::float64 var_100;
        wp::float64 var_101;
        wp::float64 var_102;
        wp::float64 var_103;
        wp::float64 var_104;
        const wp::float32 var_105 = 2.0;
        wp::float64 var_106;
        wp::float64 var_107;
        wp::float64 var_108;
        wp::float64* var_109;
        wp::float64 var_110;
        wp::float64 var_111;
        wp::float32 var_112;
        wp::vec_t<3,wp::float32>* var_113;
        wp::float32* var_114;
        const wp::int32 var_115 = 2;
        wp::float64 var_116;
        wp::float64 var_117;
        wp::float64 var_118;
        wp::float64 var_119;
        wp::float64 var_120;
        wp::float64 var_121;
        wp::float64 var_122;
        wp::float64 var_123;
        wp::float64 var_124;
        wp::float64 var_125;
        wp::float64 var_126;
        const wp::float32 var_127 = 2.0;
        wp::float64 var_128;
        wp::float64 var_129;
        wp::float64 var_130;
        wp::float64* var_131;
        wp::float64 var_132;
        wp::float64 var_133;
        wp::float32 var_134;
        wp::vec_t<3,wp::float32>* var_135;
        wp::float32* var_136;
        wp::float64 var_137;
        wp::float64 var_138;
        wp::float64 var_139;
        wp::float64 var_140;
        wp::float64 var_141;
        wp::float64 var_142;
        wp::float64 var_143;
        wp::float64 var_144;
        wp::float64 var_145;
        wp::float64 var_146;
        wp::float64 var_147;
        const wp::float32 var_148 = 2.0;
        wp::float64 var_149;
        wp::float64 var_150;
        wp::float64 var_151;
        wp::float64* var_152;
        wp::float64 var_153;
        wp::float64 var_154;
        wp::float32 var_155;
        wp::vec_t<3,wp::float32>* var_156;
        wp::float32* var_157;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::vec_t<2,wp::int32> adj_2 = {};
        wp::int32 adj_3 = {};
        wp::vec_t<2,wp::int32> adj_4 = {};
        wp::vec_t<3,wp::float64> adj_5 = {};
        wp::vec_t<3,wp::float64> adj_6 = {};
        wp::vec_t<3,wp::float64> adj_7 = {};
        wp::int32 adj_8 = {};
        wp::vec_t<2,wp::int32> adj_9 = {};
        wp::int32 adj_10 = {};
        wp::vec_t<2,wp::int32> adj_11 = {};
        wp::vec_t<3,wp::float64> adj_12 = {};
        wp::vec_t<3,wp::float64> adj_13 = {};
        wp::vec_t<3,wp::float64> adj_14 = {};
        wp::int32 adj_15 = {};
        wp::vec_t<2,wp::int32> adj_16 = {};
        wp::int32 adj_17 = {};
        wp::vec_t<2,wp::int32> adj_18 = {};
        wp::vec_t<3,wp::float64> adj_19 = {};
        wp::vec_t<3,wp::float64> adj_20 = {};
        wp::vec_t<3,wp::float64> adj_21 = {};
        wp::int32 adj_22 = {};
        wp::vec_t<2,wp::int32> adj_23 = {};
        wp::int32 adj_24 = {};
        wp::vec_t<2,wp::int32> adj_25 = {};
        wp::vec_t<3,wp::float64> adj_26 = {};
        wp::vec_t<3,wp::float64> adj_27 = {};
        wp::vec_t<3,wp::float64> adj_28 = {};
        wp::int32 adj_29 = {};
        wp::float64 adj_30 = {};
        wp::float64 adj_31 = {};
        wp::float64 adj_32 = {};
        wp::float64 adj_33 = {};
        wp::float64 adj_34 = {};
        wp::float64 adj_35 = {};
        wp::float64 adj_36 = {};
        wp::float64 adj_37 = {};
        wp::float64 adj_38 = {};
        wp::float64 adj_39 = {};
        wp::float64 adj_40 = {};
        wp::float32 adj_41 = {};
        wp::float64 adj_42 = {};
        wp::float64 adj_43 = {};
        wp::float64 adj_44 = {};
        wp::float64 adj_45 = {};
        wp::float64 adj_46 = {};
        wp::float64 adj_47 = {};
        wp::float32 adj_48 = {};
        wp::vec_t<3,wp::float32> adj_49 = {};
        wp::float32 adj_50 = {};
        wp::float64 adj_51 = {};
        wp::float64 adj_52 = {};
        wp::float64 adj_53 = {};
        wp::float64 adj_54 = {};
        wp::float64 adj_55 = {};
        wp::float64 adj_56 = {};
        wp::float64 adj_57 = {};
        wp::float64 adj_58 = {};
        wp::float64 adj_59 = {};
        wp::float64 adj_60 = {};
        wp::float64 adj_61 = {};
        wp::float32 adj_62 = {};
        wp::float64 adj_63 = {};
        wp::float64 adj_64 = {};
        wp::float64 adj_65 = {};
        wp::float64 adj_66 = {};
        wp::float64 adj_67 = {};
        wp::float64 adj_68 = {};
        wp::float32 adj_69 = {};
        wp::vec_t<3,wp::float32> adj_70 = {};
        wp::float32 adj_71 = {};
        wp::int32 adj_72 = {};
        wp::float64 adj_73 = {};
        wp::float64 adj_74 = {};
        wp::float64 adj_75 = {};
        wp::float64 adj_76 = {};
        wp::float64 adj_77 = {};
        wp::float64 adj_78 = {};
        wp::float64 adj_79 = {};
        wp::float64 adj_80 = {};
        wp::float64 adj_81 = {};
        wp::float64 adj_82 = {};
        wp::float64 adj_83 = {};
        wp::float32 adj_84 = {};
        wp::float64 adj_85 = {};
        wp::float64 adj_86 = {};
        wp::float64 adj_87 = {};
        wp::float64 adj_88 = {};
        wp::float64 adj_89 = {};
        wp::float64 adj_90 = {};
        wp::float32 adj_91 = {};
        wp::vec_t<3,wp::float32> adj_92 = {};
        wp::float32 adj_93 = {};
        wp::float64 adj_94 = {};
        wp::float64 adj_95 = {};
        wp::float64 adj_96 = {};
        wp::float64 adj_97 = {};
        wp::float64 adj_98 = {};
        wp::float64 adj_99 = {};
        wp::float64 adj_100 = {};
        wp::float64 adj_101 = {};
        wp::float64 adj_102 = {};
        wp::float64 adj_103 = {};
        wp::float64 adj_104 = {};
        wp::float32 adj_105 = {};
        wp::float64 adj_106 = {};
        wp::float64 adj_107 = {};
        wp::float64 adj_108 = {};
        wp::float64 adj_109 = {};
        wp::float64 adj_110 = {};
        wp::float64 adj_111 = {};
        wp::float32 adj_112 = {};
        wp::vec_t<3,wp::float32> adj_113 = {};
        wp::float32 adj_114 = {};
        wp::int32 adj_115 = {};
        wp::float64 adj_116 = {};
        wp::float64 adj_117 = {};
        wp::float64 adj_118 = {};
        wp::float64 adj_119 = {};
        wp::float64 adj_120 = {};
        wp::float64 adj_121 = {};
        wp::float64 adj_122 = {};
        wp::float64 adj_123 = {};
        wp::float64 adj_124 = {};
        wp::float64 adj_125 = {};
        wp::float64 adj_126 = {};
        wp::float32 adj_127 = {};
        wp::float64 adj_128 = {};
        wp::float64 adj_129 = {};
        wp::float64 adj_130 = {};
        wp::float64 adj_131 = {};
        wp::float64 adj_132 = {};
        wp::float64 adj_133 = {};
        wp::float32 adj_134 = {};
        wp::vec_t<3,wp::float32> adj_135 = {};
        wp::float32 adj_136 = {};
        wp::float64 adj_137 = {};
        wp::float64 adj_138 = {};
        wp::float64 adj_139 = {};
        wp::float64 adj_140 = {};
        wp::float64 adj_141 = {};
        wp::float64 adj_142 = {};
        wp::float64 adj_143 = {};
        wp::float64 adj_144 = {};
        wp::float64 adj_145 = {};
        wp::float64 adj_146 = {};
        wp::float64 adj_147 = {};
        wp::float32 adj_148 = {};
        wp::float64 adj_149 = {};
        wp::float64 adj_150 = {};
        wp::float64 adj_151 = {};
        wp::float64 adj_152 = {};
        wp::float64 adj_153 = {};
        wp::float64 adj_154 = {};
        wp::float32 adj_155 = {};
        wp::vec_t<3,wp::float32> adj_156 = {};
        wp::float32 adj_157 = {};
        //---------
        // forward
        // def compute_edge_BB(                                                                   <L 517>
        // idx = wp.tid()                                                                         <L 526>
        var_0 = builtin_tid1d();
        // A = x[edge[idx][0]]                                                                    <L 527>
        var_2 = wp::address(var_edge, var_0);
        var_4 = wp::load(var_2);
        var_3 = wp::extract(var_4, var_1);
        var_5 = wp::address(var_x, var_3);
        var_7 = wp::load(var_5);
        var_6 = wp::copy(var_7);
        // B = x[edge[idx][1]]                                                                    <L 528>
        var_9 = wp::address(var_edge, var_0);
        var_11 = wp::load(var_9);
        var_10 = wp::extract(var_11, var_8);
        var_12 = wp::address(var_x, var_10);
        var_14 = wp::load(var_12);
        var_13 = wp::copy(var_14);
        // dA = dx[edge[idx][0]]                                                                  <L 529>
        var_16 = wp::address(var_edge, var_0);
        var_18 = wp::load(var_16);
        var_17 = wp::extract(var_18, var_15);
        var_19 = wp::address(var_dx, var_17);
        var_21 = wp::load(var_19);
        var_20 = wp::copy(var_21);
        // dB = dx[edge[idx][1]]                                                                  <L 530>
        var_23 = wp::address(var_edge, var_0);
        var_25 = wp::load(var_23);
        var_24 = wp::extract(var_25, var_22);
        var_26 = wp::address(var_dx, var_24);
        var_28 = wp::load(var_26);
        var_27 = wp::copy(var_28);
        // for d in range(3):                                                                     <L 532>
        // edgeBB_lower[idx][d] = wp.float32(wp.min(wp.min(A[d], B[d]), wp.min(A[d] + dA[d], B[d] + dB[d])) - dist / wp.float64(2.0) - edge_xi[idx])       <L 533>
        var_30 = wp::extract(var_6, var_29);
        var_31 = wp::extract(var_13, var_29);
        var_32 = wp::min(var_30, var_31);
        var_33 = wp::extract(var_6, var_29);
        var_34 = wp::extract(var_20, var_29);
        var_35 = wp::add(var_33, var_34);
        var_36 = wp::extract(var_13, var_29);
        var_37 = wp::extract(var_27, var_29);
        var_38 = wp::add(var_36, var_37);
        var_39 = wp::min(var_35, var_38);
        var_40 = wp::min(var_32, var_39);
        var_42 = wp::float64(var_41);
        var_43 = wp::div(var_dist, var_42);
        var_44 = wp::sub(var_40, var_43);
        var_45 = wp::address(var_edge_xi, var_0);
        var_47 = wp::load(var_45);
        var_46 = wp::sub(var_44, var_47);
        var_48 = wp::float32(var_46);
        var_49 = wp::address(var_edgeBB_lower, var_0);
        // var_50 = wp::indexref(var_49, var_29);
        // wp::store(var_50, var_48);
        // edgeBB_upper[idx][d] = wp.float32(wp.max(wp.max(A[d], B[d]), wp.max(A[d] + dA[d], B[d] + dB[d])) + dist / wp.float64(2.0) + edge_xi[idx])       <L 534>
        var_51 = wp::extract(var_6, var_29);
        var_52 = wp::extract(var_13, var_29);
        var_53 = wp::max(var_51, var_52);
        var_54 = wp::extract(var_6, var_29);
        var_55 = wp::extract(var_20, var_29);
        var_56 = wp::add(var_54, var_55);
        var_57 = wp::extract(var_13, var_29);
        var_58 = wp::extract(var_27, var_29);
        var_59 = wp::add(var_57, var_58);
        var_60 = wp::max(var_56, var_59);
        var_61 = wp::max(var_53, var_60);
        var_63 = wp::float64(var_62);
        var_64 = wp::div(var_dist, var_63);
        var_65 = wp::add(var_61, var_64);
        var_66 = wp::address(var_edge_xi, var_0);
        var_68 = wp::load(var_66);
        var_67 = wp::add(var_65, var_68);
        var_69 = wp::float32(var_67);
        var_70 = wp::address(var_edgeBB_upper, var_0);
        // var_71 = wp::indexref(var_70, var_29);
        // wp::store(var_71, var_69);
        // edgeBB_lower[idx][d] = wp.float32(wp.min(wp.min(A[d], B[d]), wp.min(A[d] + dA[d], B[d] + dB[d])) - dist / wp.float64(2.0) - edge_xi[idx])       <L 533>
        var_73 = wp::extract(var_6, var_72);
        var_74 = wp::extract(var_13, var_72);
        var_75 = wp::min(var_73, var_74);
        var_76 = wp::extract(var_6, var_72);
        var_77 = wp::extract(var_20, var_72);
        var_78 = wp::add(var_76, var_77);
        var_79 = wp::extract(var_13, var_72);
        var_80 = wp::extract(var_27, var_72);
        var_81 = wp::add(var_79, var_80);
        var_82 = wp::min(var_78, var_81);
        var_83 = wp::min(var_75, var_82);
        var_85 = wp::float64(var_84);
        var_86 = wp::div(var_dist, var_85);
        var_87 = wp::sub(var_83, var_86);
        var_88 = wp::address(var_edge_xi, var_0);
        var_90 = wp::load(var_88);
        var_89 = wp::sub(var_87, var_90);
        var_91 = wp::float32(var_89);
        var_92 = wp::address(var_edgeBB_lower, var_0);
        // var_93 = wp::indexref(var_92, var_72);
        // wp::store(var_93, var_91);
        // edgeBB_upper[idx][d] = wp.float32(wp.max(wp.max(A[d], B[d]), wp.max(A[d] + dA[d], B[d] + dB[d])) + dist / wp.float64(2.0) + edge_xi[idx])       <L 534>
        var_94 = wp::extract(var_6, var_72);
        var_95 = wp::extract(var_13, var_72);
        var_96 = wp::max(var_94, var_95);
        var_97 = wp::extract(var_6, var_72);
        var_98 = wp::extract(var_20, var_72);
        var_99 = wp::add(var_97, var_98);
        var_100 = wp::extract(var_13, var_72);
        var_101 = wp::extract(var_27, var_72);
        var_102 = wp::add(var_100, var_101);
        var_103 = wp::max(var_99, var_102);
        var_104 = wp::max(var_96, var_103);
        var_106 = wp::float64(var_105);
        var_107 = wp::div(var_dist, var_106);
        var_108 = wp::add(var_104, var_107);
        var_109 = wp::address(var_edge_xi, var_0);
        var_111 = wp::load(var_109);
        var_110 = wp::add(var_108, var_111);
        var_112 = wp::float32(var_110);
        var_113 = wp::address(var_edgeBB_upper, var_0);
        // var_114 = wp::indexref(var_113, var_72);
        // wp::store(var_114, var_112);
        // edgeBB_lower[idx][d] = wp.float32(wp.min(wp.min(A[d], B[d]), wp.min(A[d] + dA[d], B[d] + dB[d])) - dist / wp.float64(2.0) - edge_xi[idx])       <L 533>
        var_116 = wp::extract(var_6, var_115);
        var_117 = wp::extract(var_13, var_115);
        var_118 = wp::min(var_116, var_117);
        var_119 = wp::extract(var_6, var_115);
        var_120 = wp::extract(var_20, var_115);
        var_121 = wp::add(var_119, var_120);
        var_122 = wp::extract(var_13, var_115);
        var_123 = wp::extract(var_27, var_115);
        var_124 = wp::add(var_122, var_123);
        var_125 = wp::min(var_121, var_124);
        var_126 = wp::min(var_118, var_125);
        var_128 = wp::float64(var_127);
        var_129 = wp::div(var_dist, var_128);
        var_130 = wp::sub(var_126, var_129);
        var_131 = wp::address(var_edge_xi, var_0);
        var_133 = wp::load(var_131);
        var_132 = wp::sub(var_130, var_133);
        var_134 = wp::float32(var_132);
        var_135 = wp::address(var_edgeBB_lower, var_0);
        // var_136 = wp::indexref(var_135, var_115);
        // wp::store(var_136, var_134);
        // edgeBB_upper[idx][d] = wp.float32(wp.max(wp.max(A[d], B[d]), wp.max(A[d] + dA[d], B[d] + dB[d])) + dist / wp.float64(2.0) + edge_xi[idx])       <L 534>
        var_137 = wp::extract(var_6, var_115);
        var_138 = wp::extract(var_13, var_115);
        var_139 = wp::max(var_137, var_138);
        var_140 = wp::extract(var_6, var_115);
        var_141 = wp::extract(var_20, var_115);
        var_142 = wp::add(var_140, var_141);
        var_143 = wp::extract(var_13, var_115);
        var_144 = wp::extract(var_27, var_115);
        var_145 = wp::add(var_143, var_144);
        var_146 = wp::max(var_142, var_145);
        var_147 = wp::max(var_139, var_146);
        var_149 = wp::float64(var_148);
        var_150 = wp::div(var_dist, var_149);
        var_151 = wp::add(var_147, var_150);
        var_152 = wp::address(var_edge_xi, var_0);
        var_154 = wp::load(var_152);
        var_153 = wp::add(var_151, var_154);
        var_155 = wp::float32(var_153);
        var_156 = wp::address(var_edgeBB_upper, var_0);
        // var_157 = wp::indexref(var_156, var_115);
        // wp::store(var_157, var_155);
        //---------
        // reverse
        wp::adj_store(var_157, var_155, adj_157, adj_155);
        wp::adj_indexref(var_156, var_115, adj_156, adj_115, adj_157);
        wp::adj_address(var_edgeBB_upper, var_0, adj_edgeBB_upper, adj_0, adj_156);
        wp::adj_float32(var_153, adj_153, adj_155);
        wp::adj_add(var_151, var_154, adj_151, adj_152, adj_153);
        wp::adj_load(var_152, adj_152, adj_154);
        wp::adj_address(var_edge_xi, var_0, adj_edge_xi, adj_0, adj_152);
        wp::adj_add(var_147, var_150, adj_147, adj_150, adj_151);
        wp::adj_div(var_dist, var_149, var_150, adj_dist, adj_149, adj_150);
        wp::adj_float64(var_148, adj_148, adj_149);
        wp::adj_max(var_139, var_146, adj_139, adj_146, adj_147);
        wp::adj_max(var_142, var_145, adj_142, adj_145, adj_146);
        wp::adj_add(var_143, var_144, adj_143, adj_144, adj_145);
        wp::adj_extract(var_27, var_115, adj_27, adj_115, adj_144);
        wp::adj_extract(var_13, var_115, adj_13, adj_115, adj_143);
        wp::adj_add(var_140, var_141, adj_140, adj_141, adj_142);
        wp::adj_extract(var_20, var_115, adj_20, adj_115, adj_141);
        wp::adj_extract(var_6, var_115, adj_6, adj_115, adj_140);
        wp::adj_max(var_137, var_138, adj_137, adj_138, adj_139);
        wp::adj_extract(var_13, var_115, adj_13, adj_115, adj_138);
        wp::adj_extract(var_6, var_115, adj_6, adj_115, adj_137);
        // adj: edgeBB_upper[idx][d] = wp.float32(wp.max(wp.max(A[d], B[d]), wp.max(A[d] + dA[d], B[d] + dB[d])) + dist / wp.float64(2.0) + edge_xi[idx])  <L 534>
        wp::adj_store(var_136, var_134, adj_136, adj_134);
        wp::adj_indexref(var_135, var_115, adj_135, adj_115, adj_136);
        wp::adj_address(var_edgeBB_lower, var_0, adj_edgeBB_lower, adj_0, adj_135);
        wp::adj_float32(var_132, adj_132, adj_134);
        wp::adj_sub(var_130, var_133, adj_130, adj_131, adj_132);
        wp::adj_load(var_131, adj_131, adj_133);
        wp::adj_address(var_edge_xi, var_0, adj_edge_xi, adj_0, adj_131);
        wp::adj_sub(var_126, var_129, adj_126, adj_129, adj_130);
        wp::adj_div(var_dist, var_128, var_129, adj_dist, adj_128, adj_129);
        wp::adj_float64(var_127, adj_127, adj_128);
        wp::adj_min(var_118, var_125, adj_118, adj_125, adj_126);
        wp::adj_min(var_121, var_124, adj_121, adj_124, adj_125);
        wp::adj_add(var_122, var_123, adj_122, adj_123, adj_124);
        wp::adj_extract(var_27, var_115, adj_27, adj_115, adj_123);
        wp::adj_extract(var_13, var_115, adj_13, adj_115, adj_122);
        wp::adj_add(var_119, var_120, adj_119, adj_120, adj_121);
        wp::adj_extract(var_20, var_115, adj_20, adj_115, adj_120);
        wp::adj_extract(var_6, var_115, adj_6, adj_115, adj_119);
        wp::adj_min(var_116, var_117, adj_116, adj_117, adj_118);
        wp::adj_extract(var_13, var_115, adj_13, adj_115, adj_117);
        wp::adj_extract(var_6, var_115, adj_6, adj_115, adj_116);
        // adj: edgeBB_lower[idx][d] = wp.float32(wp.min(wp.min(A[d], B[d]), wp.min(A[d] + dA[d], B[d] + dB[d])) - dist / wp.float64(2.0) - edge_xi[idx])  <L 533>
        wp::adj_store(var_114, var_112, adj_114, adj_112);
        wp::adj_indexref(var_113, var_72, adj_113, adj_72, adj_114);
        wp::adj_address(var_edgeBB_upper, var_0, adj_edgeBB_upper, adj_0, adj_113);
        wp::adj_float32(var_110, adj_110, adj_112);
        wp::adj_add(var_108, var_111, adj_108, adj_109, adj_110);
        wp::adj_load(var_109, adj_109, adj_111);
        wp::adj_address(var_edge_xi, var_0, adj_edge_xi, adj_0, adj_109);
        wp::adj_add(var_104, var_107, adj_104, adj_107, adj_108);
        wp::adj_div(var_dist, var_106, var_107, adj_dist, adj_106, adj_107);
        wp::adj_float64(var_105, adj_105, adj_106);
        wp::adj_max(var_96, var_103, adj_96, adj_103, adj_104);
        wp::adj_max(var_99, var_102, adj_99, adj_102, adj_103);
        wp::adj_add(var_100, var_101, adj_100, adj_101, adj_102);
        wp::adj_extract(var_27, var_72, adj_27, adj_72, adj_101);
        wp::adj_extract(var_13, var_72, adj_13, adj_72, adj_100);
        wp::adj_add(var_97, var_98, adj_97, adj_98, adj_99);
        wp::adj_extract(var_20, var_72, adj_20, adj_72, adj_98);
        wp::adj_extract(var_6, var_72, adj_6, adj_72, adj_97);
        wp::adj_max(var_94, var_95, adj_94, adj_95, adj_96);
        wp::adj_extract(var_13, var_72, adj_13, adj_72, adj_95);
        wp::adj_extract(var_6, var_72, adj_6, adj_72, adj_94);
        // adj: edgeBB_upper[idx][d] = wp.float32(wp.max(wp.max(A[d], B[d]), wp.max(A[d] + dA[d], B[d] + dB[d])) + dist / wp.float64(2.0) + edge_xi[idx])  <L 534>
        wp::adj_store(var_93, var_91, adj_93, adj_91);
        wp::adj_indexref(var_92, var_72, adj_92, adj_72, adj_93);
        wp::adj_address(var_edgeBB_lower, var_0, adj_edgeBB_lower, adj_0, adj_92);
        wp::adj_float32(var_89, adj_89, adj_91);
        wp::adj_sub(var_87, var_90, adj_87, adj_88, adj_89);
        wp::adj_load(var_88, adj_88, adj_90);
        wp::adj_address(var_edge_xi, var_0, adj_edge_xi, adj_0, adj_88);
        wp::adj_sub(var_83, var_86, adj_83, adj_86, adj_87);
        wp::adj_div(var_dist, var_85, var_86, adj_dist, adj_85, adj_86);
        wp::adj_float64(var_84, adj_84, adj_85);
        wp::adj_min(var_75, var_82, adj_75, adj_82, adj_83);
        wp::adj_min(var_78, var_81, adj_78, adj_81, adj_82);
        wp::adj_add(var_79, var_80, adj_79, adj_80, adj_81);
        wp::adj_extract(var_27, var_72, adj_27, adj_72, adj_80);
        wp::adj_extract(var_13, var_72, adj_13, adj_72, adj_79);
        wp::adj_add(var_76, var_77, adj_76, adj_77, adj_78);
        wp::adj_extract(var_20, var_72, adj_20, adj_72, adj_77);
        wp::adj_extract(var_6, var_72, adj_6, adj_72, adj_76);
        wp::adj_min(var_73, var_74, adj_73, adj_74, adj_75);
        wp::adj_extract(var_13, var_72, adj_13, adj_72, adj_74);
        wp::adj_extract(var_6, var_72, adj_6, adj_72, adj_73);
        // adj: edgeBB_lower[idx][d] = wp.float32(wp.min(wp.min(A[d], B[d]), wp.min(A[d] + dA[d], B[d] + dB[d])) - dist / wp.float64(2.0) - edge_xi[idx])  <L 533>
        wp::adj_store(var_71, var_69, adj_71, adj_69);
        wp::adj_indexref(var_70, var_29, adj_70, adj_29, adj_71);
        wp::adj_address(var_edgeBB_upper, var_0, adj_edgeBB_upper, adj_0, adj_70);
        wp::adj_float32(var_67, adj_67, adj_69);
        wp::adj_add(var_65, var_68, adj_65, adj_66, adj_67);
        wp::adj_load(var_66, adj_66, adj_68);
        wp::adj_address(var_edge_xi, var_0, adj_edge_xi, adj_0, adj_66);
        wp::adj_add(var_61, var_64, adj_61, adj_64, adj_65);
        wp::adj_div(var_dist, var_63, var_64, adj_dist, adj_63, adj_64);
        wp::adj_float64(var_62, adj_62, adj_63);
        wp::adj_max(var_53, var_60, adj_53, adj_60, adj_61);
        wp::adj_max(var_56, var_59, adj_56, adj_59, adj_60);
        wp::adj_add(var_57, var_58, adj_57, adj_58, adj_59);
        wp::adj_extract(var_27, var_29, adj_27, adj_29, adj_58);
        wp::adj_extract(var_13, var_29, adj_13, adj_29, adj_57);
        wp::adj_add(var_54, var_55, adj_54, adj_55, adj_56);
        wp::adj_extract(var_20, var_29, adj_20, adj_29, adj_55);
        wp::adj_extract(var_6, var_29, adj_6, adj_29, adj_54);
        wp::adj_max(var_51, var_52, adj_51, adj_52, adj_53);
        wp::adj_extract(var_13, var_29, adj_13, adj_29, adj_52);
        wp::adj_extract(var_6, var_29, adj_6, adj_29, adj_51);
        // adj: edgeBB_upper[idx][d] = wp.float32(wp.max(wp.max(A[d], B[d]), wp.max(A[d] + dA[d], B[d] + dB[d])) + dist / wp.float64(2.0) + edge_xi[idx])  <L 534>
        wp::adj_store(var_50, var_48, adj_50, adj_48);
        wp::adj_indexref(var_49, var_29, adj_49, adj_29, adj_50);
        wp::adj_address(var_edgeBB_lower, var_0, adj_edgeBB_lower, adj_0, adj_49);
        wp::adj_float32(var_46, adj_46, adj_48);
        wp::adj_sub(var_44, var_47, adj_44, adj_45, adj_46);
        wp::adj_load(var_45, adj_45, adj_47);
        wp::adj_address(var_edge_xi, var_0, adj_edge_xi, adj_0, adj_45);
        wp::adj_sub(var_40, var_43, adj_40, adj_43, adj_44);
        wp::adj_div(var_dist, var_42, var_43, adj_dist, adj_42, adj_43);
        wp::adj_float64(var_41, adj_41, adj_42);
        wp::adj_min(var_32, var_39, adj_32, adj_39, adj_40);
        wp::adj_min(var_35, var_38, adj_35, adj_38, adj_39);
        wp::adj_add(var_36, var_37, adj_36, adj_37, adj_38);
        wp::adj_extract(var_27, var_29, adj_27, adj_29, adj_37);
        wp::adj_extract(var_13, var_29, adj_13, adj_29, adj_36);
        wp::adj_add(var_33, var_34, adj_33, adj_34, adj_35);
        wp::adj_extract(var_20, var_29, adj_20, adj_29, adj_34);
        wp::adj_extract(var_6, var_29, adj_6, adj_29, adj_33);
        wp::adj_min(var_30, var_31, adj_30, adj_31, adj_32);
        wp::adj_extract(var_13, var_29, adj_13, adj_29, adj_31);
        wp::adj_extract(var_6, var_29, adj_6, adj_29, adj_30);
        // adj: edgeBB_lower[idx][d] = wp.float32(wp.min(wp.min(A[d], B[d]), wp.min(A[d] + dA[d], B[d] + dB[d])) - dist / wp.float64(2.0) - edge_xi[idx])  <L 533>
        // adj: for d in range(3):                                                                <L 532>
        wp::adj_copy(var_28, adj_26, adj_27);
        wp::adj_load(var_26, adj_26, adj_28);
        wp::adj_address(var_dx, var_24, adj_dx, adj_24, adj_26);
        wp::adj_extract(var_25, var_22, adj_23, adj_22, adj_24);
        wp::adj_load(var_23, adj_23, adj_25);
        wp::adj_address(var_edge, var_0, adj_edge, adj_0, adj_23);
        // adj: dB = dx[edge[idx][1]]                                                             <L 530>
        wp::adj_copy(var_21, adj_19, adj_20);
        wp::adj_load(var_19, adj_19, adj_21);
        wp::adj_address(var_dx, var_17, adj_dx, adj_17, adj_19);
        wp::adj_extract(var_18, var_15, adj_16, adj_15, adj_17);
        wp::adj_load(var_16, adj_16, adj_18);
        wp::adj_address(var_edge, var_0, adj_edge, adj_0, adj_16);
        // adj: dA = dx[edge[idx][0]]                                                             <L 529>
        wp::adj_copy(var_14, adj_12, adj_13);
        wp::adj_load(var_12, adj_12, adj_14);
        wp::adj_address(var_x, var_10, adj_x, adj_10, adj_12);
        wp::adj_extract(var_11, var_8, adj_9, adj_8, adj_10);
        wp::adj_load(var_9, adj_9, adj_11);
        wp::adj_address(var_edge, var_0, adj_edge, adj_0, adj_9);
        // adj: B = x[edge[idx][1]]                                                               <L 528>
        wp::adj_copy(var_7, adj_5, adj_6);
        wp::adj_load(var_5, adj_5, adj_7);
        wp::adj_address(var_x, var_3, adj_x, adj_3, adj_5);
        wp::adj_extract(var_4, var_1, adj_2, adj_1, adj_3);
        wp::adj_load(var_2, adj_2, adj_4);
        wp::adj_address(var_edge, var_0, adj_edge, adj_0, adj_2);
        // adj: A = x[edge[idx][0]]                                                               <L 527>
        // adj: idx = wp.tid()                                                                    <L 526>
        // adj: def compute_edge_BB(                                                              <L 517>
        continue;
    }
}



extern "C" __global__ void compute_hs_collision_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::int32> var_hs_node,
    wp::array_t<wp::int32> var_hs_body,
    wp::array_t<wp::int32> var_hs_ground,
    wp::array_t<wp::int32> var_num_hs_pair,
    wp::int32 var_num_HS,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::int32> var_surf_vi,
    wp::array_t<wp::vec_t<3,wp::float64>> var_dx,
    wp::array_t<wp::float64> var_node_xi,
    wp::array_t<wp::int32> var_node2body,
    wp::array_t<wp::vec_t<3,wp::float64>> var_half_space_n,
    wp::array_t<wp::vec_t<3,wp::float64>> var_half_space_o,
    wp::float64 var_dhat)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32 var_1;
        wp::int32 var_2;
        wp::int32* var_3;
        wp::int32 var_4;
        wp::int32 var_5;
        wp::vec_t<3,wp::float64>* var_6;
        wp::vec_t<3,wp::float64> var_7;
        wp::vec_t<3,wp::float64> var_8;
        wp::vec_t<3,wp::float64>* var_9;
        wp::vec_t<3,wp::float64> var_10;
        wp::vec_t<3,wp::float64> var_11;
        wp::vec_t<3,wp::float64>* var_12;
        wp::vec_t<3,wp::float64> var_13;
        wp::vec_t<3,wp::float64> var_14;
        wp::vec_t<3,wp::float64>* var_15;
        wp::vec_t<3,wp::float64> var_16;
        wp::vec_t<3,wp::float64> var_17;
        wp::vec_t<3,wp::float64> var_18;
        wp::float64 var_19;
        wp::float64* var_20;
        wp::float64 var_21;
        wp::float64 var_22;
        wp::vec_t<3,wp::float64> var_23;
        wp::vec_t<3,wp::float64> var_24;
        wp::float64 var_25;
        wp::float64* var_26;
        wp::float64 var_27;
        wp::float64 var_28;
        wp::float64 var_29;
        bool var_30;
        const wp::int32 var_31 = 0;
        const wp::int32 var_32 = 1;
        wp::int32 var_33;
        wp::int32* var_34;
        wp::int32 var_35;
        //---------
        // forward
        // def compute_hs_collision(                                                              <L 558>
        // tid = wp.tid()                                                                         <L 573>
        var_0 = builtin_tid1d();
        // hs = tid % num_HS                                                                      <L 574>
        var_1 = wp::mod(var_0, var_num_HS);
        // svi = tid // num_HS                                                                    <L 575>
        var_2 = wp::floordiv(var_0, var_num_HS);
        // vi = surf_vi[svi]                                                                      <L 576>
        var_3 = wp::address(var_surf_vi, var_2);
        var_5 = wp::load(var_3);
        var_4 = wp::copy(var_5);
        // n = half_space_n[hs]                                                                   <L 577>
        var_6 = wp::address(var_half_space_n, var_1);
        var_8 = wp::load(var_6);
        var_7 = wp::copy(var_8);
        // o = half_space_o[hs]                                                                   <L 578>
        var_9 = wp::address(var_half_space_o, var_1);
        var_11 = wp::load(var_9);
        var_10 = wp::copy(var_11);
        // xIcoord = x[vi]                                                                        <L 579>
        var_12 = wp::address(var_x, var_4);
        var_14 = wp::load(var_12);
        var_13 = wp::copy(var_14);
        // dxIcoord = dx[vi]                                                                      <L 580>
        var_15 = wp::address(var_dx, var_4);
        var_17 = wp::load(var_15);
        var_16 = wp::copy(var_17);
        // d0 = wp.dot(xIcoord - o, n) - node_xi[svi]                                             <L 581>
        var_18 = wp::sub(var_13, var_10);
        var_19 = wp::dot(var_18, var_7);
        var_20 = wp::address(var_node_xi, var_2);
        var_22 = wp::load(var_20);
        var_21 = wp::sub(var_19, var_22);
        // d1 = wp.dot(xIcoord + dxIcoord - o, n) - node_xi[svi]                                  <L 582>
        var_23 = wp::add(var_13, var_16);
        var_24 = wp::sub(var_23, var_10);
        var_25 = wp::dot(var_24, var_7);
        var_26 = wp::address(var_node_xi, var_2);
        var_28 = wp::load(var_26);
        var_27 = wp::sub(var_25, var_28);
        // if min(d0, d1) < dhat:                                                                 <L 583>
        var_29 = wp::min(var_21, var_27);
        var_30 = (var_29 < var_dhat);
        if (var_30) {
            // offset = wp.atomic_add(num_hs_pair, 0, 1)                                          <L 584>
            var_33 = wp::atomic_add(var_num_hs_pair, var_31, var_32);
            // hs_node[offset] = svi                                                              <L 585>
            wp::array_store(var_hs_node, var_33, var_2);
            // hs_body[offset] = node2body[vi]                                                    <L 586>
            var_34 = wp::address(var_node2body, var_4);
            var_35 = wp::load(var_34);
            wp::array_store(var_hs_body, var_33, var_35);
            // hs_ground[offset] = hs                                                             <L 587>
            wp::array_store(var_hs_ground, var_33, var_1);
        }
    }
}



extern "C" __global__ void compute_hs_collision_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::int32> var_hs_node,
    wp::array_t<wp::int32> var_hs_body,
    wp::array_t<wp::int32> var_hs_ground,
    wp::array_t<wp::int32> var_num_hs_pair,
    wp::int32 var_num_HS,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::int32> var_surf_vi,
    wp::array_t<wp::vec_t<3,wp::float64>> var_dx,
    wp::array_t<wp::float64> var_node_xi,
    wp::array_t<wp::int32> var_node2body,
    wp::array_t<wp::vec_t<3,wp::float64>> var_half_space_n,
    wp::array_t<wp::vec_t<3,wp::float64>> var_half_space_o,
    wp::float64 var_dhat,
    wp::array_t<wp::int32> adj_hs_node,
    wp::array_t<wp::int32> adj_hs_body,
    wp::array_t<wp::int32> adj_hs_ground,
    wp::array_t<wp::int32> adj_num_hs_pair,
    wp::int32 adj_num_HS,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_x,
    wp::array_t<wp::int32> adj_surf_vi,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_dx,
    wp::array_t<wp::float64> adj_node_xi,
    wp::array_t<wp::int32> adj_node2body,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_half_space_n,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_half_space_o,
    wp::float64 adj_dhat)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32 var_1;
        wp::int32 var_2;
        wp::int32* var_3;
        wp::int32 var_4;
        wp::int32 var_5;
        wp::vec_t<3,wp::float64>* var_6;
        wp::vec_t<3,wp::float64> var_7;
        wp::vec_t<3,wp::float64> var_8;
        wp::vec_t<3,wp::float64>* var_9;
        wp::vec_t<3,wp::float64> var_10;
        wp::vec_t<3,wp::float64> var_11;
        wp::vec_t<3,wp::float64>* var_12;
        wp::vec_t<3,wp::float64> var_13;
        wp::vec_t<3,wp::float64> var_14;
        wp::vec_t<3,wp::float64>* var_15;
        wp::vec_t<3,wp::float64> var_16;
        wp::vec_t<3,wp::float64> var_17;
        wp::vec_t<3,wp::float64> var_18;
        wp::float64 var_19;
        wp::float64* var_20;
        wp::float64 var_21;
        wp::float64 var_22;
        wp::vec_t<3,wp::float64> var_23;
        wp::vec_t<3,wp::float64> var_24;
        wp::float64 var_25;
        wp::float64* var_26;
        wp::float64 var_27;
        wp::float64 var_28;
        wp::float64 var_29;
        bool var_30;
        const wp::int32 var_31 = 0;
        const wp::int32 var_32 = 1;
        wp::int32 var_33;
        wp::int32* var_34;
        wp::int32 var_35;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        wp::int32 adj_3 = {};
        wp::int32 adj_4 = {};
        wp::int32 adj_5 = {};
        wp::vec_t<3,wp::float64> adj_6 = {};
        wp::vec_t<3,wp::float64> adj_7 = {};
        wp::vec_t<3,wp::float64> adj_8 = {};
        wp::vec_t<3,wp::float64> adj_9 = {};
        wp::vec_t<3,wp::float64> adj_10 = {};
        wp::vec_t<3,wp::float64> adj_11 = {};
        wp::vec_t<3,wp::float64> adj_12 = {};
        wp::vec_t<3,wp::float64> adj_13 = {};
        wp::vec_t<3,wp::float64> adj_14 = {};
        wp::vec_t<3,wp::float64> adj_15 = {};
        wp::vec_t<3,wp::float64> adj_16 = {};
        wp::vec_t<3,wp::float64> adj_17 = {};
        wp::vec_t<3,wp::float64> adj_18 = {};
        wp::float64 adj_19 = {};
        wp::float64 adj_20 = {};
        wp::float64 adj_21 = {};
        wp::float64 adj_22 = {};
        wp::vec_t<3,wp::float64> adj_23 = {};
        wp::vec_t<3,wp::float64> adj_24 = {};
        wp::float64 adj_25 = {};
        wp::float64 adj_26 = {};
        wp::float64 adj_27 = {};
        wp::float64 adj_28 = {};
        wp::float64 adj_29 = {};
        bool adj_30 = {};
        wp::int32 adj_31 = {};
        wp::int32 adj_32 = {};
        wp::int32 adj_33 = {};
        wp::int32 adj_34 = {};
        wp::int32 adj_35 = {};
        //---------
        // forward
        // def compute_hs_collision(                                                              <L 558>
        // tid = wp.tid()                                                                         <L 573>
        var_0 = builtin_tid1d();
        // hs = tid % num_HS                                                                      <L 574>
        var_1 = wp::mod(var_0, var_num_HS);
        // svi = tid // num_HS                                                                    <L 575>
        var_2 = wp::floordiv(var_0, var_num_HS);
        // vi = surf_vi[svi]                                                                      <L 576>
        var_3 = wp::address(var_surf_vi, var_2);
        var_5 = wp::load(var_3);
        var_4 = wp::copy(var_5);
        // n = half_space_n[hs]                                                                   <L 577>
        var_6 = wp::address(var_half_space_n, var_1);
        var_8 = wp::load(var_6);
        var_7 = wp::copy(var_8);
        // o = half_space_o[hs]                                                                   <L 578>
        var_9 = wp::address(var_half_space_o, var_1);
        var_11 = wp::load(var_9);
        var_10 = wp::copy(var_11);
        // xIcoord = x[vi]                                                                        <L 579>
        var_12 = wp::address(var_x, var_4);
        var_14 = wp::load(var_12);
        var_13 = wp::copy(var_14);
        // dxIcoord = dx[vi]                                                                      <L 580>
        var_15 = wp::address(var_dx, var_4);
        var_17 = wp::load(var_15);
        var_16 = wp::copy(var_17);
        // d0 = wp.dot(xIcoord - o, n) - node_xi[svi]                                             <L 581>
        var_18 = wp::sub(var_13, var_10);
        var_19 = wp::dot(var_18, var_7);
        var_20 = wp::address(var_node_xi, var_2);
        var_22 = wp::load(var_20);
        var_21 = wp::sub(var_19, var_22);
        // d1 = wp.dot(xIcoord + dxIcoord - o, n) - node_xi[svi]                                  <L 582>
        var_23 = wp::add(var_13, var_16);
        var_24 = wp::sub(var_23, var_10);
        var_25 = wp::dot(var_24, var_7);
        var_26 = wp::address(var_node_xi, var_2);
        var_28 = wp::load(var_26);
        var_27 = wp::sub(var_25, var_28);
        // if min(d0, d1) < dhat:                                                                 <L 583>
        var_29 = wp::min(var_21, var_27);
        var_30 = (var_29 < var_dhat);
        if (var_30) {
            // offset = wp.atomic_add(num_hs_pair, 0, 1)                                          <L 584>
            // var_33 = wp::atomic_add(var_num_hs_pair, var_31, var_32);
            // hs_node[offset] = svi                                                              <L 585>
            // wp::array_store(var_hs_node, var_33, var_2);
            // hs_body[offset] = node2body[vi]                                                    <L 586>
            var_34 = wp::address(var_node2body, var_4);
            var_35 = wp::load(var_34);
            // wp::array_store(var_hs_body, var_33, var_35);
            // hs_ground[offset] = hs                                                             <L 587>
            // wp::array_store(var_hs_ground, var_33, var_1);
        }
        //---------
        // reverse
        if (var_30) {
            wp::adj_array_store(var_hs_ground, var_33, var_1, adj_hs_ground, adj_33, adj_1);
            // adj: hs_ground[offset] = hs                                                        <L 587>
            wp::adj_array_store(var_hs_body, var_33, var_35, adj_hs_body, adj_33, adj_34);
            wp::adj_load(var_34, adj_34, adj_35);
            wp::adj_address(var_node2body, var_4, adj_node2body, adj_4, adj_34);
            // adj: hs_body[offset] = node2body[vi]                                               <L 586>
            wp::adj_array_store(var_hs_node, var_33, var_2, adj_hs_node, adj_33, adj_2);
            // adj: hs_node[offset] = svi                                                         <L 585>
            wp::adj_atomic_add(var_num_hs_pair, var_31, var_32, adj_num_hs_pair, adj_31, adj_32, adj_33);
            // adj: offset = wp.atomic_add(num_hs_pair, 0, 1)                                     <L 584>
        }
        wp::adj_min(var_21, var_27, adj_21, adj_27, adj_29);
        // adj: if min(d0, d1) < dhat:                                                            <L 583>
        wp::adj_sub(var_25, var_28, adj_25, adj_26, adj_27);
        wp::adj_load(var_26, adj_26, adj_28);
        wp::adj_address(var_node_xi, var_2, adj_node_xi, adj_2, adj_26);
        wp::adj_dot(var_24, var_7, adj_24, adj_7, adj_25);
        wp::adj_sub(var_23, var_10, adj_23, adj_10, adj_24);
        wp::adj_add(var_13, var_16, adj_13, adj_16, adj_23);
        // adj: d1 = wp.dot(xIcoord + dxIcoord - o, n) - node_xi[svi]                             <L 582>
        wp::adj_sub(var_19, var_22, adj_19, adj_20, adj_21);
        wp::adj_load(var_20, adj_20, adj_22);
        wp::adj_address(var_node_xi, var_2, adj_node_xi, adj_2, adj_20);
        wp::adj_dot(var_18, var_7, adj_18, adj_7, adj_19);
        wp::adj_sub(var_13, var_10, adj_13, adj_10, adj_18);
        // adj: d0 = wp.dot(xIcoord - o, n) - node_xi[svi]                                        <L 581>
        wp::adj_copy(var_17, adj_15, adj_16);
        wp::adj_load(var_15, adj_15, adj_17);
        wp::adj_address(var_dx, var_4, adj_dx, adj_4, adj_15);
        // adj: dxIcoord = dx[vi]                                                                 <L 580>
        wp::adj_copy(var_14, adj_12, adj_13);
        wp::adj_load(var_12, adj_12, adj_14);
        wp::adj_address(var_x, var_4, adj_x, adj_4, adj_12);
        // adj: xIcoord = x[vi]                                                                   <L 579>
        wp::adj_copy(var_11, adj_9, adj_10);
        wp::adj_load(var_9, adj_9, adj_11);
        wp::adj_address(var_half_space_o, var_1, adj_half_space_o, adj_1, adj_9);
        // adj: o = half_space_o[hs]                                                              <L 578>
        wp::adj_copy(var_8, adj_6, adj_7);
        wp::adj_load(var_6, adj_6, adj_8);
        wp::adj_address(var_half_space_n, var_1, adj_half_space_n, adj_1, adj_6);
        // adj: n = half_space_n[hs]                                                              <L 577>
        wp::adj_copy(var_5, adj_3, adj_4);
        wp::adj_load(var_3, adj_3, adj_5);
        wp::adj_address(var_surf_vi, var_2, adj_surf_vi, adj_2, adj_3);
        // adj: vi = surf_vi[svi]                                                                 <L 576>
        wp::adj_floordiv(var_0, var_num_HS, adj_0, adj_num_HS, adj_2);
        // adj: svi = tid // num_HS                                                               <L 575>
        wp::adj_mod(var_0, var_num_HS, adj_0, adj_num_HS, adj_1);
        // adj: hs = tid % num_HS                                                                 <L 574>
        // adj: tid = wp.tid()                                                                    <L 573>
        // adj: def compute_hs_collision(                                                         <L 558>
        continue;
    }
}



extern "C" __global__ void compute_triangle_BB_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_triangleBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> var_triangleBB_upper,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::vec_t<3,wp::float64>> var_dx,
    wp::array_t<wp::vec_t<3,wp::int32>> var_triangle,
    wp::array_t<wp::float64> var_face_xi,
    wp::float64 var_dist)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        const wp::int32 var_1 = 0;
        wp::vec_t<3,wp::int32>* var_2;
        wp::int32 var_3;
        wp::vec_t<3,wp::int32> var_4;
        wp::vec_t<3,wp::float64>* var_5;
        wp::vec_t<3,wp::float64> var_6;
        wp::vec_t<3,wp::float64> var_7;
        const wp::int32 var_8 = 1;
        wp::vec_t<3,wp::int32>* var_9;
        wp::int32 var_10;
        wp::vec_t<3,wp::int32> var_11;
        wp::vec_t<3,wp::float64>* var_12;
        wp::vec_t<3,wp::float64> var_13;
        wp::vec_t<3,wp::float64> var_14;
        const wp::int32 var_15 = 2;
        wp::vec_t<3,wp::int32>* var_16;
        wp::int32 var_17;
        wp::vec_t<3,wp::int32> var_18;
        wp::vec_t<3,wp::float64>* var_19;
        wp::vec_t<3,wp::float64> var_20;
        wp::vec_t<3,wp::float64> var_21;
        const wp::int32 var_22 = 0;
        wp::vec_t<3,wp::int32>* var_23;
        wp::int32 var_24;
        wp::vec_t<3,wp::int32> var_25;
        wp::vec_t<3,wp::float64>* var_26;
        wp::vec_t<3,wp::float64> var_27;
        wp::vec_t<3,wp::float64> var_28;
        const wp::int32 var_29 = 1;
        wp::vec_t<3,wp::int32>* var_30;
        wp::int32 var_31;
        wp::vec_t<3,wp::int32> var_32;
        wp::vec_t<3,wp::float64>* var_33;
        wp::vec_t<3,wp::float64> var_34;
        wp::vec_t<3,wp::float64> var_35;
        const wp::int32 var_36 = 2;
        wp::vec_t<3,wp::int32>* var_37;
        wp::int32 var_38;
        wp::vec_t<3,wp::int32> var_39;
        wp::vec_t<3,wp::float64>* var_40;
        wp::vec_t<3,wp::float64> var_41;
        wp::vec_t<3,wp::float64> var_42;
        const wp::int32 var_43 = 0;
        wp::float64 var_44;
        wp::float64 var_45;
        wp::float64 var_46;
        wp::float64 var_47;
        wp::float64 var_48;
        wp::float64 var_49;
        wp::float64 var_50;
        wp::float64 var_51;
        wp::float64 var_52;
        wp::float64 var_53;
        wp::float64 var_54;
        wp::float64 var_55;
        wp::float64 var_56;
        wp::float64 var_57;
        wp::float64 var_58;
        wp::float64 var_59;
        wp::float64 var_60;
        const wp::float32 var_61 = 2.0;
        wp::float64 var_62;
        wp::float64 var_63;
        wp::float64 var_64;
        wp::float64* var_65;
        wp::float64 var_66;
        wp::float64 var_67;
        wp::float32 var_68;
        wp::vec_t<3,wp::float32>* var_69;
        wp::float32* var_70;
        wp::float64 var_71;
        wp::float64 var_72;
        wp::float64 var_73;
        wp::float64 var_74;
        wp::float64 var_75;
        wp::float64 var_76;
        wp::float64 var_77;
        wp::float64 var_78;
        wp::float64 var_79;
        wp::float64 var_80;
        wp::float64 var_81;
        wp::float64 var_82;
        wp::float64 var_83;
        wp::float64 var_84;
        wp::float64 var_85;
        wp::float64 var_86;
        wp::float64 var_87;
        const wp::float32 var_88 = 2.0;
        wp::float64 var_89;
        wp::float64 var_90;
        wp::float64 var_91;
        wp::float64* var_92;
        wp::float64 var_93;
        wp::float64 var_94;
        wp::float32 var_95;
        wp::vec_t<3,wp::float32>* var_96;
        wp::float32* var_97;
        const wp::int32 var_98 = 1;
        wp::float64 var_99;
        wp::float64 var_100;
        wp::float64 var_101;
        wp::float64 var_102;
        wp::float64 var_103;
        wp::float64 var_104;
        wp::float64 var_105;
        wp::float64 var_106;
        wp::float64 var_107;
        wp::float64 var_108;
        wp::float64 var_109;
        wp::float64 var_110;
        wp::float64 var_111;
        wp::float64 var_112;
        wp::float64 var_113;
        wp::float64 var_114;
        wp::float64 var_115;
        const wp::float32 var_116 = 2.0;
        wp::float64 var_117;
        wp::float64 var_118;
        wp::float64 var_119;
        wp::float64* var_120;
        wp::float64 var_121;
        wp::float64 var_122;
        wp::float32 var_123;
        wp::vec_t<3,wp::float32>* var_124;
        wp::float32* var_125;
        wp::float64 var_126;
        wp::float64 var_127;
        wp::float64 var_128;
        wp::float64 var_129;
        wp::float64 var_130;
        wp::float64 var_131;
        wp::float64 var_132;
        wp::float64 var_133;
        wp::float64 var_134;
        wp::float64 var_135;
        wp::float64 var_136;
        wp::float64 var_137;
        wp::float64 var_138;
        wp::float64 var_139;
        wp::float64 var_140;
        wp::float64 var_141;
        wp::float64 var_142;
        const wp::float32 var_143 = 2.0;
        wp::float64 var_144;
        wp::float64 var_145;
        wp::float64 var_146;
        wp::float64* var_147;
        wp::float64 var_148;
        wp::float64 var_149;
        wp::float32 var_150;
        wp::vec_t<3,wp::float32>* var_151;
        wp::float32* var_152;
        const wp::int32 var_153 = 2;
        wp::float64 var_154;
        wp::float64 var_155;
        wp::float64 var_156;
        wp::float64 var_157;
        wp::float64 var_158;
        wp::float64 var_159;
        wp::float64 var_160;
        wp::float64 var_161;
        wp::float64 var_162;
        wp::float64 var_163;
        wp::float64 var_164;
        wp::float64 var_165;
        wp::float64 var_166;
        wp::float64 var_167;
        wp::float64 var_168;
        wp::float64 var_169;
        wp::float64 var_170;
        const wp::float32 var_171 = 2.0;
        wp::float64 var_172;
        wp::float64 var_173;
        wp::float64 var_174;
        wp::float64* var_175;
        wp::float64 var_176;
        wp::float64 var_177;
        wp::float32 var_178;
        wp::vec_t<3,wp::float32>* var_179;
        wp::float32* var_180;
        wp::float64 var_181;
        wp::float64 var_182;
        wp::float64 var_183;
        wp::float64 var_184;
        wp::float64 var_185;
        wp::float64 var_186;
        wp::float64 var_187;
        wp::float64 var_188;
        wp::float64 var_189;
        wp::float64 var_190;
        wp::float64 var_191;
        wp::float64 var_192;
        wp::float64 var_193;
        wp::float64 var_194;
        wp::float64 var_195;
        wp::float64 var_196;
        wp::float64 var_197;
        const wp::float32 var_198 = 2.0;
        wp::float64 var_199;
        wp::float64 var_200;
        wp::float64 var_201;
        wp::float64* var_202;
        wp::float64 var_203;
        wp::float64 var_204;
        wp::float32 var_205;
        wp::vec_t<3,wp::float32>* var_206;
        wp::float32* var_207;
        //---------
        // forward
        // def compute_triangle_BB(                                                               <L 480>
        // idx = wp.tid()                                                                         <L 489>
        var_0 = builtin_tid1d();
        // A = x[triangle[idx][0]]                                                                <L 490>
        var_2 = wp::address(var_triangle, var_0);
        var_4 = wp::load(var_2);
        var_3 = wp::extract(var_4, var_1);
        var_5 = wp::address(var_x, var_3);
        var_7 = wp::load(var_5);
        var_6 = wp::copy(var_7);
        // B = x[triangle[idx][1]]                                                                <L 491>
        var_9 = wp::address(var_triangle, var_0);
        var_11 = wp::load(var_9);
        var_10 = wp::extract(var_11, var_8);
        var_12 = wp::address(var_x, var_10);
        var_14 = wp::load(var_12);
        var_13 = wp::copy(var_14);
        // C = x[triangle[idx][2]]                                                                <L 492>
        var_16 = wp::address(var_triangle, var_0);
        var_18 = wp::load(var_16);
        var_17 = wp::extract(var_18, var_15);
        var_19 = wp::address(var_x, var_17);
        var_21 = wp::load(var_19);
        var_20 = wp::copy(var_21);
        // dA = dx[triangle[idx][0]]                                                              <L 493>
        var_23 = wp::address(var_triangle, var_0);
        var_25 = wp::load(var_23);
        var_24 = wp::extract(var_25, var_22);
        var_26 = wp::address(var_dx, var_24);
        var_28 = wp::load(var_26);
        var_27 = wp::copy(var_28);
        // dB = dx[triangle[idx][1]]                                                              <L 494>
        var_30 = wp::address(var_triangle, var_0);
        var_32 = wp::load(var_30);
        var_31 = wp::extract(var_32, var_29);
        var_33 = wp::address(var_dx, var_31);
        var_35 = wp::load(var_33);
        var_34 = wp::copy(var_35);
        // dC = dx[triangle[idx][2]]                                                              <L 495>
        var_37 = wp::address(var_triangle, var_0);
        var_39 = wp::load(var_37);
        var_38 = wp::extract(var_39, var_36);
        var_40 = wp::address(var_dx, var_38);
        var_42 = wp::load(var_40);
        var_41 = wp::copy(var_42);
        // for d in range(3):                                                                     <L 497>
        // triangleBB_lower[idx][d] = wp.float32(                                                 <L 498>
        // wp.min(                                                                                <L 499>
        // wp.min(wp.min(A[d], B[d]), C[d]),                                                      <L 500>
        var_44 = wp::extract(var_6, var_43);
        var_45 = wp::extract(var_13, var_43);
        var_46 = wp::min(var_44, var_45);
        var_47 = wp::extract(var_20, var_43);
        var_48 = wp::min(var_46, var_47);
        // wp.min(wp.min(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                              <L 501>
        var_49 = wp::extract(var_6, var_43);
        var_50 = wp::extract(var_27, var_43);
        var_51 = wp::add(var_49, var_50);
        var_52 = wp::extract(var_13, var_43);
        var_53 = wp::extract(var_34, var_43);
        var_54 = wp::add(var_52, var_53);
        var_55 = wp::min(var_51, var_54);
        var_56 = wp::extract(var_20, var_43);
        var_57 = wp::extract(var_41, var_43);
        var_58 = wp::add(var_56, var_57);
        var_59 = wp::min(var_55, var_58);
        var_60 = wp::min(var_48, var_59);
        // - dist / wp.float64(2.0)                                                               <L 503>
        var_62 = wp::float64(var_61);
        var_63 = wp::div(var_dist, var_62);
        var_64 = wp::sub(var_60, var_63);
        // - face_xi[idx]                                                                         <L 504>
        var_65 = wp::address(var_face_xi, var_0);
        var_67 = wp::load(var_65);
        var_66 = wp::sub(var_64, var_67);
        var_68 = wp::float32(var_66);
        // triangleBB_lower[idx][d] = wp.float32(                                                 <L 498>
        var_69 = wp::address(var_triangleBB_lower, var_0);
        var_70 = wp::indexref(var_69, var_43);
        wp::store(var_70, var_68);
        // triangleBB_upper[idx][d] = wp.float32(                                                 <L 506>
        // wp.max(                                                                                <L 507>
        // wp.max(wp.max(A[d], B[d]), C[d]),                                                      <L 508>
        var_71 = wp::extract(var_6, var_43);
        var_72 = wp::extract(var_13, var_43);
        var_73 = wp::max(var_71, var_72);
        var_74 = wp::extract(var_20, var_43);
        var_75 = wp::max(var_73, var_74);
        // wp.max(wp.max(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                              <L 509>
        var_76 = wp::extract(var_6, var_43);
        var_77 = wp::extract(var_27, var_43);
        var_78 = wp::add(var_76, var_77);
        var_79 = wp::extract(var_13, var_43);
        var_80 = wp::extract(var_34, var_43);
        var_81 = wp::add(var_79, var_80);
        var_82 = wp::max(var_78, var_81);
        var_83 = wp::extract(var_20, var_43);
        var_84 = wp::extract(var_41, var_43);
        var_85 = wp::add(var_83, var_84);
        var_86 = wp::max(var_82, var_85);
        var_87 = wp::max(var_75, var_86);
        // + dist / wp.float64(2.0)                                                               <L 511>
        var_89 = wp::float64(var_88);
        var_90 = wp::div(var_dist, var_89);
        var_91 = wp::add(var_87, var_90);
        // + face_xi[idx]                                                                         <L 512>
        var_92 = wp::address(var_face_xi, var_0);
        var_94 = wp::load(var_92);
        var_93 = wp::add(var_91, var_94);
        var_95 = wp::float32(var_93);
        // triangleBB_upper[idx][d] = wp.float32(                                                 <L 506>
        var_96 = wp::address(var_triangleBB_upper, var_0);
        var_97 = wp::indexref(var_96, var_43);
        wp::store(var_97, var_95);
        // triangleBB_lower[idx][d] = wp.float32(                                                 <L 498>
        // wp.min(                                                                                <L 499>
        // wp.min(wp.min(A[d], B[d]), C[d]),                                                      <L 500>
        var_99 = wp::extract(var_6, var_98);
        var_100 = wp::extract(var_13, var_98);
        var_101 = wp::min(var_99, var_100);
        var_102 = wp::extract(var_20, var_98);
        var_103 = wp::min(var_101, var_102);
        // wp.min(wp.min(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                              <L 501>
        var_104 = wp::extract(var_6, var_98);
        var_105 = wp::extract(var_27, var_98);
        var_106 = wp::add(var_104, var_105);
        var_107 = wp::extract(var_13, var_98);
        var_108 = wp::extract(var_34, var_98);
        var_109 = wp::add(var_107, var_108);
        var_110 = wp::min(var_106, var_109);
        var_111 = wp::extract(var_20, var_98);
        var_112 = wp::extract(var_41, var_98);
        var_113 = wp::add(var_111, var_112);
        var_114 = wp::min(var_110, var_113);
        var_115 = wp::min(var_103, var_114);
        // - dist / wp.float64(2.0)                                                               <L 503>
        var_117 = wp::float64(var_116);
        var_118 = wp::div(var_dist, var_117);
        var_119 = wp::sub(var_115, var_118);
        // - face_xi[idx]                                                                         <L 504>
        var_120 = wp::address(var_face_xi, var_0);
        var_122 = wp::load(var_120);
        var_121 = wp::sub(var_119, var_122);
        var_123 = wp::float32(var_121);
        // triangleBB_lower[idx][d] = wp.float32(                                                 <L 498>
        var_124 = wp::address(var_triangleBB_lower, var_0);
        var_125 = wp::indexref(var_124, var_98);
        wp::store(var_125, var_123);
        // triangleBB_upper[idx][d] = wp.float32(                                                 <L 506>
        // wp.max(                                                                                <L 507>
        // wp.max(wp.max(A[d], B[d]), C[d]),                                                      <L 508>
        var_126 = wp::extract(var_6, var_98);
        var_127 = wp::extract(var_13, var_98);
        var_128 = wp::max(var_126, var_127);
        var_129 = wp::extract(var_20, var_98);
        var_130 = wp::max(var_128, var_129);
        // wp.max(wp.max(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                              <L 509>
        var_131 = wp::extract(var_6, var_98);
        var_132 = wp::extract(var_27, var_98);
        var_133 = wp::add(var_131, var_132);
        var_134 = wp::extract(var_13, var_98);
        var_135 = wp::extract(var_34, var_98);
        var_136 = wp::add(var_134, var_135);
        var_137 = wp::max(var_133, var_136);
        var_138 = wp::extract(var_20, var_98);
        var_139 = wp::extract(var_41, var_98);
        var_140 = wp::add(var_138, var_139);
        var_141 = wp::max(var_137, var_140);
        var_142 = wp::max(var_130, var_141);
        // + dist / wp.float64(2.0)                                                               <L 511>
        var_144 = wp::float64(var_143);
        var_145 = wp::div(var_dist, var_144);
        var_146 = wp::add(var_142, var_145);
        // + face_xi[idx]                                                                         <L 512>
        var_147 = wp::address(var_face_xi, var_0);
        var_149 = wp::load(var_147);
        var_148 = wp::add(var_146, var_149);
        var_150 = wp::float32(var_148);
        // triangleBB_upper[idx][d] = wp.float32(                                                 <L 506>
        var_151 = wp::address(var_triangleBB_upper, var_0);
        var_152 = wp::indexref(var_151, var_98);
        wp::store(var_152, var_150);
        // triangleBB_lower[idx][d] = wp.float32(                                                 <L 498>
        // wp.min(                                                                                <L 499>
        // wp.min(wp.min(A[d], B[d]), C[d]),                                                      <L 500>
        var_154 = wp::extract(var_6, var_153);
        var_155 = wp::extract(var_13, var_153);
        var_156 = wp::min(var_154, var_155);
        var_157 = wp::extract(var_20, var_153);
        var_158 = wp::min(var_156, var_157);
        // wp.min(wp.min(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                              <L 501>
        var_159 = wp::extract(var_6, var_153);
        var_160 = wp::extract(var_27, var_153);
        var_161 = wp::add(var_159, var_160);
        var_162 = wp::extract(var_13, var_153);
        var_163 = wp::extract(var_34, var_153);
        var_164 = wp::add(var_162, var_163);
        var_165 = wp::min(var_161, var_164);
        var_166 = wp::extract(var_20, var_153);
        var_167 = wp::extract(var_41, var_153);
        var_168 = wp::add(var_166, var_167);
        var_169 = wp::min(var_165, var_168);
        var_170 = wp::min(var_158, var_169);
        // - dist / wp.float64(2.0)                                                               <L 503>
        var_172 = wp::float64(var_171);
        var_173 = wp::div(var_dist, var_172);
        var_174 = wp::sub(var_170, var_173);
        // - face_xi[idx]                                                                         <L 504>
        var_175 = wp::address(var_face_xi, var_0);
        var_177 = wp::load(var_175);
        var_176 = wp::sub(var_174, var_177);
        var_178 = wp::float32(var_176);
        // triangleBB_lower[idx][d] = wp.float32(                                                 <L 498>
        var_179 = wp::address(var_triangleBB_lower, var_0);
        var_180 = wp::indexref(var_179, var_153);
        wp::store(var_180, var_178);
        // triangleBB_upper[idx][d] = wp.float32(                                                 <L 506>
        // wp.max(                                                                                <L 507>
        // wp.max(wp.max(A[d], B[d]), C[d]),                                                      <L 508>
        var_181 = wp::extract(var_6, var_153);
        var_182 = wp::extract(var_13, var_153);
        var_183 = wp::max(var_181, var_182);
        var_184 = wp::extract(var_20, var_153);
        var_185 = wp::max(var_183, var_184);
        // wp.max(wp.max(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                              <L 509>
        var_186 = wp::extract(var_6, var_153);
        var_187 = wp::extract(var_27, var_153);
        var_188 = wp::add(var_186, var_187);
        var_189 = wp::extract(var_13, var_153);
        var_190 = wp::extract(var_34, var_153);
        var_191 = wp::add(var_189, var_190);
        var_192 = wp::max(var_188, var_191);
        var_193 = wp::extract(var_20, var_153);
        var_194 = wp::extract(var_41, var_153);
        var_195 = wp::add(var_193, var_194);
        var_196 = wp::max(var_192, var_195);
        var_197 = wp::max(var_185, var_196);
        // + dist / wp.float64(2.0)                                                               <L 511>
        var_199 = wp::float64(var_198);
        var_200 = wp::div(var_dist, var_199);
        var_201 = wp::add(var_197, var_200);
        // + face_xi[idx]                                                                         <L 512>
        var_202 = wp::address(var_face_xi, var_0);
        var_204 = wp::load(var_202);
        var_203 = wp::add(var_201, var_204);
        var_205 = wp::float32(var_203);
        // triangleBB_upper[idx][d] = wp.float32(                                                 <L 506>
        var_206 = wp::address(var_triangleBB_upper, var_0);
        var_207 = wp::indexref(var_206, var_153);
        wp::store(var_207, var_205);
    }
}



extern "C" __global__ void compute_triangle_BB_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_triangleBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> var_triangleBB_upper,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::vec_t<3,wp::float64>> var_dx,
    wp::array_t<wp::vec_t<3,wp::int32>> var_triangle,
    wp::array_t<wp::float64> var_face_xi,
    wp::float64 var_dist,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_triangleBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_triangleBB_upper,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_x,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_dx,
    wp::array_t<wp::vec_t<3,wp::int32>> adj_triangle,
    wp::array_t<wp::float64> adj_face_xi,
    wp::float64 adj_dist)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        const wp::int32 var_1 = 0;
        wp::vec_t<3,wp::int32>* var_2;
        wp::int32 var_3;
        wp::vec_t<3,wp::int32> var_4;
        wp::vec_t<3,wp::float64>* var_5;
        wp::vec_t<3,wp::float64> var_6;
        wp::vec_t<3,wp::float64> var_7;
        const wp::int32 var_8 = 1;
        wp::vec_t<3,wp::int32>* var_9;
        wp::int32 var_10;
        wp::vec_t<3,wp::int32> var_11;
        wp::vec_t<3,wp::float64>* var_12;
        wp::vec_t<3,wp::float64> var_13;
        wp::vec_t<3,wp::float64> var_14;
        const wp::int32 var_15 = 2;
        wp::vec_t<3,wp::int32>* var_16;
        wp::int32 var_17;
        wp::vec_t<3,wp::int32> var_18;
        wp::vec_t<3,wp::float64>* var_19;
        wp::vec_t<3,wp::float64> var_20;
        wp::vec_t<3,wp::float64> var_21;
        const wp::int32 var_22 = 0;
        wp::vec_t<3,wp::int32>* var_23;
        wp::int32 var_24;
        wp::vec_t<3,wp::int32> var_25;
        wp::vec_t<3,wp::float64>* var_26;
        wp::vec_t<3,wp::float64> var_27;
        wp::vec_t<3,wp::float64> var_28;
        const wp::int32 var_29 = 1;
        wp::vec_t<3,wp::int32>* var_30;
        wp::int32 var_31;
        wp::vec_t<3,wp::int32> var_32;
        wp::vec_t<3,wp::float64>* var_33;
        wp::vec_t<3,wp::float64> var_34;
        wp::vec_t<3,wp::float64> var_35;
        const wp::int32 var_36 = 2;
        wp::vec_t<3,wp::int32>* var_37;
        wp::int32 var_38;
        wp::vec_t<3,wp::int32> var_39;
        wp::vec_t<3,wp::float64>* var_40;
        wp::vec_t<3,wp::float64> var_41;
        wp::vec_t<3,wp::float64> var_42;
        const wp::int32 var_43 = 0;
        wp::float64 var_44;
        wp::float64 var_45;
        wp::float64 var_46;
        wp::float64 var_47;
        wp::float64 var_48;
        wp::float64 var_49;
        wp::float64 var_50;
        wp::float64 var_51;
        wp::float64 var_52;
        wp::float64 var_53;
        wp::float64 var_54;
        wp::float64 var_55;
        wp::float64 var_56;
        wp::float64 var_57;
        wp::float64 var_58;
        wp::float64 var_59;
        wp::float64 var_60;
        const wp::float32 var_61 = 2.0;
        wp::float64 var_62;
        wp::float64 var_63;
        wp::float64 var_64;
        wp::float64* var_65;
        wp::float64 var_66;
        wp::float64 var_67;
        wp::float32 var_68;
        wp::vec_t<3,wp::float32>* var_69;
        wp::float32* var_70;
        wp::float64 var_71;
        wp::float64 var_72;
        wp::float64 var_73;
        wp::float64 var_74;
        wp::float64 var_75;
        wp::float64 var_76;
        wp::float64 var_77;
        wp::float64 var_78;
        wp::float64 var_79;
        wp::float64 var_80;
        wp::float64 var_81;
        wp::float64 var_82;
        wp::float64 var_83;
        wp::float64 var_84;
        wp::float64 var_85;
        wp::float64 var_86;
        wp::float64 var_87;
        const wp::float32 var_88 = 2.0;
        wp::float64 var_89;
        wp::float64 var_90;
        wp::float64 var_91;
        wp::float64* var_92;
        wp::float64 var_93;
        wp::float64 var_94;
        wp::float32 var_95;
        wp::vec_t<3,wp::float32>* var_96;
        wp::float32* var_97;
        const wp::int32 var_98 = 1;
        wp::float64 var_99;
        wp::float64 var_100;
        wp::float64 var_101;
        wp::float64 var_102;
        wp::float64 var_103;
        wp::float64 var_104;
        wp::float64 var_105;
        wp::float64 var_106;
        wp::float64 var_107;
        wp::float64 var_108;
        wp::float64 var_109;
        wp::float64 var_110;
        wp::float64 var_111;
        wp::float64 var_112;
        wp::float64 var_113;
        wp::float64 var_114;
        wp::float64 var_115;
        const wp::float32 var_116 = 2.0;
        wp::float64 var_117;
        wp::float64 var_118;
        wp::float64 var_119;
        wp::float64* var_120;
        wp::float64 var_121;
        wp::float64 var_122;
        wp::float32 var_123;
        wp::vec_t<3,wp::float32>* var_124;
        wp::float32* var_125;
        wp::float64 var_126;
        wp::float64 var_127;
        wp::float64 var_128;
        wp::float64 var_129;
        wp::float64 var_130;
        wp::float64 var_131;
        wp::float64 var_132;
        wp::float64 var_133;
        wp::float64 var_134;
        wp::float64 var_135;
        wp::float64 var_136;
        wp::float64 var_137;
        wp::float64 var_138;
        wp::float64 var_139;
        wp::float64 var_140;
        wp::float64 var_141;
        wp::float64 var_142;
        const wp::float32 var_143 = 2.0;
        wp::float64 var_144;
        wp::float64 var_145;
        wp::float64 var_146;
        wp::float64* var_147;
        wp::float64 var_148;
        wp::float64 var_149;
        wp::float32 var_150;
        wp::vec_t<3,wp::float32>* var_151;
        wp::float32* var_152;
        const wp::int32 var_153 = 2;
        wp::float64 var_154;
        wp::float64 var_155;
        wp::float64 var_156;
        wp::float64 var_157;
        wp::float64 var_158;
        wp::float64 var_159;
        wp::float64 var_160;
        wp::float64 var_161;
        wp::float64 var_162;
        wp::float64 var_163;
        wp::float64 var_164;
        wp::float64 var_165;
        wp::float64 var_166;
        wp::float64 var_167;
        wp::float64 var_168;
        wp::float64 var_169;
        wp::float64 var_170;
        const wp::float32 var_171 = 2.0;
        wp::float64 var_172;
        wp::float64 var_173;
        wp::float64 var_174;
        wp::float64* var_175;
        wp::float64 var_176;
        wp::float64 var_177;
        wp::float32 var_178;
        wp::vec_t<3,wp::float32>* var_179;
        wp::float32* var_180;
        wp::float64 var_181;
        wp::float64 var_182;
        wp::float64 var_183;
        wp::float64 var_184;
        wp::float64 var_185;
        wp::float64 var_186;
        wp::float64 var_187;
        wp::float64 var_188;
        wp::float64 var_189;
        wp::float64 var_190;
        wp::float64 var_191;
        wp::float64 var_192;
        wp::float64 var_193;
        wp::float64 var_194;
        wp::float64 var_195;
        wp::float64 var_196;
        wp::float64 var_197;
        const wp::float32 var_198 = 2.0;
        wp::float64 var_199;
        wp::float64 var_200;
        wp::float64 var_201;
        wp::float64* var_202;
        wp::float64 var_203;
        wp::float64 var_204;
        wp::float32 var_205;
        wp::vec_t<3,wp::float32>* var_206;
        wp::float32* var_207;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::vec_t<3,wp::int32> adj_2 = {};
        wp::int32 adj_3 = {};
        wp::vec_t<3,wp::int32> adj_4 = {};
        wp::vec_t<3,wp::float64> adj_5 = {};
        wp::vec_t<3,wp::float64> adj_6 = {};
        wp::vec_t<3,wp::float64> adj_7 = {};
        wp::int32 adj_8 = {};
        wp::vec_t<3,wp::int32> adj_9 = {};
        wp::int32 adj_10 = {};
        wp::vec_t<3,wp::int32> adj_11 = {};
        wp::vec_t<3,wp::float64> adj_12 = {};
        wp::vec_t<3,wp::float64> adj_13 = {};
        wp::vec_t<3,wp::float64> adj_14 = {};
        wp::int32 adj_15 = {};
        wp::vec_t<3,wp::int32> adj_16 = {};
        wp::int32 adj_17 = {};
        wp::vec_t<3,wp::int32> adj_18 = {};
        wp::vec_t<3,wp::float64> adj_19 = {};
        wp::vec_t<3,wp::float64> adj_20 = {};
        wp::vec_t<3,wp::float64> adj_21 = {};
        wp::int32 adj_22 = {};
        wp::vec_t<3,wp::int32> adj_23 = {};
        wp::int32 adj_24 = {};
        wp::vec_t<3,wp::int32> adj_25 = {};
        wp::vec_t<3,wp::float64> adj_26 = {};
        wp::vec_t<3,wp::float64> adj_27 = {};
        wp::vec_t<3,wp::float64> adj_28 = {};
        wp::int32 adj_29 = {};
        wp::vec_t<3,wp::int32> adj_30 = {};
        wp::int32 adj_31 = {};
        wp::vec_t<3,wp::int32> adj_32 = {};
        wp::vec_t<3,wp::float64> adj_33 = {};
        wp::vec_t<3,wp::float64> adj_34 = {};
        wp::vec_t<3,wp::float64> adj_35 = {};
        wp::int32 adj_36 = {};
        wp::vec_t<3,wp::int32> adj_37 = {};
        wp::int32 adj_38 = {};
        wp::vec_t<3,wp::int32> adj_39 = {};
        wp::vec_t<3,wp::float64> adj_40 = {};
        wp::vec_t<3,wp::float64> adj_41 = {};
        wp::vec_t<3,wp::float64> adj_42 = {};
        wp::int32 adj_43 = {};
        wp::float64 adj_44 = {};
        wp::float64 adj_45 = {};
        wp::float64 adj_46 = {};
        wp::float64 adj_47 = {};
        wp::float64 adj_48 = {};
        wp::float64 adj_49 = {};
        wp::float64 adj_50 = {};
        wp::float64 adj_51 = {};
        wp::float64 adj_52 = {};
        wp::float64 adj_53 = {};
        wp::float64 adj_54 = {};
        wp::float64 adj_55 = {};
        wp::float64 adj_56 = {};
        wp::float64 adj_57 = {};
        wp::float64 adj_58 = {};
        wp::float64 adj_59 = {};
        wp::float64 adj_60 = {};
        wp::float32 adj_61 = {};
        wp::float64 adj_62 = {};
        wp::float64 adj_63 = {};
        wp::float64 adj_64 = {};
        wp::float64 adj_65 = {};
        wp::float64 adj_66 = {};
        wp::float64 adj_67 = {};
        wp::float32 adj_68 = {};
        wp::vec_t<3,wp::float32> adj_69 = {};
        wp::float32 adj_70 = {};
        wp::float64 adj_71 = {};
        wp::float64 adj_72 = {};
        wp::float64 adj_73 = {};
        wp::float64 adj_74 = {};
        wp::float64 adj_75 = {};
        wp::float64 adj_76 = {};
        wp::float64 adj_77 = {};
        wp::float64 adj_78 = {};
        wp::float64 adj_79 = {};
        wp::float64 adj_80 = {};
        wp::float64 adj_81 = {};
        wp::float64 adj_82 = {};
        wp::float64 adj_83 = {};
        wp::float64 adj_84 = {};
        wp::float64 adj_85 = {};
        wp::float64 adj_86 = {};
        wp::float64 adj_87 = {};
        wp::float32 adj_88 = {};
        wp::float64 adj_89 = {};
        wp::float64 adj_90 = {};
        wp::float64 adj_91 = {};
        wp::float64 adj_92 = {};
        wp::float64 adj_93 = {};
        wp::float64 adj_94 = {};
        wp::float32 adj_95 = {};
        wp::vec_t<3,wp::float32> adj_96 = {};
        wp::float32 adj_97 = {};
        wp::int32 adj_98 = {};
        wp::float64 adj_99 = {};
        wp::float64 adj_100 = {};
        wp::float64 adj_101 = {};
        wp::float64 adj_102 = {};
        wp::float64 adj_103 = {};
        wp::float64 adj_104 = {};
        wp::float64 adj_105 = {};
        wp::float64 adj_106 = {};
        wp::float64 adj_107 = {};
        wp::float64 adj_108 = {};
        wp::float64 adj_109 = {};
        wp::float64 adj_110 = {};
        wp::float64 adj_111 = {};
        wp::float64 adj_112 = {};
        wp::float64 adj_113 = {};
        wp::float64 adj_114 = {};
        wp::float64 adj_115 = {};
        wp::float32 adj_116 = {};
        wp::float64 adj_117 = {};
        wp::float64 adj_118 = {};
        wp::float64 adj_119 = {};
        wp::float64 adj_120 = {};
        wp::float64 adj_121 = {};
        wp::float64 adj_122 = {};
        wp::float32 adj_123 = {};
        wp::vec_t<3,wp::float32> adj_124 = {};
        wp::float32 adj_125 = {};
        wp::float64 adj_126 = {};
        wp::float64 adj_127 = {};
        wp::float64 adj_128 = {};
        wp::float64 adj_129 = {};
        wp::float64 adj_130 = {};
        wp::float64 adj_131 = {};
        wp::float64 adj_132 = {};
        wp::float64 adj_133 = {};
        wp::float64 adj_134 = {};
        wp::float64 adj_135 = {};
        wp::float64 adj_136 = {};
        wp::float64 adj_137 = {};
        wp::float64 adj_138 = {};
        wp::float64 adj_139 = {};
        wp::float64 adj_140 = {};
        wp::float64 adj_141 = {};
        wp::float64 adj_142 = {};
        wp::float32 adj_143 = {};
        wp::float64 adj_144 = {};
        wp::float64 adj_145 = {};
        wp::float64 adj_146 = {};
        wp::float64 adj_147 = {};
        wp::float64 adj_148 = {};
        wp::float64 adj_149 = {};
        wp::float32 adj_150 = {};
        wp::vec_t<3,wp::float32> adj_151 = {};
        wp::float32 adj_152 = {};
        wp::int32 adj_153 = {};
        wp::float64 adj_154 = {};
        wp::float64 adj_155 = {};
        wp::float64 adj_156 = {};
        wp::float64 adj_157 = {};
        wp::float64 adj_158 = {};
        wp::float64 adj_159 = {};
        wp::float64 adj_160 = {};
        wp::float64 adj_161 = {};
        wp::float64 adj_162 = {};
        wp::float64 adj_163 = {};
        wp::float64 adj_164 = {};
        wp::float64 adj_165 = {};
        wp::float64 adj_166 = {};
        wp::float64 adj_167 = {};
        wp::float64 adj_168 = {};
        wp::float64 adj_169 = {};
        wp::float64 adj_170 = {};
        wp::float32 adj_171 = {};
        wp::float64 adj_172 = {};
        wp::float64 adj_173 = {};
        wp::float64 adj_174 = {};
        wp::float64 adj_175 = {};
        wp::float64 adj_176 = {};
        wp::float64 adj_177 = {};
        wp::float32 adj_178 = {};
        wp::vec_t<3,wp::float32> adj_179 = {};
        wp::float32 adj_180 = {};
        wp::float64 adj_181 = {};
        wp::float64 adj_182 = {};
        wp::float64 adj_183 = {};
        wp::float64 adj_184 = {};
        wp::float64 adj_185 = {};
        wp::float64 adj_186 = {};
        wp::float64 adj_187 = {};
        wp::float64 adj_188 = {};
        wp::float64 adj_189 = {};
        wp::float64 adj_190 = {};
        wp::float64 adj_191 = {};
        wp::float64 adj_192 = {};
        wp::float64 adj_193 = {};
        wp::float64 adj_194 = {};
        wp::float64 adj_195 = {};
        wp::float64 adj_196 = {};
        wp::float64 adj_197 = {};
        wp::float32 adj_198 = {};
        wp::float64 adj_199 = {};
        wp::float64 adj_200 = {};
        wp::float64 adj_201 = {};
        wp::float64 adj_202 = {};
        wp::float64 adj_203 = {};
        wp::float64 adj_204 = {};
        wp::float32 adj_205 = {};
        wp::vec_t<3,wp::float32> adj_206 = {};
        wp::float32 adj_207 = {};
        //---------
        // forward
        // def compute_triangle_BB(                                                               <L 480>
        // idx = wp.tid()                                                                         <L 489>
        var_0 = builtin_tid1d();
        // A = x[triangle[idx][0]]                                                                <L 490>
        var_2 = wp::address(var_triangle, var_0);
        var_4 = wp::load(var_2);
        var_3 = wp::extract(var_4, var_1);
        var_5 = wp::address(var_x, var_3);
        var_7 = wp::load(var_5);
        var_6 = wp::copy(var_7);
        // B = x[triangle[idx][1]]                                                                <L 491>
        var_9 = wp::address(var_triangle, var_0);
        var_11 = wp::load(var_9);
        var_10 = wp::extract(var_11, var_8);
        var_12 = wp::address(var_x, var_10);
        var_14 = wp::load(var_12);
        var_13 = wp::copy(var_14);
        // C = x[triangle[idx][2]]                                                                <L 492>
        var_16 = wp::address(var_triangle, var_0);
        var_18 = wp::load(var_16);
        var_17 = wp::extract(var_18, var_15);
        var_19 = wp::address(var_x, var_17);
        var_21 = wp::load(var_19);
        var_20 = wp::copy(var_21);
        // dA = dx[triangle[idx][0]]                                                              <L 493>
        var_23 = wp::address(var_triangle, var_0);
        var_25 = wp::load(var_23);
        var_24 = wp::extract(var_25, var_22);
        var_26 = wp::address(var_dx, var_24);
        var_28 = wp::load(var_26);
        var_27 = wp::copy(var_28);
        // dB = dx[triangle[idx][1]]                                                              <L 494>
        var_30 = wp::address(var_triangle, var_0);
        var_32 = wp::load(var_30);
        var_31 = wp::extract(var_32, var_29);
        var_33 = wp::address(var_dx, var_31);
        var_35 = wp::load(var_33);
        var_34 = wp::copy(var_35);
        // dC = dx[triangle[idx][2]]                                                              <L 495>
        var_37 = wp::address(var_triangle, var_0);
        var_39 = wp::load(var_37);
        var_38 = wp::extract(var_39, var_36);
        var_40 = wp::address(var_dx, var_38);
        var_42 = wp::load(var_40);
        var_41 = wp::copy(var_42);
        // for d in range(3):                                                                     <L 497>
        // triangleBB_lower[idx][d] = wp.float32(                                                 <L 498>
        // wp.min(                                                                                <L 499>
        // wp.min(wp.min(A[d], B[d]), C[d]),                                                      <L 500>
        var_44 = wp::extract(var_6, var_43);
        var_45 = wp::extract(var_13, var_43);
        var_46 = wp::min(var_44, var_45);
        var_47 = wp::extract(var_20, var_43);
        var_48 = wp::min(var_46, var_47);
        // wp.min(wp.min(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                              <L 501>
        var_49 = wp::extract(var_6, var_43);
        var_50 = wp::extract(var_27, var_43);
        var_51 = wp::add(var_49, var_50);
        var_52 = wp::extract(var_13, var_43);
        var_53 = wp::extract(var_34, var_43);
        var_54 = wp::add(var_52, var_53);
        var_55 = wp::min(var_51, var_54);
        var_56 = wp::extract(var_20, var_43);
        var_57 = wp::extract(var_41, var_43);
        var_58 = wp::add(var_56, var_57);
        var_59 = wp::min(var_55, var_58);
        var_60 = wp::min(var_48, var_59);
        // - dist / wp.float64(2.0)                                                               <L 503>
        var_62 = wp::float64(var_61);
        var_63 = wp::div(var_dist, var_62);
        var_64 = wp::sub(var_60, var_63);
        // - face_xi[idx]                                                                         <L 504>
        var_65 = wp::address(var_face_xi, var_0);
        var_67 = wp::load(var_65);
        var_66 = wp::sub(var_64, var_67);
        var_68 = wp::float32(var_66);
        // triangleBB_lower[idx][d] = wp.float32(                                                 <L 498>
        var_69 = wp::address(var_triangleBB_lower, var_0);
        // var_70 = wp::indexref(var_69, var_43);
        // wp::store(var_70, var_68);
        // triangleBB_upper[idx][d] = wp.float32(                                                 <L 506>
        // wp.max(                                                                                <L 507>
        // wp.max(wp.max(A[d], B[d]), C[d]),                                                      <L 508>
        var_71 = wp::extract(var_6, var_43);
        var_72 = wp::extract(var_13, var_43);
        var_73 = wp::max(var_71, var_72);
        var_74 = wp::extract(var_20, var_43);
        var_75 = wp::max(var_73, var_74);
        // wp.max(wp.max(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                              <L 509>
        var_76 = wp::extract(var_6, var_43);
        var_77 = wp::extract(var_27, var_43);
        var_78 = wp::add(var_76, var_77);
        var_79 = wp::extract(var_13, var_43);
        var_80 = wp::extract(var_34, var_43);
        var_81 = wp::add(var_79, var_80);
        var_82 = wp::max(var_78, var_81);
        var_83 = wp::extract(var_20, var_43);
        var_84 = wp::extract(var_41, var_43);
        var_85 = wp::add(var_83, var_84);
        var_86 = wp::max(var_82, var_85);
        var_87 = wp::max(var_75, var_86);
        // + dist / wp.float64(2.0)                                                               <L 511>
        var_89 = wp::float64(var_88);
        var_90 = wp::div(var_dist, var_89);
        var_91 = wp::add(var_87, var_90);
        // + face_xi[idx]                                                                         <L 512>
        var_92 = wp::address(var_face_xi, var_0);
        var_94 = wp::load(var_92);
        var_93 = wp::add(var_91, var_94);
        var_95 = wp::float32(var_93);
        // triangleBB_upper[idx][d] = wp.float32(                                                 <L 506>
        var_96 = wp::address(var_triangleBB_upper, var_0);
        // var_97 = wp::indexref(var_96, var_43);
        // wp::store(var_97, var_95);
        // triangleBB_lower[idx][d] = wp.float32(                                                 <L 498>
        // wp.min(                                                                                <L 499>
        // wp.min(wp.min(A[d], B[d]), C[d]),                                                      <L 500>
        var_99 = wp::extract(var_6, var_98);
        var_100 = wp::extract(var_13, var_98);
        var_101 = wp::min(var_99, var_100);
        var_102 = wp::extract(var_20, var_98);
        var_103 = wp::min(var_101, var_102);
        // wp.min(wp.min(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                              <L 501>
        var_104 = wp::extract(var_6, var_98);
        var_105 = wp::extract(var_27, var_98);
        var_106 = wp::add(var_104, var_105);
        var_107 = wp::extract(var_13, var_98);
        var_108 = wp::extract(var_34, var_98);
        var_109 = wp::add(var_107, var_108);
        var_110 = wp::min(var_106, var_109);
        var_111 = wp::extract(var_20, var_98);
        var_112 = wp::extract(var_41, var_98);
        var_113 = wp::add(var_111, var_112);
        var_114 = wp::min(var_110, var_113);
        var_115 = wp::min(var_103, var_114);
        // - dist / wp.float64(2.0)                                                               <L 503>
        var_117 = wp::float64(var_116);
        var_118 = wp::div(var_dist, var_117);
        var_119 = wp::sub(var_115, var_118);
        // - face_xi[idx]                                                                         <L 504>
        var_120 = wp::address(var_face_xi, var_0);
        var_122 = wp::load(var_120);
        var_121 = wp::sub(var_119, var_122);
        var_123 = wp::float32(var_121);
        // triangleBB_lower[idx][d] = wp.float32(                                                 <L 498>
        var_124 = wp::address(var_triangleBB_lower, var_0);
        // var_125 = wp::indexref(var_124, var_98);
        // wp::store(var_125, var_123);
        // triangleBB_upper[idx][d] = wp.float32(                                                 <L 506>
        // wp.max(                                                                                <L 507>
        // wp.max(wp.max(A[d], B[d]), C[d]),                                                      <L 508>
        var_126 = wp::extract(var_6, var_98);
        var_127 = wp::extract(var_13, var_98);
        var_128 = wp::max(var_126, var_127);
        var_129 = wp::extract(var_20, var_98);
        var_130 = wp::max(var_128, var_129);
        // wp.max(wp.max(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                              <L 509>
        var_131 = wp::extract(var_6, var_98);
        var_132 = wp::extract(var_27, var_98);
        var_133 = wp::add(var_131, var_132);
        var_134 = wp::extract(var_13, var_98);
        var_135 = wp::extract(var_34, var_98);
        var_136 = wp::add(var_134, var_135);
        var_137 = wp::max(var_133, var_136);
        var_138 = wp::extract(var_20, var_98);
        var_139 = wp::extract(var_41, var_98);
        var_140 = wp::add(var_138, var_139);
        var_141 = wp::max(var_137, var_140);
        var_142 = wp::max(var_130, var_141);
        // + dist / wp.float64(2.0)                                                               <L 511>
        var_144 = wp::float64(var_143);
        var_145 = wp::div(var_dist, var_144);
        var_146 = wp::add(var_142, var_145);
        // + face_xi[idx]                                                                         <L 512>
        var_147 = wp::address(var_face_xi, var_0);
        var_149 = wp::load(var_147);
        var_148 = wp::add(var_146, var_149);
        var_150 = wp::float32(var_148);
        // triangleBB_upper[idx][d] = wp.float32(                                                 <L 506>
        var_151 = wp::address(var_triangleBB_upper, var_0);
        // var_152 = wp::indexref(var_151, var_98);
        // wp::store(var_152, var_150);
        // triangleBB_lower[idx][d] = wp.float32(                                                 <L 498>
        // wp.min(                                                                                <L 499>
        // wp.min(wp.min(A[d], B[d]), C[d]),                                                      <L 500>
        var_154 = wp::extract(var_6, var_153);
        var_155 = wp::extract(var_13, var_153);
        var_156 = wp::min(var_154, var_155);
        var_157 = wp::extract(var_20, var_153);
        var_158 = wp::min(var_156, var_157);
        // wp.min(wp.min(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                              <L 501>
        var_159 = wp::extract(var_6, var_153);
        var_160 = wp::extract(var_27, var_153);
        var_161 = wp::add(var_159, var_160);
        var_162 = wp::extract(var_13, var_153);
        var_163 = wp::extract(var_34, var_153);
        var_164 = wp::add(var_162, var_163);
        var_165 = wp::min(var_161, var_164);
        var_166 = wp::extract(var_20, var_153);
        var_167 = wp::extract(var_41, var_153);
        var_168 = wp::add(var_166, var_167);
        var_169 = wp::min(var_165, var_168);
        var_170 = wp::min(var_158, var_169);
        // - dist / wp.float64(2.0)                                                               <L 503>
        var_172 = wp::float64(var_171);
        var_173 = wp::div(var_dist, var_172);
        var_174 = wp::sub(var_170, var_173);
        // - face_xi[idx]                                                                         <L 504>
        var_175 = wp::address(var_face_xi, var_0);
        var_177 = wp::load(var_175);
        var_176 = wp::sub(var_174, var_177);
        var_178 = wp::float32(var_176);
        // triangleBB_lower[idx][d] = wp.float32(                                                 <L 498>
        var_179 = wp::address(var_triangleBB_lower, var_0);
        // var_180 = wp::indexref(var_179, var_153);
        // wp::store(var_180, var_178);
        // triangleBB_upper[idx][d] = wp.float32(                                                 <L 506>
        // wp.max(                                                                                <L 507>
        // wp.max(wp.max(A[d], B[d]), C[d]),                                                      <L 508>
        var_181 = wp::extract(var_6, var_153);
        var_182 = wp::extract(var_13, var_153);
        var_183 = wp::max(var_181, var_182);
        var_184 = wp::extract(var_20, var_153);
        var_185 = wp::max(var_183, var_184);
        // wp.max(wp.max(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                              <L 509>
        var_186 = wp::extract(var_6, var_153);
        var_187 = wp::extract(var_27, var_153);
        var_188 = wp::add(var_186, var_187);
        var_189 = wp::extract(var_13, var_153);
        var_190 = wp::extract(var_34, var_153);
        var_191 = wp::add(var_189, var_190);
        var_192 = wp::max(var_188, var_191);
        var_193 = wp::extract(var_20, var_153);
        var_194 = wp::extract(var_41, var_153);
        var_195 = wp::add(var_193, var_194);
        var_196 = wp::max(var_192, var_195);
        var_197 = wp::max(var_185, var_196);
        // + dist / wp.float64(2.0)                                                               <L 511>
        var_199 = wp::float64(var_198);
        var_200 = wp::div(var_dist, var_199);
        var_201 = wp::add(var_197, var_200);
        // + face_xi[idx]                                                                         <L 512>
        var_202 = wp::address(var_face_xi, var_0);
        var_204 = wp::load(var_202);
        var_203 = wp::add(var_201, var_204);
        var_205 = wp::float32(var_203);
        // triangleBB_upper[idx][d] = wp.float32(                                                 <L 506>
        var_206 = wp::address(var_triangleBB_upper, var_0);
        // var_207 = wp::indexref(var_206, var_153);
        // wp::store(var_207, var_205);
        //---------
        // reverse
        wp::adj_store(var_207, var_205, adj_207, adj_205);
        wp::adj_indexref(var_206, var_153, adj_206, adj_153, adj_207);
        wp::adj_address(var_triangleBB_upper, var_0, adj_triangleBB_upper, adj_0, adj_206);
        // adj: triangleBB_upper[idx][d] = wp.float32(                                            <L 506>
        wp::adj_float32(var_203, adj_203, adj_205);
        wp::adj_add(var_201, var_204, adj_201, adj_202, adj_203);
        wp::adj_load(var_202, adj_202, adj_204);
        wp::adj_address(var_face_xi, var_0, adj_face_xi, adj_0, adj_202);
        // adj: + face_xi[idx]                                                                    <L 512>
        wp::adj_add(var_197, var_200, adj_197, adj_200, adj_201);
        wp::adj_div(var_dist, var_199, var_200, adj_dist, adj_199, adj_200);
        wp::adj_float64(var_198, adj_198, adj_199);
        // adj: + dist / wp.float64(2.0)                                                          <L 511>
        wp::adj_max(var_185, var_196, adj_185, adj_196, adj_197);
        wp::adj_max(var_192, var_195, adj_192, adj_195, adj_196);
        wp::adj_add(var_193, var_194, adj_193, adj_194, adj_195);
        wp::adj_extract(var_41, var_153, adj_41, adj_153, adj_194);
        wp::adj_extract(var_20, var_153, adj_20, adj_153, adj_193);
        wp::adj_max(var_188, var_191, adj_188, adj_191, adj_192);
        wp::adj_add(var_189, var_190, adj_189, adj_190, adj_191);
        wp::adj_extract(var_34, var_153, adj_34, adj_153, adj_190);
        wp::adj_extract(var_13, var_153, adj_13, adj_153, adj_189);
        wp::adj_add(var_186, var_187, adj_186, adj_187, adj_188);
        wp::adj_extract(var_27, var_153, adj_27, adj_153, adj_187);
        wp::adj_extract(var_6, var_153, adj_6, adj_153, adj_186);
        // adj: wp.max(wp.max(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                         <L 509>
        wp::adj_max(var_183, var_184, adj_183, adj_184, adj_185);
        wp::adj_extract(var_20, var_153, adj_20, adj_153, adj_184);
        wp::adj_max(var_181, var_182, adj_181, adj_182, adj_183);
        wp::adj_extract(var_13, var_153, adj_13, adj_153, adj_182);
        wp::adj_extract(var_6, var_153, adj_6, adj_153, adj_181);
        // adj: wp.max(wp.max(A[d], B[d]), C[d]),                                                 <L 508>
        // adj: wp.max(                                                                           <L 507>
        // adj: triangleBB_upper[idx][d] = wp.float32(                                            <L 506>
        wp::adj_store(var_180, var_178, adj_180, adj_178);
        wp::adj_indexref(var_179, var_153, adj_179, adj_153, adj_180);
        wp::adj_address(var_triangleBB_lower, var_0, adj_triangleBB_lower, adj_0, adj_179);
        // adj: triangleBB_lower[idx][d] = wp.float32(                                            <L 498>
        wp::adj_float32(var_176, adj_176, adj_178);
        wp::adj_sub(var_174, var_177, adj_174, adj_175, adj_176);
        wp::adj_load(var_175, adj_175, adj_177);
        wp::adj_address(var_face_xi, var_0, adj_face_xi, adj_0, adj_175);
        // adj: - face_xi[idx]                                                                    <L 504>
        wp::adj_sub(var_170, var_173, adj_170, adj_173, adj_174);
        wp::adj_div(var_dist, var_172, var_173, adj_dist, adj_172, adj_173);
        wp::adj_float64(var_171, adj_171, adj_172);
        // adj: - dist / wp.float64(2.0)                                                          <L 503>
        wp::adj_min(var_158, var_169, adj_158, adj_169, adj_170);
        wp::adj_min(var_165, var_168, adj_165, adj_168, adj_169);
        wp::adj_add(var_166, var_167, adj_166, adj_167, adj_168);
        wp::adj_extract(var_41, var_153, adj_41, adj_153, adj_167);
        wp::adj_extract(var_20, var_153, adj_20, adj_153, adj_166);
        wp::adj_min(var_161, var_164, adj_161, adj_164, adj_165);
        wp::adj_add(var_162, var_163, adj_162, adj_163, adj_164);
        wp::adj_extract(var_34, var_153, adj_34, adj_153, adj_163);
        wp::adj_extract(var_13, var_153, adj_13, adj_153, adj_162);
        wp::adj_add(var_159, var_160, adj_159, adj_160, adj_161);
        wp::adj_extract(var_27, var_153, adj_27, adj_153, adj_160);
        wp::adj_extract(var_6, var_153, adj_6, adj_153, adj_159);
        // adj: wp.min(wp.min(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                         <L 501>
        wp::adj_min(var_156, var_157, adj_156, adj_157, adj_158);
        wp::adj_extract(var_20, var_153, adj_20, adj_153, adj_157);
        wp::adj_min(var_154, var_155, adj_154, adj_155, adj_156);
        wp::adj_extract(var_13, var_153, adj_13, adj_153, adj_155);
        wp::adj_extract(var_6, var_153, adj_6, adj_153, adj_154);
        // adj: wp.min(wp.min(A[d], B[d]), C[d]),                                                 <L 500>
        // adj: wp.min(                                                                           <L 499>
        // adj: triangleBB_lower[idx][d] = wp.float32(                                            <L 498>
        wp::adj_store(var_152, var_150, adj_152, adj_150);
        wp::adj_indexref(var_151, var_98, adj_151, adj_98, adj_152);
        wp::adj_address(var_triangleBB_upper, var_0, adj_triangleBB_upper, adj_0, adj_151);
        // adj: triangleBB_upper[idx][d] = wp.float32(                                            <L 506>
        wp::adj_float32(var_148, adj_148, adj_150);
        wp::adj_add(var_146, var_149, adj_146, adj_147, adj_148);
        wp::adj_load(var_147, adj_147, adj_149);
        wp::adj_address(var_face_xi, var_0, adj_face_xi, adj_0, adj_147);
        // adj: + face_xi[idx]                                                                    <L 512>
        wp::adj_add(var_142, var_145, adj_142, adj_145, adj_146);
        wp::adj_div(var_dist, var_144, var_145, adj_dist, adj_144, adj_145);
        wp::adj_float64(var_143, adj_143, adj_144);
        // adj: + dist / wp.float64(2.0)                                                          <L 511>
        wp::adj_max(var_130, var_141, adj_130, adj_141, adj_142);
        wp::adj_max(var_137, var_140, adj_137, adj_140, adj_141);
        wp::adj_add(var_138, var_139, adj_138, adj_139, adj_140);
        wp::adj_extract(var_41, var_98, adj_41, adj_98, adj_139);
        wp::adj_extract(var_20, var_98, adj_20, adj_98, adj_138);
        wp::adj_max(var_133, var_136, adj_133, adj_136, adj_137);
        wp::adj_add(var_134, var_135, adj_134, adj_135, adj_136);
        wp::adj_extract(var_34, var_98, adj_34, adj_98, adj_135);
        wp::adj_extract(var_13, var_98, adj_13, adj_98, adj_134);
        wp::adj_add(var_131, var_132, adj_131, adj_132, adj_133);
        wp::adj_extract(var_27, var_98, adj_27, adj_98, adj_132);
        wp::adj_extract(var_6, var_98, adj_6, adj_98, adj_131);
        // adj: wp.max(wp.max(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                         <L 509>
        wp::adj_max(var_128, var_129, adj_128, adj_129, adj_130);
        wp::adj_extract(var_20, var_98, adj_20, adj_98, adj_129);
        wp::adj_max(var_126, var_127, adj_126, adj_127, adj_128);
        wp::adj_extract(var_13, var_98, adj_13, adj_98, adj_127);
        wp::adj_extract(var_6, var_98, adj_6, adj_98, adj_126);
        // adj: wp.max(wp.max(A[d], B[d]), C[d]),                                                 <L 508>
        // adj: wp.max(                                                                           <L 507>
        // adj: triangleBB_upper[idx][d] = wp.float32(                                            <L 506>
        wp::adj_store(var_125, var_123, adj_125, adj_123);
        wp::adj_indexref(var_124, var_98, adj_124, adj_98, adj_125);
        wp::adj_address(var_triangleBB_lower, var_0, adj_triangleBB_lower, adj_0, adj_124);
        // adj: triangleBB_lower[idx][d] = wp.float32(                                            <L 498>
        wp::adj_float32(var_121, adj_121, adj_123);
        wp::adj_sub(var_119, var_122, adj_119, adj_120, adj_121);
        wp::adj_load(var_120, adj_120, adj_122);
        wp::adj_address(var_face_xi, var_0, adj_face_xi, adj_0, adj_120);
        // adj: - face_xi[idx]                                                                    <L 504>
        wp::adj_sub(var_115, var_118, adj_115, adj_118, adj_119);
        wp::adj_div(var_dist, var_117, var_118, adj_dist, adj_117, adj_118);
        wp::adj_float64(var_116, adj_116, adj_117);
        // adj: - dist / wp.float64(2.0)                                                          <L 503>
        wp::adj_min(var_103, var_114, adj_103, adj_114, adj_115);
        wp::adj_min(var_110, var_113, adj_110, adj_113, adj_114);
        wp::adj_add(var_111, var_112, adj_111, adj_112, adj_113);
        wp::adj_extract(var_41, var_98, adj_41, adj_98, adj_112);
        wp::adj_extract(var_20, var_98, adj_20, adj_98, adj_111);
        wp::adj_min(var_106, var_109, adj_106, adj_109, adj_110);
        wp::adj_add(var_107, var_108, adj_107, adj_108, adj_109);
        wp::adj_extract(var_34, var_98, adj_34, adj_98, adj_108);
        wp::adj_extract(var_13, var_98, adj_13, adj_98, adj_107);
        wp::adj_add(var_104, var_105, adj_104, adj_105, adj_106);
        wp::adj_extract(var_27, var_98, adj_27, adj_98, adj_105);
        wp::adj_extract(var_6, var_98, adj_6, adj_98, adj_104);
        // adj: wp.min(wp.min(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                         <L 501>
        wp::adj_min(var_101, var_102, adj_101, adj_102, adj_103);
        wp::adj_extract(var_20, var_98, adj_20, adj_98, adj_102);
        wp::adj_min(var_99, var_100, adj_99, adj_100, adj_101);
        wp::adj_extract(var_13, var_98, adj_13, adj_98, adj_100);
        wp::adj_extract(var_6, var_98, adj_6, adj_98, adj_99);
        // adj: wp.min(wp.min(A[d], B[d]), C[d]),                                                 <L 500>
        // adj: wp.min(                                                                           <L 499>
        // adj: triangleBB_lower[idx][d] = wp.float32(                                            <L 498>
        wp::adj_store(var_97, var_95, adj_97, adj_95);
        wp::adj_indexref(var_96, var_43, adj_96, adj_43, adj_97);
        wp::adj_address(var_triangleBB_upper, var_0, adj_triangleBB_upper, adj_0, adj_96);
        // adj: triangleBB_upper[idx][d] = wp.float32(                                            <L 506>
        wp::adj_float32(var_93, adj_93, adj_95);
        wp::adj_add(var_91, var_94, adj_91, adj_92, adj_93);
        wp::adj_load(var_92, adj_92, adj_94);
        wp::adj_address(var_face_xi, var_0, adj_face_xi, adj_0, adj_92);
        // adj: + face_xi[idx]                                                                    <L 512>
        wp::adj_add(var_87, var_90, adj_87, adj_90, adj_91);
        wp::adj_div(var_dist, var_89, var_90, adj_dist, adj_89, adj_90);
        wp::adj_float64(var_88, adj_88, adj_89);
        // adj: + dist / wp.float64(2.0)                                                          <L 511>
        wp::adj_max(var_75, var_86, adj_75, adj_86, adj_87);
        wp::adj_max(var_82, var_85, adj_82, adj_85, adj_86);
        wp::adj_add(var_83, var_84, adj_83, adj_84, adj_85);
        wp::adj_extract(var_41, var_43, adj_41, adj_43, adj_84);
        wp::adj_extract(var_20, var_43, adj_20, adj_43, adj_83);
        wp::adj_max(var_78, var_81, adj_78, adj_81, adj_82);
        wp::adj_add(var_79, var_80, adj_79, adj_80, adj_81);
        wp::adj_extract(var_34, var_43, adj_34, adj_43, adj_80);
        wp::adj_extract(var_13, var_43, adj_13, adj_43, adj_79);
        wp::adj_add(var_76, var_77, adj_76, adj_77, adj_78);
        wp::adj_extract(var_27, var_43, adj_27, adj_43, adj_77);
        wp::adj_extract(var_6, var_43, adj_6, adj_43, adj_76);
        // adj: wp.max(wp.max(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                         <L 509>
        wp::adj_max(var_73, var_74, adj_73, adj_74, adj_75);
        wp::adj_extract(var_20, var_43, adj_20, adj_43, adj_74);
        wp::adj_max(var_71, var_72, adj_71, adj_72, adj_73);
        wp::adj_extract(var_13, var_43, adj_13, adj_43, adj_72);
        wp::adj_extract(var_6, var_43, adj_6, adj_43, adj_71);
        // adj: wp.max(wp.max(A[d], B[d]), C[d]),                                                 <L 508>
        // adj: wp.max(                                                                           <L 507>
        // adj: triangleBB_upper[idx][d] = wp.float32(                                            <L 506>
        wp::adj_store(var_70, var_68, adj_70, adj_68);
        wp::adj_indexref(var_69, var_43, adj_69, adj_43, adj_70);
        wp::adj_address(var_triangleBB_lower, var_0, adj_triangleBB_lower, adj_0, adj_69);
        // adj: triangleBB_lower[idx][d] = wp.float32(                                            <L 498>
        wp::adj_float32(var_66, adj_66, adj_68);
        wp::adj_sub(var_64, var_67, adj_64, adj_65, adj_66);
        wp::adj_load(var_65, adj_65, adj_67);
        wp::adj_address(var_face_xi, var_0, adj_face_xi, adj_0, adj_65);
        // adj: - face_xi[idx]                                                                    <L 504>
        wp::adj_sub(var_60, var_63, adj_60, adj_63, adj_64);
        wp::adj_div(var_dist, var_62, var_63, adj_dist, adj_62, adj_63);
        wp::adj_float64(var_61, adj_61, adj_62);
        // adj: - dist / wp.float64(2.0)                                                          <L 503>
        wp::adj_min(var_48, var_59, adj_48, adj_59, adj_60);
        wp::adj_min(var_55, var_58, adj_55, adj_58, adj_59);
        wp::adj_add(var_56, var_57, adj_56, adj_57, adj_58);
        wp::adj_extract(var_41, var_43, adj_41, adj_43, adj_57);
        wp::adj_extract(var_20, var_43, adj_20, adj_43, adj_56);
        wp::adj_min(var_51, var_54, adj_51, adj_54, adj_55);
        wp::adj_add(var_52, var_53, adj_52, adj_53, adj_54);
        wp::adj_extract(var_34, var_43, adj_34, adj_43, adj_53);
        wp::adj_extract(var_13, var_43, adj_13, adj_43, adj_52);
        wp::adj_add(var_49, var_50, adj_49, adj_50, adj_51);
        wp::adj_extract(var_27, var_43, adj_27, adj_43, adj_50);
        wp::adj_extract(var_6, var_43, adj_6, adj_43, adj_49);
        // adj: wp.min(wp.min(A[d] + dA[d], B[d] + dB[d]), C[d] + dC[d]),                         <L 501>
        wp::adj_min(var_46, var_47, adj_46, adj_47, adj_48);
        wp::adj_extract(var_20, var_43, adj_20, adj_43, adj_47);
        wp::adj_min(var_44, var_45, adj_44, adj_45, adj_46);
        wp::adj_extract(var_13, var_43, adj_13, adj_43, adj_45);
        wp::adj_extract(var_6, var_43, adj_6, adj_43, adj_44);
        // adj: wp.min(wp.min(A[d], B[d]), C[d]),                                                 <L 500>
        // adj: wp.min(                                                                           <L 499>
        // adj: triangleBB_lower[idx][d] = wp.float32(                                            <L 498>
        // adj: for d in range(3):                                                                <L 497>
        wp::adj_copy(var_42, adj_40, adj_41);
        wp::adj_load(var_40, adj_40, adj_42);
        wp::adj_address(var_dx, var_38, adj_dx, adj_38, adj_40);
        wp::adj_extract(var_39, var_36, adj_37, adj_36, adj_38);
        wp::adj_load(var_37, adj_37, adj_39);
        wp::adj_address(var_triangle, var_0, adj_triangle, adj_0, adj_37);
        // adj: dC = dx[triangle[idx][2]]                                                         <L 495>
        wp::adj_copy(var_35, adj_33, adj_34);
        wp::adj_load(var_33, adj_33, adj_35);
        wp::adj_address(var_dx, var_31, adj_dx, adj_31, adj_33);
        wp::adj_extract(var_32, var_29, adj_30, adj_29, adj_31);
        wp::adj_load(var_30, adj_30, adj_32);
        wp::adj_address(var_triangle, var_0, adj_triangle, adj_0, adj_30);
        // adj: dB = dx[triangle[idx][1]]                                                         <L 494>
        wp::adj_copy(var_28, adj_26, adj_27);
        wp::adj_load(var_26, adj_26, adj_28);
        wp::adj_address(var_dx, var_24, adj_dx, adj_24, adj_26);
        wp::adj_extract(var_25, var_22, adj_23, adj_22, adj_24);
        wp::adj_load(var_23, adj_23, adj_25);
        wp::adj_address(var_triangle, var_0, adj_triangle, adj_0, adj_23);
        // adj: dA = dx[triangle[idx][0]]                                                         <L 493>
        wp::adj_copy(var_21, adj_19, adj_20);
        wp::adj_load(var_19, adj_19, adj_21);
        wp::adj_address(var_x, var_17, adj_x, adj_17, adj_19);
        wp::adj_extract(var_18, var_15, adj_16, adj_15, adj_17);
        wp::adj_load(var_16, adj_16, adj_18);
        wp::adj_address(var_triangle, var_0, adj_triangle, adj_0, adj_16);
        // adj: C = x[triangle[idx][2]]                                                           <L 492>
        wp::adj_copy(var_14, adj_12, adj_13);
        wp::adj_load(var_12, adj_12, adj_14);
        wp::adj_address(var_x, var_10, adj_x, adj_10, adj_12);
        wp::adj_extract(var_11, var_8, adj_9, adj_8, adj_10);
        wp::adj_load(var_9, adj_9, adj_11);
        wp::adj_address(var_triangle, var_0, adj_triangle, adj_0, adj_9);
        // adj: B = x[triangle[idx][1]]                                                           <L 491>
        wp::adj_copy(var_7, adj_5, adj_6);
        wp::adj_load(var_5, adj_5, adj_7);
        wp::adj_address(var_x, var_3, adj_x, adj_3, adj_5);
        wp::adj_extract(var_4, var_1, adj_2, adj_1, adj_3);
        wp::adj_load(var_2, adj_2, adj_4);
        wp::adj_address(var_triangle, var_0, adj_triangle, adj_0, adj_2);
        // adj: A = x[triangle[idx][0]]                                                           <L 490>
        // adj: idx = wp.tid()                                                                    <L 489>
        // adj: def compute_triangle_BB(                                                          <L 480>
        continue;
    }
}



extern "C" __global__ void init_step_size_collisions_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::float64> var_alpha_PTEE,
    wp::array_t<wp::int32> var_env_PTEE,
    wp::array_t<wp::int32> var_node2body,
    wp::array_t<wp::int32> var_body_env_id,
    wp::array_t<wp::int32> var_env_states,
    wp::array_t<wp::int32> var_nodeI,
    wp::array_t<wp::int32> var_nodeJ,
    wp::array_t<wp::int32> var_collision_type,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::int32> var_surf_vi,
    wp::array_t<wp::vec_t<3,wp::float64>> var_p_x,
    wp::array_t<wp::float64> var_node_xi,
    wp::array_t<wp::float64> var_edge_xi,
    wp::array_t<wp::float64> var_face_xi,
    wp::array_t<wp::vec_t<2,wp::int32>> var_edge,
    wp::array_t<wp::vec_t<3,wp::int32>> var_face,
    wp::float64 var_eta)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        const wp::int32 var_2 = 1;
        bool var_3;
        wp::int32 var_4;
        wp::int32* var_5;
        const wp::int32 var_6 = 0;
        bool var_7;
        wp::int32 var_8;
        bool var_9;
        wp::int32* var_10;
        bool var_11;
        wp::int32 var_12;
        wp::int32* var_13;
        wp::int32* var_14;
        wp::int32 var_15;
        wp::int32 var_16;
        wp::int32 var_17;
        wp::int32* var_18;
        wp::int32 var_19;
        wp::int32 var_20;
        wp::int32* var_21;
        bool var_22;
        wp::int32 var_23;
        wp::int32* var_24;
        wp::int32* var_25;
        wp::int32 var_26;
        wp::int32 var_27;
        wp::int32 var_28;
        wp::vec_t<3,wp::int32>* var_29;
        wp::vec_t<3,wp::int32> var_30;
        wp::vec_t<3,wp::int32> var_31;
        wp::float64* var_32;
        wp::float64* var_33;
        wp::float64 var_34;
        wp::float64 var_35;
        wp::float64 var_36;
        wp::vec_t<3,wp::float64>* var_37;
        wp::vec_t<3,wp::float64> var_38;
        wp::vec_t<3,wp::float64> var_39;
        const wp::int32 var_40 = 0;
        wp::int32 var_41;
        wp::vec_t<3,wp::float64>* var_42;
        wp::vec_t<3,wp::float64> var_43;
        wp::vec_t<3,wp::float64> var_44;
        const wp::int32 var_45 = 1;
        wp::int32 var_46;
        wp::vec_t<3,wp::float64>* var_47;
        wp::vec_t<3,wp::float64> var_48;
        wp::vec_t<3,wp::float64> var_49;
        const wp::int32 var_50 = 2;
        wp::int32 var_51;
        wp::vec_t<3,wp::float64>* var_52;
        wp::vec_t<3,wp::float64> var_53;
        wp::vec_t<3,wp::float64> var_54;
        wp::vec_t<3,wp::float64>* var_55;
        wp::vec_t<3,wp::float64> var_56;
        wp::vec_t<3,wp::float64> var_57;
        const wp::int32 var_58 = 0;
        wp::int32 var_59;
        wp::vec_t<3,wp::float64>* var_60;
        wp::vec_t<3,wp::float64> var_61;
        wp::vec_t<3,wp::float64> var_62;
        const wp::int32 var_63 = 1;
        wp::int32 var_64;
        wp::vec_t<3,wp::float64>* var_65;
        wp::vec_t<3,wp::float64> var_66;
        wp::vec_t<3,wp::float64> var_67;
        const wp::int32 var_68 = 2;
        wp::int32 var_69;
        wp::vec_t<3,wp::float64>* var_70;
        wp::vec_t<3,wp::float64> var_71;
        wp::vec_t<3,wp::float64> var_72;
        wp::int32* var_73;
        wp::int32* var_74;
        wp::int32 var_75;
        wp::int32 var_76;
        wp::int32* var_77;
        wp::int32* var_78;
        wp::int32 var_79;
        const wp::int32 var_80 = 1;
        bool var_81;
        wp::int32 var_82;
        wp::float64 var_83;
        wp::int32* var_84;
        wp::int32 var_85;
        wp::int32 var_86;
        wp::int32* var_87;
        wp::int32 var_88;
        wp::int32 var_89;
        wp::float64* var_90;
        wp::float64* var_91;
        wp::float64 var_92;
        wp::float64 var_93;
        wp::float64 var_94;
        wp::vec_t<2,wp::int32>* var_95;
        wp::vec_t<2,wp::int32> var_96;
        wp::vec_t<2,wp::int32> var_97;
        wp::vec_t<2,wp::int32>* var_98;
        wp::vec_t<2,wp::int32> var_99;
        wp::vec_t<2,wp::int32> var_100;
        const wp::int32 var_101 = 0;
        wp::int32 var_102;
        wp::vec_t<3,wp::float64>* var_103;
        wp::vec_t<3,wp::float64> var_104;
        wp::vec_t<3,wp::float64> var_105;
        const wp::int32 var_106 = 1;
        wp::int32 var_107;
        wp::vec_t<3,wp::float64>* var_108;
        wp::vec_t<3,wp::float64> var_109;
        wp::vec_t<3,wp::float64> var_110;
        const wp::int32 var_111 = 0;
        wp::int32 var_112;
        wp::vec_t<3,wp::float64>* var_113;
        wp::vec_t<3,wp::float64> var_114;
        wp::vec_t<3,wp::float64> var_115;
        const wp::int32 var_116 = 1;
        wp::int32 var_117;
        wp::vec_t<3,wp::float64>* var_118;
        wp::vec_t<3,wp::float64> var_119;
        wp::vec_t<3,wp::float64> var_120;
        const wp::int32 var_121 = 0;
        wp::int32 var_122;
        wp::vec_t<3,wp::float64>* var_123;
        wp::vec_t<3,wp::float64> var_124;
        wp::vec_t<3,wp::float64> var_125;
        const wp::int32 var_126 = 1;
        wp::int32 var_127;
        wp::vec_t<3,wp::float64>* var_128;
        wp::vec_t<3,wp::float64> var_129;
        wp::vec_t<3,wp::float64> var_130;
        const wp::int32 var_131 = 0;
        wp::int32 var_132;
        wp::vec_t<3,wp::float64>* var_133;
        wp::vec_t<3,wp::float64> var_134;
        wp::vec_t<3,wp::float64> var_135;
        const wp::int32 var_136 = 1;
        wp::int32 var_137;
        wp::vec_t<3,wp::float64>* var_138;
        wp::vec_t<3,wp::float64> var_139;
        wp::vec_t<3,wp::float64> var_140;
        const wp::int32 var_141 = 0;
        wp::int32 var_142;
        wp::int32* var_143;
        wp::int32* var_144;
        wp::int32 var_145;
        wp::int32 var_146;
        wp::int32* var_147;
        wp::int32* var_148;
        wp::int32 var_149;
        bool var_150;
        wp::int32 var_151;
        wp::int32* var_152;
        wp::int32* var_153;
        wp::int32 var_154;
        const wp::int32 var_155 = 2;
        bool var_156;
        wp::int32 var_157;
        bool var_158;
        wp::float64 var_159;
        wp::float64 var_160;
        //---------
        // forward
        // def init_step_size_collisions(                                                         <L 158>
        // idx = wp.tid()                                                                         <L 177>
        var_0 = builtin_tid1d();
        // if collision_type[idx] == POINT_TRIANGLE_PAIR or collision_type[idx] == TRIANGLE_POINT_PAIR:       <L 178>
        var_1 = wp::address(var_collision_type, var_0);
        var_4 = wp::load(var_1);
        var_3 = (var_4 == var_2);
        var_5 = wp::address(var_collision_type, var_0);
        var_8 = wp::load(var_5);
        var_7 = (var_8 == var_6);
        var_9 = var_3 || var_7;
        if (var_9) {
            // svi = wp.select(collision_type[idx] == POINT_TRIANGLE_PAIR, nodeJ[idx], nodeI[idx])       <L 179>
            var_10 = wp::address(var_collision_type, var_0);
            var_12 = wp::load(var_10);
            var_11 = (var_12 == var_2);
            var_13 = wp::address(var_nodeJ, var_0);
            var_14 = wp::address(var_nodeI, var_0);
            var_16 = wp::load(var_13);
            var_17 = wp::load(var_14);
            var_15 = wp::select(var_11, var_16, var_17);
            // xI = surf_vi[svi]                                                                  <L 180>
            var_18 = wp::address(var_surf_vi, var_15);
            var_20 = wp::load(var_18);
            var_19 = wp::copy(var_20);
            // faceJ = wp.select(collision_type[idx] == POINT_TRIANGLE_PAIR, nodeI[idx], nodeJ[idx])       <L 181>
            var_21 = wp::address(var_collision_type, var_0);
            var_23 = wp::load(var_21);
            var_22 = (var_23 == var_2);
            var_24 = wp::address(var_nodeI, var_0);
            var_25 = wp::address(var_nodeJ, var_0);
            var_27 = wp::load(var_24);
            var_28 = wp::load(var_25);
            var_26 = wp::select(var_22, var_27, var_28);
            // faceVInd = face[faceJ]                                                             <L 182>
            var_29 = wp::address(var_face, var_26);
            var_31 = wp::load(var_29);
            var_30 = wp::copy(var_31);
            // xi = node_xi[svi] + face_xi[faceJ]                                                 <L 183>
            var_32 = wp::address(var_node_xi, var_15);
            var_33 = wp::address(var_face_xi, var_26);
            var_35 = wp::load(var_32);
            var_36 = wp::load(var_33);
            var_34 = wp::add(var_35, var_36);
            // p = x[xI]                                                                          <L 184>
            var_37 = wp::address(var_x, var_19);
            var_39 = wp::load(var_37);
            var_38 = wp::copy(var_39);
            // t0 = x[faceVInd[0]]                                                                <L 185>
            var_41 = wp::extract(var_30, var_40);
            var_42 = wp::address(var_x, var_41);
            var_44 = wp::load(var_42);
            var_43 = wp::copy(var_44);
            // t1 = x[faceVInd[1]]                                                                <L 186>
            var_46 = wp::extract(var_30, var_45);
            var_47 = wp::address(var_x, var_46);
            var_49 = wp::load(var_47);
            var_48 = wp::copy(var_49);
            // t2 = x[faceVInd[2]]                                                                <L 187>
            var_51 = wp::extract(var_30, var_50);
            var_52 = wp::address(var_x, var_51);
            var_54 = wp::load(var_52);
            var_53 = wp::copy(var_54);
            // dp = p_x[xI]                                                                       <L 188>
            var_55 = wp::address(var_p_x, var_19);
            var_57 = wp::load(var_55);
            var_56 = wp::copy(var_57);
            // dt0 = p_x[faceVInd[0]]                                                             <L 189>
            var_59 = wp::extract(var_30, var_58);
            var_60 = wp::address(var_p_x, var_59);
            var_62 = wp::load(var_60);
            var_61 = wp::copy(var_62);
            // dt1 = p_x[faceVInd[1]]                                                             <L 190>
            var_64 = wp::extract(var_30, var_63);
            var_65 = wp::address(var_p_x, var_64);
            var_67 = wp::load(var_65);
            var_66 = wp::copy(var_67);
            // dt2 = p_x[faceVInd[2]]                                                             <L 191>
            var_69 = wp::extract(var_30, var_68);
            var_70 = wp::address(var_p_x, var_69);
            var_72 = wp::load(var_70);
            var_71 = wp::copy(var_72);
            // env_PTEE[idx] = body_env_id[node2body[xI]]                                         <L 192>
            var_73 = wp::address(var_node2body, var_19);
            var_75 = wp::load(var_73);
            var_74 = wp::address(var_body_env_id, var_75);
            var_76 = wp::load(var_74);
            wp::array_store(var_env_PTEE, var_0, var_76);
            // if env_states[env_PTEE[idx]] == ENV_STATE_INVALID:                                 <L 193>
            var_77 = wp::address(var_env_PTEE, var_0);
            var_79 = wp::load(var_77);
            var_78 = wp::address(var_env_states, var_79);
            var_82 = wp::load(var_78);
            var_81 = (var_82 == var_80);
            if (var_81) {
                // return                                                                         <L 194>
                continue;
            }
            // alpha_PTEE[idx] = point_triangle_ccd(p, t0, t1, t2, dp, dt0, dt1, dt2, eta, xi)       <L 195>
            var_83 = point_triangle_ccd_0(var_38, var_43, var_48, var_53, var_56, var_61, var_66, var_71, var_eta, var_34);
            wp::array_store(var_alpha_PTEE, var_0, var_83);
        }
        if (!var_9) {
            // edgeI = nodeI[idx]                                                                 <L 197>
            var_84 = wp::address(var_nodeI, var_0);
            var_86 = wp::load(var_84);
            var_85 = wp::copy(var_86);
            // edgeJ = nodeJ[idx]                                                                 <L 198>
            var_87 = wp::address(var_nodeJ, var_0);
            var_89 = wp::load(var_87);
            var_88 = wp::copy(var_89);
            // xi = edge_xi[edgeI] + edge_xi[edgeI]                                               <L 199>
            var_90 = wp::address(var_edge_xi, var_85);
            var_91 = wp::address(var_edge_xi, var_85);
            var_93 = wp::load(var_90);
            var_94 = wp::load(var_91);
            var_92 = wp::add(var_93, var_94);
            // edgeVIndI = edge[edgeI]                                                            <L 200>
            var_95 = wp::address(var_edge, var_85);
            var_97 = wp::load(var_95);
            var_96 = wp::copy(var_97);
            // edgeVIndJ = edge[edgeJ]                                                            <L 201>
            var_98 = wp::address(var_edge, var_88);
            var_100 = wp::load(var_98);
            var_99 = wp::copy(var_100);
            // ea0 = x[edgeVIndI[0]]                                                              <L 202>
            var_102 = wp::extract(var_96, var_101);
            var_103 = wp::address(var_x, var_102);
            var_105 = wp::load(var_103);
            var_104 = wp::copy(var_105);
            // ea1 = x[edgeVIndI[1]]                                                              <L 203>
            var_107 = wp::extract(var_96, var_106);
            var_108 = wp::address(var_x, var_107);
            var_110 = wp::load(var_108);
            var_109 = wp::copy(var_110);
            // eb0 = x[edgeVIndJ[0]]                                                              <L 204>
            var_112 = wp::extract(var_99, var_111);
            var_113 = wp::address(var_x, var_112);
            var_115 = wp::load(var_113);
            var_114 = wp::copy(var_115);
            // eb1 = x[edgeVIndJ[1]]                                                              <L 205>
            var_117 = wp::extract(var_99, var_116);
            var_118 = wp::address(var_x, var_117);
            var_120 = wp::load(var_118);
            var_119 = wp::copy(var_120);
            // dea0 = p_x[edgeVIndI[0]]                                                           <L 206>
            var_122 = wp::extract(var_96, var_121);
            var_123 = wp::address(var_p_x, var_122);
            var_125 = wp::load(var_123);
            var_124 = wp::copy(var_125);
            // dea1 = p_x[edgeVIndI[1]]                                                           <L 207>
            var_127 = wp::extract(var_96, var_126);
            var_128 = wp::address(var_p_x, var_127);
            var_130 = wp::load(var_128);
            var_129 = wp::copy(var_130);
            // deb0 = p_x[edgeVIndJ[0]]                                                           <L 208>
            var_132 = wp::extract(var_99, var_131);
            var_133 = wp::address(var_p_x, var_132);
            var_135 = wp::load(var_133);
            var_134 = wp::copy(var_135);
            // deb1 = p_x[edgeVIndJ[1]]                                                           <L 209>
            var_137 = wp::extract(var_99, var_136);
            var_138 = wp::address(var_p_x, var_137);
            var_140 = wp::load(var_138);
            var_139 = wp::copy(var_140);
            // env_PTEE[idx] = body_env_id[node2body[edgeVIndI[0]]]                               <L 210>
            var_142 = wp::extract(var_96, var_141);
            var_143 = wp::address(var_node2body, var_142);
            var_145 = wp::load(var_143);
            var_144 = wp::address(var_body_env_id, var_145);
            var_146 = wp::load(var_144);
            wp::array_store(var_env_PTEE, var_0, var_146);
            // if env_states[env_PTEE[idx]] == ENV_STATE_INVALID or env_states[env_PTEE[idx]] == ENV_STATE_NEWTON_SOLVED:       <L 211>
            var_147 = wp::address(var_env_PTEE, var_0);
            var_149 = wp::load(var_147);
            var_148 = wp::address(var_env_states, var_149);
            var_151 = wp::load(var_148);
            var_150 = (var_151 == var_80);
            var_152 = wp::address(var_env_PTEE, var_0);
            var_154 = wp::load(var_152);
            var_153 = wp::address(var_env_states, var_154);
            var_157 = wp::load(var_153);
            var_156 = (var_157 == var_155);
            var_158 = var_150 || var_156;
            if (var_158) {
                // return                                                                         <L 212>
                continue;
            }
            // alpha_PTEE[idx] = edge_edge_ccd(ea0, ea1, eb0, eb1, dea0, dea1, deb0, deb1, eta, xi)       <L 213>
            var_159 = edge_edge_ccd_0(var_104, var_109, var_114, var_119, var_124, var_129, var_134, var_139, var_eta, var_92);
            wp::array_store(var_alpha_PTEE, var_0, var_159);
        }
        var_160 = wp::where(var_9, var_34, var_92);
    }
}



extern "C" __global__ void init_step_size_collisions_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::float64> var_alpha_PTEE,
    wp::array_t<wp::int32> var_env_PTEE,
    wp::array_t<wp::int32> var_node2body,
    wp::array_t<wp::int32> var_body_env_id,
    wp::array_t<wp::int32> var_env_states,
    wp::array_t<wp::int32> var_nodeI,
    wp::array_t<wp::int32> var_nodeJ,
    wp::array_t<wp::int32> var_collision_type,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::int32> var_surf_vi,
    wp::array_t<wp::vec_t<3,wp::float64>> var_p_x,
    wp::array_t<wp::float64> var_node_xi,
    wp::array_t<wp::float64> var_edge_xi,
    wp::array_t<wp::float64> var_face_xi,
    wp::array_t<wp::vec_t<2,wp::int32>> var_edge,
    wp::array_t<wp::vec_t<3,wp::int32>> var_face,
    wp::float64 var_eta,
    wp::array_t<wp::float64> adj_alpha_PTEE,
    wp::array_t<wp::int32> adj_env_PTEE,
    wp::array_t<wp::int32> adj_node2body,
    wp::array_t<wp::int32> adj_body_env_id,
    wp::array_t<wp::int32> adj_env_states,
    wp::array_t<wp::int32> adj_nodeI,
    wp::array_t<wp::int32> adj_nodeJ,
    wp::array_t<wp::int32> adj_collision_type,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_x,
    wp::array_t<wp::int32> adj_surf_vi,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_p_x,
    wp::array_t<wp::float64> adj_node_xi,
    wp::array_t<wp::float64> adj_edge_xi,
    wp::array_t<wp::float64> adj_face_xi,
    wp::array_t<wp::vec_t<2,wp::int32>> adj_edge,
    wp::array_t<wp::vec_t<3,wp::int32>> adj_face,
    wp::float64 adj_eta)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        const wp::int32 var_2 = 1;
        bool var_3;
        wp::int32 var_4;
        wp::int32* var_5;
        const wp::int32 var_6 = 0;
        bool var_7;
        wp::int32 var_8;
        bool var_9;
        wp::int32* var_10;
        bool var_11;
        wp::int32 var_12;
        wp::int32* var_13;
        wp::int32* var_14;
        wp::int32 var_15;
        wp::int32 var_16;
        wp::int32 var_17;
        wp::int32* var_18;
        wp::int32 var_19;
        wp::int32 var_20;
        wp::int32* var_21;
        bool var_22;
        wp::int32 var_23;
        wp::int32* var_24;
        wp::int32* var_25;
        wp::int32 var_26;
        wp::int32 var_27;
        wp::int32 var_28;
        wp::vec_t<3,wp::int32>* var_29;
        wp::vec_t<3,wp::int32> var_30;
        wp::vec_t<3,wp::int32> var_31;
        wp::float64* var_32;
        wp::float64* var_33;
        wp::float64 var_34;
        wp::float64 var_35;
        wp::float64 var_36;
        wp::vec_t<3,wp::float64>* var_37;
        wp::vec_t<3,wp::float64> var_38;
        wp::vec_t<3,wp::float64> var_39;
        const wp::int32 var_40 = 0;
        wp::int32 var_41;
        wp::vec_t<3,wp::float64>* var_42;
        wp::vec_t<3,wp::float64> var_43;
        wp::vec_t<3,wp::float64> var_44;
        const wp::int32 var_45 = 1;
        wp::int32 var_46;
        wp::vec_t<3,wp::float64>* var_47;
        wp::vec_t<3,wp::float64> var_48;
        wp::vec_t<3,wp::float64> var_49;
        const wp::int32 var_50 = 2;
        wp::int32 var_51;
        wp::vec_t<3,wp::float64>* var_52;
        wp::vec_t<3,wp::float64> var_53;
        wp::vec_t<3,wp::float64> var_54;
        wp::vec_t<3,wp::float64>* var_55;
        wp::vec_t<3,wp::float64> var_56;
        wp::vec_t<3,wp::float64> var_57;
        const wp::int32 var_58 = 0;
        wp::int32 var_59;
        wp::vec_t<3,wp::float64>* var_60;
        wp::vec_t<3,wp::float64> var_61;
        wp::vec_t<3,wp::float64> var_62;
        const wp::int32 var_63 = 1;
        wp::int32 var_64;
        wp::vec_t<3,wp::float64>* var_65;
        wp::vec_t<3,wp::float64> var_66;
        wp::vec_t<3,wp::float64> var_67;
        const wp::int32 var_68 = 2;
        wp::int32 var_69;
        wp::vec_t<3,wp::float64>* var_70;
        wp::vec_t<3,wp::float64> var_71;
        wp::vec_t<3,wp::float64> var_72;
        wp::int32* var_73;
        wp::int32* var_74;
        wp::int32 var_75;
        wp::int32 var_76;
        wp::int32* var_77;
        wp::int32* var_78;
        wp::int32 var_79;
        const wp::int32 var_80 = 1;
        bool var_81;
        wp::int32 var_82;
        wp::float64 var_83;
        wp::int32* var_84;
        wp::int32 var_85;
        wp::int32 var_86;
        wp::int32* var_87;
        wp::int32 var_88;
        wp::int32 var_89;
        wp::float64* var_90;
        wp::float64* var_91;
        wp::float64 var_92;
        wp::float64 var_93;
        wp::float64 var_94;
        wp::vec_t<2,wp::int32>* var_95;
        wp::vec_t<2,wp::int32> var_96;
        wp::vec_t<2,wp::int32> var_97;
        wp::vec_t<2,wp::int32>* var_98;
        wp::vec_t<2,wp::int32> var_99;
        wp::vec_t<2,wp::int32> var_100;
        const wp::int32 var_101 = 0;
        wp::int32 var_102;
        wp::vec_t<3,wp::float64>* var_103;
        wp::vec_t<3,wp::float64> var_104;
        wp::vec_t<3,wp::float64> var_105;
        const wp::int32 var_106 = 1;
        wp::int32 var_107;
        wp::vec_t<3,wp::float64>* var_108;
        wp::vec_t<3,wp::float64> var_109;
        wp::vec_t<3,wp::float64> var_110;
        const wp::int32 var_111 = 0;
        wp::int32 var_112;
        wp::vec_t<3,wp::float64>* var_113;
        wp::vec_t<3,wp::float64> var_114;
        wp::vec_t<3,wp::float64> var_115;
        const wp::int32 var_116 = 1;
        wp::int32 var_117;
        wp::vec_t<3,wp::float64>* var_118;
        wp::vec_t<3,wp::float64> var_119;
        wp::vec_t<3,wp::float64> var_120;
        const wp::int32 var_121 = 0;
        wp::int32 var_122;
        wp::vec_t<3,wp::float64>* var_123;
        wp::vec_t<3,wp::float64> var_124;
        wp::vec_t<3,wp::float64> var_125;
        const wp::int32 var_126 = 1;
        wp::int32 var_127;
        wp::vec_t<3,wp::float64>* var_128;
        wp::vec_t<3,wp::float64> var_129;
        wp::vec_t<3,wp::float64> var_130;
        const wp::int32 var_131 = 0;
        wp::int32 var_132;
        wp::vec_t<3,wp::float64>* var_133;
        wp::vec_t<3,wp::float64> var_134;
        wp::vec_t<3,wp::float64> var_135;
        const wp::int32 var_136 = 1;
        wp::int32 var_137;
        wp::vec_t<3,wp::float64>* var_138;
        wp::vec_t<3,wp::float64> var_139;
        wp::vec_t<3,wp::float64> var_140;
        const wp::int32 var_141 = 0;
        wp::int32 var_142;
        wp::int32* var_143;
        wp::int32* var_144;
        wp::int32 var_145;
        wp::int32 var_146;
        wp::int32* var_147;
        wp::int32* var_148;
        wp::int32 var_149;
        bool var_150;
        wp::int32 var_151;
        wp::int32* var_152;
        wp::int32* var_153;
        wp::int32 var_154;
        const wp::int32 var_155 = 2;
        bool var_156;
        wp::int32 var_157;
        bool var_158;
        wp::float64 var_159;
        wp::float64 var_160;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        bool adj_3 = {};
        wp::int32 adj_4 = {};
        wp::int32 adj_5 = {};
        wp::int32 adj_6 = {};
        bool adj_7 = {};
        wp::int32 adj_8 = {};
        bool adj_9 = {};
        wp::int32 adj_10 = {};
        bool adj_11 = {};
        wp::int32 adj_12 = {};
        wp::int32 adj_13 = {};
        wp::int32 adj_14 = {};
        wp::int32 adj_15 = {};
        wp::int32 adj_16 = {};
        wp::int32 adj_17 = {};
        wp::int32 adj_18 = {};
        wp::int32 adj_19 = {};
        wp::int32 adj_20 = {};
        wp::int32 adj_21 = {};
        bool adj_22 = {};
        wp::int32 adj_23 = {};
        wp::int32 adj_24 = {};
        wp::int32 adj_25 = {};
        wp::int32 adj_26 = {};
        wp::int32 adj_27 = {};
        wp::int32 adj_28 = {};
        wp::vec_t<3,wp::int32> adj_29 = {};
        wp::vec_t<3,wp::int32> adj_30 = {};
        wp::vec_t<3,wp::int32> adj_31 = {};
        wp::float64 adj_32 = {};
        wp::float64 adj_33 = {};
        wp::float64 adj_34 = {};
        wp::float64 adj_35 = {};
        wp::float64 adj_36 = {};
        wp::vec_t<3,wp::float64> adj_37 = {};
        wp::vec_t<3,wp::float64> adj_38 = {};
        wp::vec_t<3,wp::float64> adj_39 = {};
        wp::int32 adj_40 = {};
        wp::int32 adj_41 = {};
        wp::vec_t<3,wp::float64> adj_42 = {};
        wp::vec_t<3,wp::float64> adj_43 = {};
        wp::vec_t<3,wp::float64> adj_44 = {};
        wp::int32 adj_45 = {};
        wp::int32 adj_46 = {};
        wp::vec_t<3,wp::float64> adj_47 = {};
        wp::vec_t<3,wp::float64> adj_48 = {};
        wp::vec_t<3,wp::float64> adj_49 = {};
        wp::int32 adj_50 = {};
        wp::int32 adj_51 = {};
        wp::vec_t<3,wp::float64> adj_52 = {};
        wp::vec_t<3,wp::float64> adj_53 = {};
        wp::vec_t<3,wp::float64> adj_54 = {};
        wp::vec_t<3,wp::float64> adj_55 = {};
        wp::vec_t<3,wp::float64> adj_56 = {};
        wp::vec_t<3,wp::float64> adj_57 = {};
        wp::int32 adj_58 = {};
        wp::int32 adj_59 = {};
        wp::vec_t<3,wp::float64> adj_60 = {};
        wp::vec_t<3,wp::float64> adj_61 = {};
        wp::vec_t<3,wp::float64> adj_62 = {};
        wp::int32 adj_63 = {};
        wp::int32 adj_64 = {};
        wp::vec_t<3,wp::float64> adj_65 = {};
        wp::vec_t<3,wp::float64> adj_66 = {};
        wp::vec_t<3,wp::float64> adj_67 = {};
        wp::int32 adj_68 = {};
        wp::int32 adj_69 = {};
        wp::vec_t<3,wp::float64> adj_70 = {};
        wp::vec_t<3,wp::float64> adj_71 = {};
        wp::vec_t<3,wp::float64> adj_72 = {};
        wp::int32 adj_73 = {};
        wp::int32 adj_74 = {};
        wp::int32 adj_75 = {};
        wp::int32 adj_76 = {};
        wp::int32 adj_77 = {};
        wp::int32 adj_78 = {};
        wp::int32 adj_79 = {};
        wp::int32 adj_80 = {};
        bool adj_81 = {};
        wp::int32 adj_82 = {};
        wp::float64 adj_83 = {};
        wp::int32 adj_84 = {};
        wp::int32 adj_85 = {};
        wp::int32 adj_86 = {};
        wp::int32 adj_87 = {};
        wp::int32 adj_88 = {};
        wp::int32 adj_89 = {};
        wp::float64 adj_90 = {};
        wp::float64 adj_91 = {};
        wp::float64 adj_92 = {};
        wp::float64 adj_93 = {};
        wp::float64 adj_94 = {};
        wp::vec_t<2,wp::int32> adj_95 = {};
        wp::vec_t<2,wp::int32> adj_96 = {};
        wp::vec_t<2,wp::int32> adj_97 = {};
        wp::vec_t<2,wp::int32> adj_98 = {};
        wp::vec_t<2,wp::int32> adj_99 = {};
        wp::vec_t<2,wp::int32> adj_100 = {};
        wp::int32 adj_101 = {};
        wp::int32 adj_102 = {};
        wp::vec_t<3,wp::float64> adj_103 = {};
        wp::vec_t<3,wp::float64> adj_104 = {};
        wp::vec_t<3,wp::float64> adj_105 = {};
        wp::int32 adj_106 = {};
        wp::int32 adj_107 = {};
        wp::vec_t<3,wp::float64> adj_108 = {};
        wp::vec_t<3,wp::float64> adj_109 = {};
        wp::vec_t<3,wp::float64> adj_110 = {};
        wp::int32 adj_111 = {};
        wp::int32 adj_112 = {};
        wp::vec_t<3,wp::float64> adj_113 = {};
        wp::vec_t<3,wp::float64> adj_114 = {};
        wp::vec_t<3,wp::float64> adj_115 = {};
        wp::int32 adj_116 = {};
        wp::int32 adj_117 = {};
        wp::vec_t<3,wp::float64> adj_118 = {};
        wp::vec_t<3,wp::float64> adj_119 = {};
        wp::vec_t<3,wp::float64> adj_120 = {};
        wp::int32 adj_121 = {};
        wp::int32 adj_122 = {};
        wp::vec_t<3,wp::float64> adj_123 = {};
        wp::vec_t<3,wp::float64> adj_124 = {};
        wp::vec_t<3,wp::float64> adj_125 = {};
        wp::int32 adj_126 = {};
        wp::int32 adj_127 = {};
        wp::vec_t<3,wp::float64> adj_128 = {};
        wp::vec_t<3,wp::float64> adj_129 = {};
        wp::vec_t<3,wp::float64> adj_130 = {};
        wp::int32 adj_131 = {};
        wp::int32 adj_132 = {};
        wp::vec_t<3,wp::float64> adj_133 = {};
        wp::vec_t<3,wp::float64> adj_134 = {};
        wp::vec_t<3,wp::float64> adj_135 = {};
        wp::int32 adj_136 = {};
        wp::int32 adj_137 = {};
        wp::vec_t<3,wp::float64> adj_138 = {};
        wp::vec_t<3,wp::float64> adj_139 = {};
        wp::vec_t<3,wp::float64> adj_140 = {};
        wp::int32 adj_141 = {};
        wp::int32 adj_142 = {};
        wp::int32 adj_143 = {};
        wp::int32 adj_144 = {};
        wp::int32 adj_145 = {};
        wp::int32 adj_146 = {};
        wp::int32 adj_147 = {};
        wp::int32 adj_148 = {};
        wp::int32 adj_149 = {};
        bool adj_150 = {};
        wp::int32 adj_151 = {};
        wp::int32 adj_152 = {};
        wp::int32 adj_153 = {};
        wp::int32 adj_154 = {};
        wp::int32 adj_155 = {};
        bool adj_156 = {};
        wp::int32 adj_157 = {};
        bool adj_158 = {};
        wp::float64 adj_159 = {};
        wp::float64 adj_160 = {};
        //---------
        // forward
        // def init_step_size_collisions(                                                         <L 158>
        // idx = wp.tid()                                                                         <L 177>
        var_0 = builtin_tid1d();
        // if collision_type[idx] == POINT_TRIANGLE_PAIR or collision_type[idx] == TRIANGLE_POINT_PAIR:       <L 178>
        var_1 = wp::address(var_collision_type, var_0);
        var_4 = wp::load(var_1);
        var_3 = (var_4 == var_2);
        var_5 = wp::address(var_collision_type, var_0);
        var_8 = wp::load(var_5);
        var_7 = (var_8 == var_6);
        var_9 = var_3 || var_7;
        if (var_9) {
            // svi = wp.select(collision_type[idx] == POINT_TRIANGLE_PAIR, nodeJ[idx], nodeI[idx])       <L 179>
            var_10 = wp::address(var_collision_type, var_0);
            var_12 = wp::load(var_10);
            var_11 = (var_12 == var_2);
            var_13 = wp::address(var_nodeJ, var_0);
            var_14 = wp::address(var_nodeI, var_0);
            var_16 = wp::load(var_13);
            var_17 = wp::load(var_14);
            var_15 = wp::select(var_11, var_16, var_17);
            // xI = surf_vi[svi]                                                                  <L 180>
            var_18 = wp::address(var_surf_vi, var_15);
            var_20 = wp::load(var_18);
            var_19 = wp::copy(var_20);
            // faceJ = wp.select(collision_type[idx] == POINT_TRIANGLE_PAIR, nodeI[idx], nodeJ[idx])       <L 181>
            var_21 = wp::address(var_collision_type, var_0);
            var_23 = wp::load(var_21);
            var_22 = (var_23 == var_2);
            var_24 = wp::address(var_nodeI, var_0);
            var_25 = wp::address(var_nodeJ, var_0);
            var_27 = wp::load(var_24);
            var_28 = wp::load(var_25);
            var_26 = wp::select(var_22, var_27, var_28);
            // faceVInd = face[faceJ]                                                             <L 182>
            var_29 = wp::address(var_face, var_26);
            var_31 = wp::load(var_29);
            var_30 = wp::copy(var_31);
            // xi = node_xi[svi] + face_xi[faceJ]                                                 <L 183>
            var_32 = wp::address(var_node_xi, var_15);
            var_33 = wp::address(var_face_xi, var_26);
            var_35 = wp::load(var_32);
            var_36 = wp::load(var_33);
            var_34 = wp::add(var_35, var_36);
            // p = x[xI]                                                                          <L 184>
            var_37 = wp::address(var_x, var_19);
            var_39 = wp::load(var_37);
            var_38 = wp::copy(var_39);
            // t0 = x[faceVInd[0]]                                                                <L 185>
            var_41 = wp::extract(var_30, var_40);
            var_42 = wp::address(var_x, var_41);
            var_44 = wp::load(var_42);
            var_43 = wp::copy(var_44);
            // t1 = x[faceVInd[1]]                                                                <L 186>
            var_46 = wp::extract(var_30, var_45);
            var_47 = wp::address(var_x, var_46);
            var_49 = wp::load(var_47);
            var_48 = wp::copy(var_49);
            // t2 = x[faceVInd[2]]                                                                <L 187>
            var_51 = wp::extract(var_30, var_50);
            var_52 = wp::address(var_x, var_51);
            var_54 = wp::load(var_52);
            var_53 = wp::copy(var_54);
            // dp = p_x[xI]                                                                       <L 188>
            var_55 = wp::address(var_p_x, var_19);
            var_57 = wp::load(var_55);
            var_56 = wp::copy(var_57);
            // dt0 = p_x[faceVInd[0]]                                                             <L 189>
            var_59 = wp::extract(var_30, var_58);
            var_60 = wp::address(var_p_x, var_59);
            var_62 = wp::load(var_60);
            var_61 = wp::copy(var_62);
            // dt1 = p_x[faceVInd[1]]                                                             <L 190>
            var_64 = wp::extract(var_30, var_63);
            var_65 = wp::address(var_p_x, var_64);
            var_67 = wp::load(var_65);
            var_66 = wp::copy(var_67);
            // dt2 = p_x[faceVInd[2]]                                                             <L 191>
            var_69 = wp::extract(var_30, var_68);
            var_70 = wp::address(var_p_x, var_69);
            var_72 = wp::load(var_70);
            var_71 = wp::copy(var_72);
            // env_PTEE[idx] = body_env_id[node2body[xI]]                                         <L 192>
            var_73 = wp::address(var_node2body, var_19);
            var_75 = wp::load(var_73);
            var_74 = wp::address(var_body_env_id, var_75);
            var_76 = wp::load(var_74);
            // wp::array_store(var_env_PTEE, var_0, var_76);
            // if env_states[env_PTEE[idx]] == ENV_STATE_INVALID:                                 <L 193>
            var_77 = wp::address(var_env_PTEE, var_0);
            var_79 = wp::load(var_77);
            var_78 = wp::address(var_env_states, var_79);
            var_82 = wp::load(var_78);
            var_81 = (var_82 == var_80);
            if (var_81) {
                // return                                                                         <L 194>
                goto label0;
            }
            // alpha_PTEE[idx] = point_triangle_ccd(p, t0, t1, t2, dp, dt0, dt1, dt2, eta, xi)       <L 195>
            var_83 = point_triangle_ccd_0(var_38, var_43, var_48, var_53, var_56, var_61, var_66, var_71, var_eta, var_34);
            // wp::array_store(var_alpha_PTEE, var_0, var_83);
        }
        if (!var_9) {
            // edgeI = nodeI[idx]                                                                 <L 197>
            var_84 = wp::address(var_nodeI, var_0);
            var_86 = wp::load(var_84);
            var_85 = wp::copy(var_86);
            // edgeJ = nodeJ[idx]                                                                 <L 198>
            var_87 = wp::address(var_nodeJ, var_0);
            var_89 = wp::load(var_87);
            var_88 = wp::copy(var_89);
            // xi = edge_xi[edgeI] + edge_xi[edgeI]                                               <L 199>
            var_90 = wp::address(var_edge_xi, var_85);
            var_91 = wp::address(var_edge_xi, var_85);
            var_93 = wp::load(var_90);
            var_94 = wp::load(var_91);
            var_92 = wp::add(var_93, var_94);
            // edgeVIndI = edge[edgeI]                                                            <L 200>
            var_95 = wp::address(var_edge, var_85);
            var_97 = wp::load(var_95);
            var_96 = wp::copy(var_97);
            // edgeVIndJ = edge[edgeJ]                                                            <L 201>
            var_98 = wp::address(var_edge, var_88);
            var_100 = wp::load(var_98);
            var_99 = wp::copy(var_100);
            // ea0 = x[edgeVIndI[0]]                                                              <L 202>
            var_102 = wp::extract(var_96, var_101);
            var_103 = wp::address(var_x, var_102);
            var_105 = wp::load(var_103);
            var_104 = wp::copy(var_105);
            // ea1 = x[edgeVIndI[1]]                                                              <L 203>
            var_107 = wp::extract(var_96, var_106);
            var_108 = wp::address(var_x, var_107);
            var_110 = wp::load(var_108);
            var_109 = wp::copy(var_110);
            // eb0 = x[edgeVIndJ[0]]                                                              <L 204>
            var_112 = wp::extract(var_99, var_111);
            var_113 = wp::address(var_x, var_112);
            var_115 = wp::load(var_113);
            var_114 = wp::copy(var_115);
            // eb1 = x[edgeVIndJ[1]]                                                              <L 205>
            var_117 = wp::extract(var_99, var_116);
            var_118 = wp::address(var_x, var_117);
            var_120 = wp::load(var_118);
            var_119 = wp::copy(var_120);
            // dea0 = p_x[edgeVIndI[0]]                                                           <L 206>
            var_122 = wp::extract(var_96, var_121);
            var_123 = wp::address(var_p_x, var_122);
            var_125 = wp::load(var_123);
            var_124 = wp::copy(var_125);
            // dea1 = p_x[edgeVIndI[1]]                                                           <L 207>
            var_127 = wp::extract(var_96, var_126);
            var_128 = wp::address(var_p_x, var_127);
            var_130 = wp::load(var_128);
            var_129 = wp::copy(var_130);
            // deb0 = p_x[edgeVIndJ[0]]                                                           <L 208>
            var_132 = wp::extract(var_99, var_131);
            var_133 = wp::address(var_p_x, var_132);
            var_135 = wp::load(var_133);
            var_134 = wp::copy(var_135);
            // deb1 = p_x[edgeVIndJ[1]]                                                           <L 209>
            var_137 = wp::extract(var_99, var_136);
            var_138 = wp::address(var_p_x, var_137);
            var_140 = wp::load(var_138);
            var_139 = wp::copy(var_140);
            // env_PTEE[idx] = body_env_id[node2body[edgeVIndI[0]]]                               <L 210>
            var_142 = wp::extract(var_96, var_141);
            var_143 = wp::address(var_node2body, var_142);
            var_145 = wp::load(var_143);
            var_144 = wp::address(var_body_env_id, var_145);
            var_146 = wp::load(var_144);
            // wp::array_store(var_env_PTEE, var_0, var_146);
            // if env_states[env_PTEE[idx]] == ENV_STATE_INVALID or env_states[env_PTEE[idx]] == ENV_STATE_NEWTON_SOLVED:       <L 211>
            var_147 = wp::address(var_env_PTEE, var_0);
            var_149 = wp::load(var_147);
            var_148 = wp::address(var_env_states, var_149);
            var_151 = wp::load(var_148);
            var_150 = (var_151 == var_80);
            var_152 = wp::address(var_env_PTEE, var_0);
            var_154 = wp::load(var_152);
            var_153 = wp::address(var_env_states, var_154);
            var_157 = wp::load(var_153);
            var_156 = (var_157 == var_155);
            var_158 = var_150 || var_156;
            if (var_158) {
                // return                                                                         <L 212>
                goto label1;
            }
            // alpha_PTEE[idx] = edge_edge_ccd(ea0, ea1, eb0, eb1, dea0, dea1, deb0, deb1, eta, xi)       <L 213>
            var_159 = edge_edge_ccd_0(var_104, var_109, var_114, var_119, var_124, var_129, var_134, var_139, var_eta, var_92);
            // wp::array_store(var_alpha_PTEE, var_0, var_159);
        }
        var_160 = wp::where(var_9, var_34, var_92);
        //---------
        // reverse
        wp::adj_where(var_9, var_34, var_92, adj_9, adj_34, adj_92, adj_160);
        if (!var_9) {
            wp::adj_array_store(var_alpha_PTEE, var_0, var_159, adj_alpha_PTEE, adj_0, adj_159);
            adj_edge_edge_ccd_0(var_104, var_109, var_114, var_119, var_124, var_129, var_134, var_139, var_eta, var_92, adj_104, adj_109, adj_114, adj_119, adj_124, adj_129, adj_134, adj_139, adj_eta, adj_92, adj_159);
            // adj: alpha_PTEE[idx] = edge_edge_ccd(ea0, ea1, eb0, eb1, dea0, dea1, deb0, deb1, eta, xi)  <L 213>
            if (var_158) {
                label1:;
                // adj: return                                                                    <L 212>
            }
            wp::adj_load(var_153, adj_153, adj_157);
            wp::adj_address(var_env_states, var_154, adj_env_states, adj_152, adj_153);
            wp::adj_load(var_152, adj_152, adj_154);
            wp::adj_address(var_env_PTEE, var_0, adj_env_PTEE, adj_0, adj_152);
            wp::adj_load(var_148, adj_148, adj_151);
            wp::adj_address(var_env_states, var_149, adj_env_states, adj_147, adj_148);
            wp::adj_load(var_147, adj_147, adj_149);
            wp::adj_address(var_env_PTEE, var_0, adj_env_PTEE, adj_0, adj_147);
            // adj: if env_states[env_PTEE[idx]] == ENV_STATE_INVALID or env_states[env_PTEE[idx]] == ENV_STATE_NEWTON_SOLVED:  <L 211>
            wp::adj_array_store(var_env_PTEE, var_0, var_146, adj_env_PTEE, adj_0, adj_144);
            wp::adj_load(var_144, adj_144, adj_146);
            wp::adj_address(var_body_env_id, var_145, adj_body_env_id, adj_143, adj_144);
            wp::adj_load(var_143, adj_143, adj_145);
            wp::adj_address(var_node2body, var_142, adj_node2body, adj_142, adj_143);
            wp::adj_extract(var_96, var_141, adj_96, adj_141, adj_142);
            // adj: env_PTEE[idx] = body_env_id[node2body[edgeVIndI[0]]]                          <L 210>
            wp::adj_copy(var_140, adj_138, adj_139);
            wp::adj_load(var_138, adj_138, adj_140);
            wp::adj_address(var_p_x, var_137, adj_p_x, adj_137, adj_138);
            wp::adj_extract(var_99, var_136, adj_99, adj_136, adj_137);
            // adj: deb1 = p_x[edgeVIndJ[1]]                                                      <L 209>
            wp::adj_copy(var_135, adj_133, adj_134);
            wp::adj_load(var_133, adj_133, adj_135);
            wp::adj_address(var_p_x, var_132, adj_p_x, adj_132, adj_133);
            wp::adj_extract(var_99, var_131, adj_99, adj_131, adj_132);
            // adj: deb0 = p_x[edgeVIndJ[0]]                                                      <L 208>
            wp::adj_copy(var_130, adj_128, adj_129);
            wp::adj_load(var_128, adj_128, adj_130);
            wp::adj_address(var_p_x, var_127, adj_p_x, adj_127, adj_128);
            wp::adj_extract(var_96, var_126, adj_96, adj_126, adj_127);
            // adj: dea1 = p_x[edgeVIndI[1]]                                                      <L 207>
            wp::adj_copy(var_125, adj_123, adj_124);
            wp::adj_load(var_123, adj_123, adj_125);
            wp::adj_address(var_p_x, var_122, adj_p_x, adj_122, adj_123);
            wp::adj_extract(var_96, var_121, adj_96, adj_121, adj_122);
            // adj: dea0 = p_x[edgeVIndI[0]]                                                      <L 206>
            wp::adj_copy(var_120, adj_118, adj_119);
            wp::adj_load(var_118, adj_118, adj_120);
            wp::adj_address(var_x, var_117, adj_x, adj_117, adj_118);
            wp::adj_extract(var_99, var_116, adj_99, adj_116, adj_117);
            // adj: eb1 = x[edgeVIndJ[1]]                                                         <L 205>
            wp::adj_copy(var_115, adj_113, adj_114);
            wp::adj_load(var_113, adj_113, adj_115);
            wp::adj_address(var_x, var_112, adj_x, adj_112, adj_113);
            wp::adj_extract(var_99, var_111, adj_99, adj_111, adj_112);
            // adj: eb0 = x[edgeVIndJ[0]]                                                         <L 204>
            wp::adj_copy(var_110, adj_108, adj_109);
            wp::adj_load(var_108, adj_108, adj_110);
            wp::adj_address(var_x, var_107, adj_x, adj_107, adj_108);
            wp::adj_extract(var_96, var_106, adj_96, adj_106, adj_107);
            // adj: ea1 = x[edgeVIndI[1]]                                                         <L 203>
            wp::adj_copy(var_105, adj_103, adj_104);
            wp::adj_load(var_103, adj_103, adj_105);
            wp::adj_address(var_x, var_102, adj_x, adj_102, adj_103);
            wp::adj_extract(var_96, var_101, adj_96, adj_101, adj_102);
            // adj: ea0 = x[edgeVIndI[0]]                                                         <L 202>
            wp::adj_copy(var_100, adj_98, adj_99);
            wp::adj_load(var_98, adj_98, adj_100);
            wp::adj_address(var_edge, var_88, adj_edge, adj_88, adj_98);
            // adj: edgeVIndJ = edge[edgeJ]                                                       <L 201>
            wp::adj_copy(var_97, adj_95, adj_96);
            wp::adj_load(var_95, adj_95, adj_97);
            wp::adj_address(var_edge, var_85, adj_edge, adj_85, adj_95);
            // adj: edgeVIndI = edge[edgeI]                                                       <L 200>
            wp::adj_add(var_93, var_94, adj_90, adj_91, adj_92);
            wp::adj_load(var_91, adj_91, adj_94);
            wp::adj_load(var_90, adj_90, adj_93);
            wp::adj_address(var_edge_xi, var_85, adj_edge_xi, adj_85, adj_91);
            wp::adj_address(var_edge_xi, var_85, adj_edge_xi, adj_85, adj_90);
            // adj: xi = edge_xi[edgeI] + edge_xi[edgeI]                                          <L 199>
            wp::adj_copy(var_89, adj_87, adj_88);
            wp::adj_load(var_87, adj_87, adj_89);
            wp::adj_address(var_nodeJ, var_0, adj_nodeJ, adj_0, adj_87);
            // adj: edgeJ = nodeJ[idx]                                                            <L 198>
            wp::adj_copy(var_86, adj_84, adj_85);
            wp::adj_load(var_84, adj_84, adj_86);
            wp::adj_address(var_nodeI, var_0, adj_nodeI, adj_0, adj_84);
            // adj: edgeI = nodeI[idx]                                                            <L 197>
        }
        if (var_9) {
            wp::adj_array_store(var_alpha_PTEE, var_0, var_83, adj_alpha_PTEE, adj_0, adj_83);
            adj_point_triangle_ccd_0(var_38, var_43, var_48, var_53, var_56, var_61, var_66, var_71, var_eta, var_34, adj_38, adj_43, adj_48, adj_53, adj_56, adj_61, adj_66, adj_71, adj_eta, adj_34, adj_83);
            // adj: alpha_PTEE[idx] = point_triangle_ccd(p, t0, t1, t2, dp, dt0, dt1, dt2, eta, xi)  <L 195>
            if (var_81) {
                label0:;
                // adj: return                                                                    <L 194>
            }
            wp::adj_load(var_78, adj_78, adj_82);
            wp::adj_address(var_env_states, var_79, adj_env_states, adj_77, adj_78);
            wp::adj_load(var_77, adj_77, adj_79);
            wp::adj_address(var_env_PTEE, var_0, adj_env_PTEE, adj_0, adj_77);
            // adj: if env_states[env_PTEE[idx]] == ENV_STATE_INVALID:                            <L 193>
            wp::adj_array_store(var_env_PTEE, var_0, var_76, adj_env_PTEE, adj_0, adj_74);
            wp::adj_load(var_74, adj_74, adj_76);
            wp::adj_address(var_body_env_id, var_75, adj_body_env_id, adj_73, adj_74);
            wp::adj_load(var_73, adj_73, adj_75);
            wp::adj_address(var_node2body, var_19, adj_node2body, adj_19, adj_73);
            // adj: env_PTEE[idx] = body_env_id[node2body[xI]]                                    <L 192>
            wp::adj_copy(var_72, adj_70, adj_71);
            wp::adj_load(var_70, adj_70, adj_72);
            wp::adj_address(var_p_x, var_69, adj_p_x, adj_69, adj_70);
            wp::adj_extract(var_30, var_68, adj_30, adj_68, adj_69);
            // adj: dt2 = p_x[faceVInd[2]]                                                        <L 191>
            wp::adj_copy(var_67, adj_65, adj_66);
            wp::adj_load(var_65, adj_65, adj_67);
            wp::adj_address(var_p_x, var_64, adj_p_x, adj_64, adj_65);
            wp::adj_extract(var_30, var_63, adj_30, adj_63, adj_64);
            // adj: dt1 = p_x[faceVInd[1]]                                                        <L 190>
            wp::adj_copy(var_62, adj_60, adj_61);
            wp::adj_load(var_60, adj_60, adj_62);
            wp::adj_address(var_p_x, var_59, adj_p_x, adj_59, adj_60);
            wp::adj_extract(var_30, var_58, adj_30, adj_58, adj_59);
            // adj: dt0 = p_x[faceVInd[0]]                                                        <L 189>
            wp::adj_copy(var_57, adj_55, adj_56);
            wp::adj_load(var_55, adj_55, adj_57);
            wp::adj_address(var_p_x, var_19, adj_p_x, adj_19, adj_55);
            // adj: dp = p_x[xI]                                                                  <L 188>
            wp::adj_copy(var_54, adj_52, adj_53);
            wp::adj_load(var_52, adj_52, adj_54);
            wp::adj_address(var_x, var_51, adj_x, adj_51, adj_52);
            wp::adj_extract(var_30, var_50, adj_30, adj_50, adj_51);
            // adj: t2 = x[faceVInd[2]]                                                           <L 187>
            wp::adj_copy(var_49, adj_47, adj_48);
            wp::adj_load(var_47, adj_47, adj_49);
            wp::adj_address(var_x, var_46, adj_x, adj_46, adj_47);
            wp::adj_extract(var_30, var_45, adj_30, adj_45, adj_46);
            // adj: t1 = x[faceVInd[1]]                                                           <L 186>
            wp::adj_copy(var_44, adj_42, adj_43);
            wp::adj_load(var_42, adj_42, adj_44);
            wp::adj_address(var_x, var_41, adj_x, adj_41, adj_42);
            wp::adj_extract(var_30, var_40, adj_30, adj_40, adj_41);
            // adj: t0 = x[faceVInd[0]]                                                           <L 185>
            wp::adj_copy(var_39, adj_37, adj_38);
            wp::adj_load(var_37, adj_37, adj_39);
            wp::adj_address(var_x, var_19, adj_x, adj_19, adj_37);
            // adj: p = x[xI]                                                                     <L 184>
            wp::adj_add(var_35, var_36, adj_32, adj_33, adj_34);
            wp::adj_load(var_33, adj_33, adj_36);
            wp::adj_load(var_32, adj_32, adj_35);
            wp::adj_address(var_face_xi, var_26, adj_face_xi, adj_26, adj_33);
            wp::adj_address(var_node_xi, var_15, adj_node_xi, adj_15, adj_32);
            // adj: xi = node_xi[svi] + face_xi[faceJ]                                            <L 183>
            wp::adj_copy(var_31, adj_29, adj_30);
            wp::adj_load(var_29, adj_29, adj_31);
            wp::adj_address(var_face, var_26, adj_face, adj_26, adj_29);
            // adj: faceVInd = face[faceJ]                                                        <L 182>
            wp::adj_select(var_22, var_27, var_28, adj_22, adj_24, adj_25, adj_26);
            wp::adj_load(var_25, adj_25, adj_28);
            wp::adj_load(var_24, adj_24, adj_27);
            wp::adj_address(var_nodeJ, var_0, adj_nodeJ, adj_0, adj_25);
            wp::adj_address(var_nodeI, var_0, adj_nodeI, adj_0, adj_24);
            wp::adj_load(var_21, adj_21, adj_23);
            wp::adj_address(var_collision_type, var_0, adj_collision_type, adj_0, adj_21);
            // adj: faceJ = wp.select(collision_type[idx] == POINT_TRIANGLE_PAIR, nodeI[idx], nodeJ[idx])  <L 181>
            wp::adj_copy(var_20, adj_18, adj_19);
            wp::adj_load(var_18, adj_18, adj_20);
            wp::adj_address(var_surf_vi, var_15, adj_surf_vi, adj_15, adj_18);
            // adj: xI = surf_vi[svi]                                                             <L 180>
            wp::adj_select(var_11, var_16, var_17, adj_11, adj_13, adj_14, adj_15);
            wp::adj_load(var_14, adj_14, adj_17);
            wp::adj_load(var_13, adj_13, adj_16);
            wp::adj_address(var_nodeI, var_0, adj_nodeI, adj_0, adj_14);
            wp::adj_address(var_nodeJ, var_0, adj_nodeJ, adj_0, adj_13);
            wp::adj_load(var_10, adj_10, adj_12);
            wp::adj_address(var_collision_type, var_0, adj_collision_type, adj_0, adj_10);
            // adj: svi = wp.select(collision_type[idx] == POINT_TRIANGLE_PAIR, nodeJ[idx], nodeI[idx])  <L 179>
        }
        wp::adj_load(var_5, adj_5, adj_8);
        wp::adj_address(var_collision_type, var_0, adj_collision_type, adj_0, adj_5);
        wp::adj_load(var_1, adj_1, adj_4);
        wp::adj_address(var_collision_type, var_0, adj_collision_type, adj_0, adj_1);
        // adj: if collision_type[idx] == POINT_TRIANGLE_PAIR or collision_type[idx] == TRIANGLE_POINT_PAIR:  <L 178>
        // adj: idx = wp.tid()                                                                    <L 177>
        // adj: def init_step_size_collisions(                                                    <L 158>
        continue;
    }
}



extern "C" __global__ void prune_collisions_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::int32> var_new_num_collisions,
    wp::array_t<wp::int32> var_new_nodeI,
    wp::array_t<wp::int32> var_new_nodeJ,
    wp::array_t<wp::int32> var_new_bodyI,
    wp::array_t<wp::int32> var_new_bodyJ,
    wp::array_t<wp::int32> var_new_collision_type,
    wp::array_t<wp::int32> var_nodeI,
    wp::array_t<wp::int32> var_nodeJ,
    wp::array_t<wp::int32> var_bodyI,
    wp::array_t<wp::int32> var_bodyJ,
    wp::array_t<wp::int32> var_collision_type,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::int32> var_surf_vi,
    wp::array_t<wp::float64> var_node_xi,
    wp::array_t<wp::float64> var_edge_xi,
    wp::array_t<wp::float64> var_face_xi,
    wp::array_t<wp::vec_t<2,wp::int32>> var_edge,
    wp::array_t<wp::vec_t<3,wp::int32>> var_face,
    wp::array_t<wp::float64> var_mu_body,
    wp::float64 var_dhat,
    bool var_exclude_zero_friction)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        const wp::int32 var_2 = 1;
        bool var_3;
        wp::int32 var_4;
        wp::int32* var_5;
        const wp::int32 var_6 = 0;
        bool var_7;
        wp::int32 var_8;
        bool var_9;
        wp::int32* var_10;
        bool var_11;
        wp::int32 var_12;
        wp::int32* var_13;
        wp::int32* var_14;
        wp::int32 var_15;
        wp::int32 var_16;
        wp::int32 var_17;
        wp::int32* var_18;
        bool var_19;
        wp::int32 var_20;
        wp::int32* var_21;
        wp::int32* var_22;
        wp::int32 var_23;
        wp::int32 var_24;
        wp::int32 var_25;
        wp::vec_t<3,wp::int32>* var_26;
        wp::vec_t<3,wp::int32> var_27;
        wp::vec_t<3,wp::int32> var_28;
        wp::float64* var_29;
        wp::float64* var_30;
        wp::float64 var_31;
        wp::float64 var_32;
        wp::float64 var_33;
        wp::int32* var_34;
        wp::int32 var_35;
        wp::int32 var_36;
        wp::vec_t<3,wp::float64>* var_37;
        wp::vec_t<3,wp::float64> var_38;
        wp::vec_t<3,wp::float64> var_39;
        const wp::int32 var_40 = 0;
        wp::int32 var_41;
        wp::vec_t<3,wp::float64>* var_42;
        wp::vec_t<3,wp::float64> var_43;
        wp::vec_t<3,wp::float64> var_44;
        const wp::int32 var_45 = 1;
        wp::int32 var_46;
        wp::vec_t<3,wp::float64>* var_47;
        wp::vec_t<3,wp::float64> var_48;
        wp::vec_t<3,wp::float64> var_49;
        const wp::int32 var_50 = 2;
        wp::int32 var_51;
        wp::vec_t<3,wp::float64>* var_52;
        wp::vec_t<3,wp::float64> var_53;
        wp::vec_t<3,wp::float64> var_54;
        wp::float64 var_55;
        const wp::float32 var_56 = 2.0;
        wp::float64 var_57;
        wp::float64 var_58;
        wp::float64 var_59;
        wp::float64 var_60;
        wp::float64 var_61;
        wp::float64 var_62;
        wp::float64 var_63;
        bool var_64;
        wp::int32* var_65;
        wp::float64* var_66;
        wp::int32 var_67;
        wp::int32* var_68;
        wp::float64* var_69;
        wp::int32 var_70;
        wp::float64 var_71;
        wp::float64 var_72;
        wp::float64 var_73;
        const wp::int32 var_74 = 0;
        bool var_75;
        bool var_76;
        bool var_77;
        const wp::int32 var_78 = 0;
        const wp::int32 var_79 = 1;
        wp::int32 var_80;
        wp::int32* var_81;
        wp::int32 var_82;
        wp::int32* var_83;
        wp::int32 var_84;
        wp::int32* var_85;
        wp::int32 var_86;
        wp::int32* var_87;
        wp::int32 var_88;
        wp::int32* var_89;
        wp::int32 var_90;
        wp::int32* var_91;
        wp::int32 var_92;
        wp::int32 var_93;
        wp::int32* var_94;
        wp::int32 var_95;
        wp::int32 var_96;
        wp::float64* var_97;
        wp::float64* var_98;
        wp::float64 var_99;
        wp::float64 var_100;
        wp::float64 var_101;
        wp::vec_t<2,wp::int32>* var_102;
        wp::vec_t<2,wp::int32> var_103;
        wp::vec_t<2,wp::int32> var_104;
        wp::vec_t<2,wp::int32>* var_105;
        wp::vec_t<2,wp::int32> var_106;
        wp::vec_t<2,wp::int32> var_107;
        const wp::int32 var_108 = 0;
        wp::int32 var_109;
        wp::vec_t<3,wp::float64>* var_110;
        wp::vec_t<3,wp::float64> var_111;
        wp::vec_t<3,wp::float64> var_112;
        const wp::int32 var_113 = 1;
        wp::int32 var_114;
        wp::vec_t<3,wp::float64>* var_115;
        wp::vec_t<3,wp::float64> var_116;
        wp::vec_t<3,wp::float64> var_117;
        const wp::int32 var_118 = 0;
        wp::int32 var_119;
        wp::vec_t<3,wp::float64>* var_120;
        wp::vec_t<3,wp::float64> var_121;
        wp::vec_t<3,wp::float64> var_122;
        const wp::int32 var_123 = 1;
        wp::int32 var_124;
        wp::vec_t<3,wp::float64>* var_125;
        wp::vec_t<3,wp::float64> var_126;
        wp::vec_t<3,wp::float64> var_127;
        wp::float64 var_128;
        wp::float64 var_129;
        wp::float64 var_130;
        wp::float64 var_131;
        const wp::float32 var_132 = 2.0;
        wp::float64 var_133;
        wp::float64 var_134;
        wp::float64 var_135;
        wp::float64 var_136;
        bool var_137;
        wp::int32* var_138;
        wp::float64* var_139;
        wp::int32 var_140;
        wp::int32* var_141;
        wp::float64* var_142;
        wp::int32 var_143;
        wp::float64 var_144;
        wp::float64 var_145;
        wp::float64 var_146;
        const wp::int32 var_147 = 0;
        bool var_148;
        bool var_149;
        bool var_150;
        const wp::int32 var_151 = 0;
        const wp::int32 var_152 = 1;
        wp::int32 var_153;
        wp::int32* var_154;
        wp::int32 var_155;
        wp::int32* var_156;
        wp::int32 var_157;
        wp::int32* var_158;
        wp::int32 var_159;
        wp::int32* var_160;
        wp::int32 var_161;
        wp::int32* var_162;
        wp::int32 var_163;
        wp::int32 var_164;
        wp::float64 var_165;
        wp::float64 var_166;
        wp::float64 var_167;
        wp::int32 var_168;
        //---------
        // forward
        // def prune_collisions(                                                                  <L 54>
        // idx = wp.tid()                                                                         <L 77>
        var_0 = builtin_tid1d();
        // if collision_type[idx] == POINT_TRIANGLE_PAIR or collision_type[idx] == TRIANGLE_POINT_PAIR:       <L 78>
        var_1 = wp::address(var_collision_type, var_0);
        var_4 = wp::load(var_1);
        var_3 = (var_4 == var_2);
        var_5 = wp::address(var_collision_type, var_0);
        var_8 = wp::load(var_5);
        var_7 = (var_8 == var_6);
        var_9 = var_3 || var_7;
        if (var_9) {
            // svi = wp.select(collision_type[idx] == POINT_TRIANGLE_PAIR, nodeJ[idx], nodeI[idx])       <L 79>
            var_10 = wp::address(var_collision_type, var_0);
            var_12 = wp::load(var_10);
            var_11 = (var_12 == var_2);
            var_13 = wp::address(var_nodeJ, var_0);
            var_14 = wp::address(var_nodeI, var_0);
            var_16 = wp::load(var_13);
            var_17 = wp::load(var_14);
            var_15 = wp::select(var_11, var_16, var_17);
            // faceJ = wp.select(collision_type[idx] == POINT_TRIANGLE_PAIR, nodeI[idx], nodeJ[idx])       <L 80>
            var_18 = wp::address(var_collision_type, var_0);
            var_20 = wp::load(var_18);
            var_19 = (var_20 == var_2);
            var_21 = wp::address(var_nodeI, var_0);
            var_22 = wp::address(var_nodeJ, var_0);
            var_24 = wp::load(var_21);
            var_25 = wp::load(var_22);
            var_23 = wp::select(var_19, var_24, var_25);
            // faceVInd = face[faceJ]                                                             <L 81>
            var_26 = wp::address(var_face, var_23);
            var_28 = wp::load(var_26);
            var_27 = wp::copy(var_28);
            // xi = node_xi[svi] + face_xi[faceJ]                                                 <L 82>
            var_29 = wp::address(var_node_xi, var_15);
            var_30 = wp::address(var_face_xi, var_23);
            var_32 = wp::load(var_29);
            var_33 = wp::load(var_30);
            var_31 = wp::add(var_32, var_33);
            // xI = surf_vi[svi]                                                                  <L 83>
            var_34 = wp::address(var_surf_vi, var_15);
            var_36 = wp::load(var_34);
            var_35 = wp::copy(var_36);
            // p = x[xI]                                                                          <L 84>
            var_37 = wp::address(var_x, var_35);
            var_39 = wp::load(var_37);
            var_38 = wp::copy(var_39);
            // t0 = x[faceVInd[0]]                                                                <L 85>
            var_41 = wp::extract(var_27, var_40);
            var_42 = wp::address(var_x, var_41);
            var_44 = wp::load(var_42);
            var_43 = wp::copy(var_44);
            // t1 = x[faceVInd[1]]                                                                <L 86>
            var_46 = wp::extract(var_27, var_45);
            var_47 = wp::address(var_x, var_46);
            var_49 = wp::load(var_47);
            var_48 = wp::copy(var_49);
            // t2 = x[faceVInd[2]]                                                                <L 87>
            var_51 = wp::extract(var_27, var_50);
            var_52 = wp::address(var_x, var_51);
            var_54 = wp::load(var_52);
            var_53 = wp::copy(var_54);
            // activeGap2 = dhat * dhat + np.float64(2.0) * dhat * xi                             <L 88>
            var_55 = wp::mul(var_dhat, var_dhat);
            var_57 = wp::float64(var_56);
            var_58 = wp::mul(var_57, var_dhat);
            var_59 = wp::mul(var_58, var_31);
            var_60 = wp::add(var_55, var_59);
            // dsq = point_triangle_distance(p, t0, t1, t2) - xi * xi                             <L 89>
            var_61 = point_triangle_distance_0(var_38, var_43, var_48, var_53);
            var_62 = wp::mul(var_31, var_31);
            var_63 = wp::sub(var_61, var_62);
            // if dsq >= activeGap2 or (exclude_zero_friction and wp.max(mu_body[bodyI[idx]], mu_body[bodyJ[idx]]) == 0):       <L 90>
            var_64 = (var_63 >= var_60);
            var_65 = wp::address(var_bodyI, var_0);
            var_67 = wp::load(var_65);
            var_66 = wp::address(var_mu_body, var_67);
            var_68 = wp::address(var_bodyJ, var_0);
            var_70 = wp::load(var_68);
            var_69 = wp::address(var_mu_body, var_70);
            var_72 = wp::load(var_66);
            var_73 = wp::load(var_69);
            var_71 = wp::max(var_72, var_73);
            var_75 = (var_71 == var_74);
            var_76 = var_exclude_zero_friction && var_75;
            var_77 = var_64 || var_76;
            if (var_77) {
                // pass                                                                           <L 91>
            }
            if (!var_77) {
                // offset = wp.atomic_add(new_num_collisions, 0, 1)                               <L 93>
                var_80 = wp::atomic_add(var_new_num_collisions, var_78, var_79);
                // new_bodyI[offset] = bodyI[idx]                                                 <L 94>
                var_81 = wp::address(var_bodyI, var_0);
                var_82 = wp::load(var_81);
                wp::array_store(var_new_bodyI, var_80, var_82);
                // new_bodyJ[offset] = bodyJ[idx]                                                 <L 95>
                var_83 = wp::address(var_bodyJ, var_0);
                var_84 = wp::load(var_83);
                wp::array_store(var_new_bodyJ, var_80, var_84);
                // new_nodeI[offset] = nodeI[idx]                                                 <L 96>
                var_85 = wp::address(var_nodeI, var_0);
                var_86 = wp::load(var_85);
                wp::array_store(var_new_nodeI, var_80, var_86);
                // new_nodeJ[offset] = nodeJ[idx]                                                 <L 97>
                var_87 = wp::address(var_nodeJ, var_0);
                var_88 = wp::load(var_87);
                wp::array_store(var_new_nodeJ, var_80, var_88);
                // new_collision_type[offset] = collision_type[idx]                               <L 98>
                var_89 = wp::address(var_collision_type, var_0);
                var_90 = wp::load(var_89);
                wp::array_store(var_new_collision_type, var_80, var_90);
            }
        }
        if (!var_9) {
            // edgeI = nodeI[idx]                                                                 <L 100>
            var_91 = wp::address(var_nodeI, var_0);
            var_93 = wp::load(var_91);
            var_92 = wp::copy(var_93);
            // edgeJ = nodeJ[idx]                                                                 <L 101>
            var_94 = wp::address(var_nodeJ, var_0);
            var_96 = wp::load(var_94);
            var_95 = wp::copy(var_96);
            // xi = edge_xi[edgeI] + edge_xi[edgeJ]                                               <L 102>
            var_97 = wp::address(var_edge_xi, var_92);
            var_98 = wp::address(var_edge_xi, var_95);
            var_100 = wp::load(var_97);
            var_101 = wp::load(var_98);
            var_99 = wp::add(var_100, var_101);
            // edgeVIndI = edge[edgeI]                                                            <L 103>
            var_102 = wp::address(var_edge, var_92);
            var_104 = wp::load(var_102);
            var_103 = wp::copy(var_104);
            // edgeVIndJ = edge[edgeJ]                                                            <L 104>
            var_105 = wp::address(var_edge, var_95);
            var_107 = wp::load(var_105);
            var_106 = wp::copy(var_107);
            // ea0 = x[edgeVIndI[0]]                                                              <L 105>
            var_109 = wp::extract(var_103, var_108);
            var_110 = wp::address(var_x, var_109);
            var_112 = wp::load(var_110);
            var_111 = wp::copy(var_112);
            // ea1 = x[edgeVIndI[1]]                                                              <L 106>
            var_114 = wp::extract(var_103, var_113);
            var_115 = wp::address(var_x, var_114);
            var_117 = wp::load(var_115);
            var_116 = wp::copy(var_117);
            // eb0 = x[edgeVIndJ[0]]                                                              <L 107>
            var_119 = wp::extract(var_106, var_118);
            var_120 = wp::address(var_x, var_119);
            var_122 = wp::load(var_120);
            var_121 = wp::copy(var_122);
            // eb1 = x[edgeVIndJ[1]]                                                              <L 108>
            var_124 = wp::extract(var_106, var_123);
            var_125 = wp::address(var_x, var_124);
            var_127 = wp::load(var_125);
            var_126 = wp::copy(var_127);
            // dsq = edge_edge_distance(ea0, ea1, eb0, eb1) - xi * xi                             <L 109>
            var_128 = edge_edge_distance_0(var_111, var_116, var_121, var_126);
            var_129 = wp::mul(var_99, var_99);
            var_130 = wp::sub(var_128, var_129);
            // activeGap2 = dhat * dhat + wp.float64(2.0) * dhat * xi                             <L 110>
            var_131 = wp::mul(var_dhat, var_dhat);
            var_133 = wp::float64(var_132);
            var_134 = wp::mul(var_133, var_dhat);
            var_135 = wp::mul(var_134, var_99);
            var_136 = wp::add(var_131, var_135);
            // if dsq >= activeGap2 or (exclude_zero_friction and wp.max(mu_body[bodyI[idx]], mu_body[bodyJ[idx]]) == 0):       <L 111>
            var_137 = (var_130 >= var_136);
            var_138 = wp::address(var_bodyI, var_0);
            var_140 = wp::load(var_138);
            var_139 = wp::address(var_mu_body, var_140);
            var_141 = wp::address(var_bodyJ, var_0);
            var_143 = wp::load(var_141);
            var_142 = wp::address(var_mu_body, var_143);
            var_145 = wp::load(var_139);
            var_146 = wp::load(var_142);
            var_144 = wp::max(var_145, var_146);
            var_148 = (var_144 == var_147);
            var_149 = var_exclude_zero_friction && var_148;
            var_150 = var_137 || var_149;
            if (var_150) {
                // pass                                                                           <L 112>
            }
            if (!var_150) {
                // offset = wp.atomic_add(new_num_collisions, 0, 1)                               <L 114>
                var_153 = wp::atomic_add(var_new_num_collisions, var_151, var_152);
                // new_bodyI[offset] = bodyI[idx]                                                 <L 115>
                var_154 = wp::address(var_bodyI, var_0);
                var_155 = wp::load(var_154);
                wp::array_store(var_new_bodyI, var_153, var_155);
                // new_bodyJ[offset] = bodyJ[idx]                                                 <L 116>
                var_156 = wp::address(var_bodyJ, var_0);
                var_157 = wp::load(var_156);
                wp::array_store(var_new_bodyJ, var_153, var_157);
                // new_nodeI[offset] = nodeI[idx]                                                 <L 117>
                var_158 = wp::address(var_nodeI, var_0);
                var_159 = wp::load(var_158);
                wp::array_store(var_new_nodeI, var_153, var_159);
                // new_nodeJ[offset] = nodeJ[idx]                                                 <L 118>
                var_160 = wp::address(var_nodeJ, var_0);
                var_161 = wp::load(var_160);
                wp::array_store(var_new_nodeJ, var_153, var_161);
                // new_collision_type[offset] = collision_type[idx]                               <L 119>
                var_162 = wp::address(var_collision_type, var_0);
                var_163 = wp::load(var_162);
                wp::array_store(var_new_collision_type, var_153, var_163);
            }
            var_164 = wp::where(var_150, var_80, var_153);
        }
        var_165 = wp::where(var_9, var_31, var_99);
        var_166 = wp::where(var_9, var_60, var_136);
        var_167 = wp::where(var_9, var_63, var_130);
        var_168 = wp::where(var_9, var_80, var_164);
    }
}



extern "C" __global__ void prune_collisions_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::int32> var_new_num_collisions,
    wp::array_t<wp::int32> var_new_nodeI,
    wp::array_t<wp::int32> var_new_nodeJ,
    wp::array_t<wp::int32> var_new_bodyI,
    wp::array_t<wp::int32> var_new_bodyJ,
    wp::array_t<wp::int32> var_new_collision_type,
    wp::array_t<wp::int32> var_nodeI,
    wp::array_t<wp::int32> var_nodeJ,
    wp::array_t<wp::int32> var_bodyI,
    wp::array_t<wp::int32> var_bodyJ,
    wp::array_t<wp::int32> var_collision_type,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::int32> var_surf_vi,
    wp::array_t<wp::float64> var_node_xi,
    wp::array_t<wp::float64> var_edge_xi,
    wp::array_t<wp::float64> var_face_xi,
    wp::array_t<wp::vec_t<2,wp::int32>> var_edge,
    wp::array_t<wp::vec_t<3,wp::int32>> var_face,
    wp::array_t<wp::float64> var_mu_body,
    wp::float64 var_dhat,
    bool var_exclude_zero_friction,
    wp::array_t<wp::int32> adj_new_num_collisions,
    wp::array_t<wp::int32> adj_new_nodeI,
    wp::array_t<wp::int32> adj_new_nodeJ,
    wp::array_t<wp::int32> adj_new_bodyI,
    wp::array_t<wp::int32> adj_new_bodyJ,
    wp::array_t<wp::int32> adj_new_collision_type,
    wp::array_t<wp::int32> adj_nodeI,
    wp::array_t<wp::int32> adj_nodeJ,
    wp::array_t<wp::int32> adj_bodyI,
    wp::array_t<wp::int32> adj_bodyJ,
    wp::array_t<wp::int32> adj_collision_type,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_x,
    wp::array_t<wp::int32> adj_surf_vi,
    wp::array_t<wp::float64> adj_node_xi,
    wp::array_t<wp::float64> adj_edge_xi,
    wp::array_t<wp::float64> adj_face_xi,
    wp::array_t<wp::vec_t<2,wp::int32>> adj_edge,
    wp::array_t<wp::vec_t<3,wp::int32>> adj_face,
    wp::array_t<wp::float64> adj_mu_body,
    wp::float64 adj_dhat,
    bool adj_exclude_zero_friction)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        const wp::int32 var_2 = 1;
        bool var_3;
        wp::int32 var_4;
        wp::int32* var_5;
        const wp::int32 var_6 = 0;
        bool var_7;
        wp::int32 var_8;
        bool var_9;
        wp::int32* var_10;
        bool var_11;
        wp::int32 var_12;
        wp::int32* var_13;
        wp::int32* var_14;
        wp::int32 var_15;
        wp::int32 var_16;
        wp::int32 var_17;
        wp::int32* var_18;
        bool var_19;
        wp::int32 var_20;
        wp::int32* var_21;
        wp::int32* var_22;
        wp::int32 var_23;
        wp::int32 var_24;
        wp::int32 var_25;
        wp::vec_t<3,wp::int32>* var_26;
        wp::vec_t<3,wp::int32> var_27;
        wp::vec_t<3,wp::int32> var_28;
        wp::float64* var_29;
        wp::float64* var_30;
        wp::float64 var_31;
        wp::float64 var_32;
        wp::float64 var_33;
        wp::int32* var_34;
        wp::int32 var_35;
        wp::int32 var_36;
        wp::vec_t<3,wp::float64>* var_37;
        wp::vec_t<3,wp::float64> var_38;
        wp::vec_t<3,wp::float64> var_39;
        const wp::int32 var_40 = 0;
        wp::int32 var_41;
        wp::vec_t<3,wp::float64>* var_42;
        wp::vec_t<3,wp::float64> var_43;
        wp::vec_t<3,wp::float64> var_44;
        const wp::int32 var_45 = 1;
        wp::int32 var_46;
        wp::vec_t<3,wp::float64>* var_47;
        wp::vec_t<3,wp::float64> var_48;
        wp::vec_t<3,wp::float64> var_49;
        const wp::int32 var_50 = 2;
        wp::int32 var_51;
        wp::vec_t<3,wp::float64>* var_52;
        wp::vec_t<3,wp::float64> var_53;
        wp::vec_t<3,wp::float64> var_54;
        wp::float64 var_55;
        const wp::float32 var_56 = 2.0;
        wp::float64 var_57;
        wp::float64 var_58;
        wp::float64 var_59;
        wp::float64 var_60;
        wp::float64 var_61;
        wp::float64 var_62;
        wp::float64 var_63;
        bool var_64;
        wp::int32* var_65;
        wp::float64* var_66;
        wp::int32 var_67;
        wp::int32* var_68;
        wp::float64* var_69;
        wp::int32 var_70;
        wp::float64 var_71;
        wp::float64 var_72;
        wp::float64 var_73;
        const wp::int32 var_74 = 0;
        bool var_75;
        bool var_76;
        bool var_77;
        const wp::int32 var_78 = 0;
        const wp::int32 var_79 = 1;
        wp::int32 var_80;
        wp::int32* var_81;
        wp::int32 var_82;
        wp::int32* var_83;
        wp::int32 var_84;
        wp::int32* var_85;
        wp::int32 var_86;
        wp::int32* var_87;
        wp::int32 var_88;
        wp::int32* var_89;
        wp::int32 var_90;
        wp::int32* var_91;
        wp::int32 var_92;
        wp::int32 var_93;
        wp::int32* var_94;
        wp::int32 var_95;
        wp::int32 var_96;
        wp::float64* var_97;
        wp::float64* var_98;
        wp::float64 var_99;
        wp::float64 var_100;
        wp::float64 var_101;
        wp::vec_t<2,wp::int32>* var_102;
        wp::vec_t<2,wp::int32> var_103;
        wp::vec_t<2,wp::int32> var_104;
        wp::vec_t<2,wp::int32>* var_105;
        wp::vec_t<2,wp::int32> var_106;
        wp::vec_t<2,wp::int32> var_107;
        const wp::int32 var_108 = 0;
        wp::int32 var_109;
        wp::vec_t<3,wp::float64>* var_110;
        wp::vec_t<3,wp::float64> var_111;
        wp::vec_t<3,wp::float64> var_112;
        const wp::int32 var_113 = 1;
        wp::int32 var_114;
        wp::vec_t<3,wp::float64>* var_115;
        wp::vec_t<3,wp::float64> var_116;
        wp::vec_t<3,wp::float64> var_117;
        const wp::int32 var_118 = 0;
        wp::int32 var_119;
        wp::vec_t<3,wp::float64>* var_120;
        wp::vec_t<3,wp::float64> var_121;
        wp::vec_t<3,wp::float64> var_122;
        const wp::int32 var_123 = 1;
        wp::int32 var_124;
        wp::vec_t<3,wp::float64>* var_125;
        wp::vec_t<3,wp::float64> var_126;
        wp::vec_t<3,wp::float64> var_127;
        wp::float64 var_128;
        wp::float64 var_129;
        wp::float64 var_130;
        wp::float64 var_131;
        const wp::float32 var_132 = 2.0;
        wp::float64 var_133;
        wp::float64 var_134;
        wp::float64 var_135;
        wp::float64 var_136;
        bool var_137;
        wp::int32* var_138;
        wp::float64* var_139;
        wp::int32 var_140;
        wp::int32* var_141;
        wp::float64* var_142;
        wp::int32 var_143;
        wp::float64 var_144;
        wp::float64 var_145;
        wp::float64 var_146;
        const wp::int32 var_147 = 0;
        bool var_148;
        bool var_149;
        bool var_150;
        const wp::int32 var_151 = 0;
        const wp::int32 var_152 = 1;
        wp::int32 var_153;
        wp::int32* var_154;
        wp::int32 var_155;
        wp::int32* var_156;
        wp::int32 var_157;
        wp::int32* var_158;
        wp::int32 var_159;
        wp::int32* var_160;
        wp::int32 var_161;
        wp::int32* var_162;
        wp::int32 var_163;
        wp::int32 var_164;
        wp::float64 var_165;
        wp::float64 var_166;
        wp::float64 var_167;
        wp::int32 var_168;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        bool adj_3 = {};
        wp::int32 adj_4 = {};
        wp::int32 adj_5 = {};
        wp::int32 adj_6 = {};
        bool adj_7 = {};
        wp::int32 adj_8 = {};
        bool adj_9 = {};
        wp::int32 adj_10 = {};
        bool adj_11 = {};
        wp::int32 adj_12 = {};
        wp::int32 adj_13 = {};
        wp::int32 adj_14 = {};
        wp::int32 adj_15 = {};
        wp::int32 adj_16 = {};
        wp::int32 adj_17 = {};
        wp::int32 adj_18 = {};
        bool adj_19 = {};
        wp::int32 adj_20 = {};
        wp::int32 adj_21 = {};
        wp::int32 adj_22 = {};
        wp::int32 adj_23 = {};
        wp::int32 adj_24 = {};
        wp::int32 adj_25 = {};
        wp::vec_t<3,wp::int32> adj_26 = {};
        wp::vec_t<3,wp::int32> adj_27 = {};
        wp::vec_t<3,wp::int32> adj_28 = {};
        wp::float64 adj_29 = {};
        wp::float64 adj_30 = {};
        wp::float64 adj_31 = {};
        wp::float64 adj_32 = {};
        wp::float64 adj_33 = {};
        wp::int32 adj_34 = {};
        wp::int32 adj_35 = {};
        wp::int32 adj_36 = {};
        wp::vec_t<3,wp::float64> adj_37 = {};
        wp::vec_t<3,wp::float64> adj_38 = {};
        wp::vec_t<3,wp::float64> adj_39 = {};
        wp::int32 adj_40 = {};
        wp::int32 adj_41 = {};
        wp::vec_t<3,wp::float64> adj_42 = {};
        wp::vec_t<3,wp::float64> adj_43 = {};
        wp::vec_t<3,wp::float64> adj_44 = {};
        wp::int32 adj_45 = {};
        wp::int32 adj_46 = {};
        wp::vec_t<3,wp::float64> adj_47 = {};
        wp::vec_t<3,wp::float64> adj_48 = {};
        wp::vec_t<3,wp::float64> adj_49 = {};
        wp::int32 adj_50 = {};
        wp::int32 adj_51 = {};
        wp::vec_t<3,wp::float64> adj_52 = {};
        wp::vec_t<3,wp::float64> adj_53 = {};
        wp::vec_t<3,wp::float64> adj_54 = {};
        wp::float64 adj_55 = {};
        wp::float32 adj_56 = {};
        wp::float64 adj_57 = {};
        wp::float64 adj_58 = {};
        wp::float64 adj_59 = {};
        wp::float64 adj_60 = {};
        wp::float64 adj_61 = {};
        wp::float64 adj_62 = {};
        wp::float64 adj_63 = {};
        bool adj_64 = {};
        wp::int32 adj_65 = {};
        wp::float64 adj_66 = {};
        wp::int32 adj_67 = {};
        wp::int32 adj_68 = {};
        wp::float64 adj_69 = {};
        wp::int32 adj_70 = {};
        wp::float64 adj_71 = {};
        wp::float64 adj_72 = {};
        wp::float64 adj_73 = {};
        wp::int32 adj_74 = {};
        bool adj_75 = {};
        bool adj_76 = {};
        bool adj_77 = {};
        wp::int32 adj_78 = {};
        wp::int32 adj_79 = {};
        wp::int32 adj_80 = {};
        wp::int32 adj_81 = {};
        wp::int32 adj_82 = {};
        wp::int32 adj_83 = {};
        wp::int32 adj_84 = {};
        wp::int32 adj_85 = {};
        wp::int32 adj_86 = {};
        wp::int32 adj_87 = {};
        wp::int32 adj_88 = {};
        wp::int32 adj_89 = {};
        wp::int32 adj_90 = {};
        wp::int32 adj_91 = {};
        wp::int32 adj_92 = {};
        wp::int32 adj_93 = {};
        wp::int32 adj_94 = {};
        wp::int32 adj_95 = {};
        wp::int32 adj_96 = {};
        wp::float64 adj_97 = {};
        wp::float64 adj_98 = {};
        wp::float64 adj_99 = {};
        wp::float64 adj_100 = {};
        wp::float64 adj_101 = {};
        wp::vec_t<2,wp::int32> adj_102 = {};
        wp::vec_t<2,wp::int32> adj_103 = {};
        wp::vec_t<2,wp::int32> adj_104 = {};
        wp::vec_t<2,wp::int32> adj_105 = {};
        wp::vec_t<2,wp::int32> adj_106 = {};
        wp::vec_t<2,wp::int32> adj_107 = {};
        wp::int32 adj_108 = {};
        wp::int32 adj_109 = {};
        wp::vec_t<3,wp::float64> adj_110 = {};
        wp::vec_t<3,wp::float64> adj_111 = {};
        wp::vec_t<3,wp::float64> adj_112 = {};
        wp::int32 adj_113 = {};
        wp::int32 adj_114 = {};
        wp::vec_t<3,wp::float64> adj_115 = {};
        wp::vec_t<3,wp::float64> adj_116 = {};
        wp::vec_t<3,wp::float64> adj_117 = {};
        wp::int32 adj_118 = {};
        wp::int32 adj_119 = {};
        wp::vec_t<3,wp::float64> adj_120 = {};
        wp::vec_t<3,wp::float64> adj_121 = {};
        wp::vec_t<3,wp::float64> adj_122 = {};
        wp::int32 adj_123 = {};
        wp::int32 adj_124 = {};
        wp::vec_t<3,wp::float64> adj_125 = {};
        wp::vec_t<3,wp::float64> adj_126 = {};
        wp::vec_t<3,wp::float64> adj_127 = {};
        wp::float64 adj_128 = {};
        wp::float64 adj_129 = {};
        wp::float64 adj_130 = {};
        wp::float64 adj_131 = {};
        wp::float32 adj_132 = {};
        wp::float64 adj_133 = {};
        wp::float64 adj_134 = {};
        wp::float64 adj_135 = {};
        wp::float64 adj_136 = {};
        bool adj_137 = {};
        wp::int32 adj_138 = {};
        wp::float64 adj_139 = {};
        wp::int32 adj_140 = {};
        wp::int32 adj_141 = {};
        wp::float64 adj_142 = {};
        wp::int32 adj_143 = {};
        wp::float64 adj_144 = {};
        wp::float64 adj_145 = {};
        wp::float64 adj_146 = {};
        wp::int32 adj_147 = {};
        bool adj_148 = {};
        bool adj_149 = {};
        bool adj_150 = {};
        wp::int32 adj_151 = {};
        wp::int32 adj_152 = {};
        wp::int32 adj_153 = {};
        wp::int32 adj_154 = {};
        wp::int32 adj_155 = {};
        wp::int32 adj_156 = {};
        wp::int32 adj_157 = {};
        wp::int32 adj_158 = {};
        wp::int32 adj_159 = {};
        wp::int32 adj_160 = {};
        wp::int32 adj_161 = {};
        wp::int32 adj_162 = {};
        wp::int32 adj_163 = {};
        wp::int32 adj_164 = {};
        wp::float64 adj_165 = {};
        wp::float64 adj_166 = {};
        wp::float64 adj_167 = {};
        wp::int32 adj_168 = {};
        //---------
        // forward
        // def prune_collisions(                                                                  <L 54>
        // idx = wp.tid()                                                                         <L 77>
        var_0 = builtin_tid1d();
        // if collision_type[idx] == POINT_TRIANGLE_PAIR or collision_type[idx] == TRIANGLE_POINT_PAIR:       <L 78>
        var_1 = wp::address(var_collision_type, var_0);
        var_4 = wp::load(var_1);
        var_3 = (var_4 == var_2);
        var_5 = wp::address(var_collision_type, var_0);
        var_8 = wp::load(var_5);
        var_7 = (var_8 == var_6);
        var_9 = var_3 || var_7;
        if (var_9) {
            // svi = wp.select(collision_type[idx] == POINT_TRIANGLE_PAIR, nodeJ[idx], nodeI[idx])       <L 79>
            var_10 = wp::address(var_collision_type, var_0);
            var_12 = wp::load(var_10);
            var_11 = (var_12 == var_2);
            var_13 = wp::address(var_nodeJ, var_0);
            var_14 = wp::address(var_nodeI, var_0);
            var_16 = wp::load(var_13);
            var_17 = wp::load(var_14);
            var_15 = wp::select(var_11, var_16, var_17);
            // faceJ = wp.select(collision_type[idx] == POINT_TRIANGLE_PAIR, nodeI[idx], nodeJ[idx])       <L 80>
            var_18 = wp::address(var_collision_type, var_0);
            var_20 = wp::load(var_18);
            var_19 = (var_20 == var_2);
            var_21 = wp::address(var_nodeI, var_0);
            var_22 = wp::address(var_nodeJ, var_0);
            var_24 = wp::load(var_21);
            var_25 = wp::load(var_22);
            var_23 = wp::select(var_19, var_24, var_25);
            // faceVInd = face[faceJ]                                                             <L 81>
            var_26 = wp::address(var_face, var_23);
            var_28 = wp::load(var_26);
            var_27 = wp::copy(var_28);
            // xi = node_xi[svi] + face_xi[faceJ]                                                 <L 82>
            var_29 = wp::address(var_node_xi, var_15);
            var_30 = wp::address(var_face_xi, var_23);
            var_32 = wp::load(var_29);
            var_33 = wp::load(var_30);
            var_31 = wp::add(var_32, var_33);
            // xI = surf_vi[svi]                                                                  <L 83>
            var_34 = wp::address(var_surf_vi, var_15);
            var_36 = wp::load(var_34);
            var_35 = wp::copy(var_36);
            // p = x[xI]                                                                          <L 84>
            var_37 = wp::address(var_x, var_35);
            var_39 = wp::load(var_37);
            var_38 = wp::copy(var_39);
            // t0 = x[faceVInd[0]]                                                                <L 85>
            var_41 = wp::extract(var_27, var_40);
            var_42 = wp::address(var_x, var_41);
            var_44 = wp::load(var_42);
            var_43 = wp::copy(var_44);
            // t1 = x[faceVInd[1]]                                                                <L 86>
            var_46 = wp::extract(var_27, var_45);
            var_47 = wp::address(var_x, var_46);
            var_49 = wp::load(var_47);
            var_48 = wp::copy(var_49);
            // t2 = x[faceVInd[2]]                                                                <L 87>
            var_51 = wp::extract(var_27, var_50);
            var_52 = wp::address(var_x, var_51);
            var_54 = wp::load(var_52);
            var_53 = wp::copy(var_54);
            // activeGap2 = dhat * dhat + np.float64(2.0) * dhat * xi                             <L 88>
            var_55 = wp::mul(var_dhat, var_dhat);
            var_57 = wp::float64(var_56);
            var_58 = wp::mul(var_57, var_dhat);
            var_59 = wp::mul(var_58, var_31);
            var_60 = wp::add(var_55, var_59);
            // dsq = point_triangle_distance(p, t0, t1, t2) - xi * xi                             <L 89>
            var_61 = point_triangle_distance_0(var_38, var_43, var_48, var_53);
            var_62 = wp::mul(var_31, var_31);
            var_63 = wp::sub(var_61, var_62);
            // if dsq >= activeGap2 or (exclude_zero_friction and wp.max(mu_body[bodyI[idx]], mu_body[bodyJ[idx]]) == 0):       <L 90>
            var_64 = (var_63 >= var_60);
            var_65 = wp::address(var_bodyI, var_0);
            var_67 = wp::load(var_65);
            var_66 = wp::address(var_mu_body, var_67);
            var_68 = wp::address(var_bodyJ, var_0);
            var_70 = wp::load(var_68);
            var_69 = wp::address(var_mu_body, var_70);
            var_72 = wp::load(var_66);
            var_73 = wp::load(var_69);
            var_71 = wp::max(var_72, var_73);
            var_75 = (var_71 == var_74);
            var_76 = var_exclude_zero_friction && var_75;
            var_77 = var_64 || var_76;
            if (var_77) {
                // pass                                                                           <L 91>
            }
            if (!var_77) {
                // offset = wp.atomic_add(new_num_collisions, 0, 1)                               <L 93>
                // var_80 = wp::atomic_add(var_new_num_collisions, var_78, var_79);
                // new_bodyI[offset] = bodyI[idx]                                                 <L 94>
                var_81 = wp::address(var_bodyI, var_0);
                var_82 = wp::load(var_81);
                // wp::array_store(var_new_bodyI, var_80, var_82);
                // new_bodyJ[offset] = bodyJ[idx]                                                 <L 95>
                var_83 = wp::address(var_bodyJ, var_0);
                var_84 = wp::load(var_83);
                // wp::array_store(var_new_bodyJ, var_80, var_84);
                // new_nodeI[offset] = nodeI[idx]                                                 <L 96>
                var_85 = wp::address(var_nodeI, var_0);
                var_86 = wp::load(var_85);
                // wp::array_store(var_new_nodeI, var_80, var_86);
                // new_nodeJ[offset] = nodeJ[idx]                                                 <L 97>
                var_87 = wp::address(var_nodeJ, var_0);
                var_88 = wp::load(var_87);
                // wp::array_store(var_new_nodeJ, var_80, var_88);
                // new_collision_type[offset] = collision_type[idx]                               <L 98>
                var_89 = wp::address(var_collision_type, var_0);
                var_90 = wp::load(var_89);
                // wp::array_store(var_new_collision_type, var_80, var_90);
            }
        }
        if (!var_9) {
            // edgeI = nodeI[idx]                                                                 <L 100>
            var_91 = wp::address(var_nodeI, var_0);
            var_93 = wp::load(var_91);
            var_92 = wp::copy(var_93);
            // edgeJ = nodeJ[idx]                                                                 <L 101>
            var_94 = wp::address(var_nodeJ, var_0);
            var_96 = wp::load(var_94);
            var_95 = wp::copy(var_96);
            // xi = edge_xi[edgeI] + edge_xi[edgeJ]                                               <L 102>
            var_97 = wp::address(var_edge_xi, var_92);
            var_98 = wp::address(var_edge_xi, var_95);
            var_100 = wp::load(var_97);
            var_101 = wp::load(var_98);
            var_99 = wp::add(var_100, var_101);
            // edgeVIndI = edge[edgeI]                                                            <L 103>
            var_102 = wp::address(var_edge, var_92);
            var_104 = wp::load(var_102);
            var_103 = wp::copy(var_104);
            // edgeVIndJ = edge[edgeJ]                                                            <L 104>
            var_105 = wp::address(var_edge, var_95);
            var_107 = wp::load(var_105);
            var_106 = wp::copy(var_107);
            // ea0 = x[edgeVIndI[0]]                                                              <L 105>
            var_109 = wp::extract(var_103, var_108);
            var_110 = wp::address(var_x, var_109);
            var_112 = wp::load(var_110);
            var_111 = wp::copy(var_112);
            // ea1 = x[edgeVIndI[1]]                                                              <L 106>
            var_114 = wp::extract(var_103, var_113);
            var_115 = wp::address(var_x, var_114);
            var_117 = wp::load(var_115);
            var_116 = wp::copy(var_117);
            // eb0 = x[edgeVIndJ[0]]                                                              <L 107>
            var_119 = wp::extract(var_106, var_118);
            var_120 = wp::address(var_x, var_119);
            var_122 = wp::load(var_120);
            var_121 = wp::copy(var_122);
            // eb1 = x[edgeVIndJ[1]]                                                              <L 108>
            var_124 = wp::extract(var_106, var_123);
            var_125 = wp::address(var_x, var_124);
            var_127 = wp::load(var_125);
            var_126 = wp::copy(var_127);
            // dsq = edge_edge_distance(ea0, ea1, eb0, eb1) - xi * xi                             <L 109>
            var_128 = edge_edge_distance_0(var_111, var_116, var_121, var_126);
            var_129 = wp::mul(var_99, var_99);
            var_130 = wp::sub(var_128, var_129);
            // activeGap2 = dhat * dhat + wp.float64(2.0) * dhat * xi                             <L 110>
            var_131 = wp::mul(var_dhat, var_dhat);
            var_133 = wp::float64(var_132);
            var_134 = wp::mul(var_133, var_dhat);
            var_135 = wp::mul(var_134, var_99);
            var_136 = wp::add(var_131, var_135);
            // if dsq >= activeGap2 or (exclude_zero_friction and wp.max(mu_body[bodyI[idx]], mu_body[bodyJ[idx]]) == 0):       <L 111>
            var_137 = (var_130 >= var_136);
            var_138 = wp::address(var_bodyI, var_0);
            var_140 = wp::load(var_138);
            var_139 = wp::address(var_mu_body, var_140);
            var_141 = wp::address(var_bodyJ, var_0);
            var_143 = wp::load(var_141);
            var_142 = wp::address(var_mu_body, var_143);
            var_145 = wp::load(var_139);
            var_146 = wp::load(var_142);
            var_144 = wp::max(var_145, var_146);
            var_148 = (var_144 == var_147);
            var_149 = var_exclude_zero_friction && var_148;
            var_150 = var_137 || var_149;
            if (var_150) {
                // pass                                                                           <L 112>
            }
            if (!var_150) {
                // offset = wp.atomic_add(new_num_collisions, 0, 1)                               <L 114>
                // var_153 = wp::atomic_add(var_new_num_collisions, var_151, var_152);
                // new_bodyI[offset] = bodyI[idx]                                                 <L 115>
                var_154 = wp::address(var_bodyI, var_0);
                var_155 = wp::load(var_154);
                // wp::array_store(var_new_bodyI, var_153, var_155);
                // new_bodyJ[offset] = bodyJ[idx]                                                 <L 116>
                var_156 = wp::address(var_bodyJ, var_0);
                var_157 = wp::load(var_156);
                // wp::array_store(var_new_bodyJ, var_153, var_157);
                // new_nodeI[offset] = nodeI[idx]                                                 <L 117>
                var_158 = wp::address(var_nodeI, var_0);
                var_159 = wp::load(var_158);
                // wp::array_store(var_new_nodeI, var_153, var_159);
                // new_nodeJ[offset] = nodeJ[idx]                                                 <L 118>
                var_160 = wp::address(var_nodeJ, var_0);
                var_161 = wp::load(var_160);
                // wp::array_store(var_new_nodeJ, var_153, var_161);
                // new_collision_type[offset] = collision_type[idx]                               <L 119>
                var_162 = wp::address(var_collision_type, var_0);
                var_163 = wp::load(var_162);
                // wp::array_store(var_new_collision_type, var_153, var_163);
            }
            var_164 = wp::where(var_150, var_80, var_153);
        }
        var_165 = wp::where(var_9, var_31, var_99);
        var_166 = wp::where(var_9, var_60, var_136);
        var_167 = wp::where(var_9, var_63, var_130);
        var_168 = wp::where(var_9, var_80, var_164);
        //---------
        // reverse
        wp::adj_where(var_9, var_80, var_164, adj_9, adj_80, adj_164, adj_168);
        wp::adj_where(var_9, var_63, var_130, adj_9, adj_63, adj_130, adj_167);
        wp::adj_where(var_9, var_60, var_136, adj_9, adj_60, adj_136, adj_166);
        wp::adj_where(var_9, var_31, var_99, adj_9, adj_31, adj_99, adj_165);
        if (!var_9) {
            wp::adj_where(var_150, var_80, var_153, adj_150, adj_80, adj_153, adj_164);
            if (!var_150) {
                wp::adj_array_store(var_new_collision_type, var_153, var_163, adj_new_collision_type, adj_153, adj_162);
                wp::adj_load(var_162, adj_162, adj_163);
                wp::adj_address(var_collision_type, var_0, adj_collision_type, adj_0, adj_162);
                // adj: new_collision_type[offset] = collision_type[idx]                          <L 119>
                wp::adj_array_store(var_new_nodeJ, var_153, var_161, adj_new_nodeJ, adj_153, adj_160);
                wp::adj_load(var_160, adj_160, adj_161);
                wp::adj_address(var_nodeJ, var_0, adj_nodeJ, adj_0, adj_160);
                // adj: new_nodeJ[offset] = nodeJ[idx]                                            <L 118>
                wp::adj_array_store(var_new_nodeI, var_153, var_159, adj_new_nodeI, adj_153, adj_158);
                wp::adj_load(var_158, adj_158, adj_159);
                wp::adj_address(var_nodeI, var_0, adj_nodeI, adj_0, adj_158);
                // adj: new_nodeI[offset] = nodeI[idx]                                            <L 117>
                wp::adj_array_store(var_new_bodyJ, var_153, var_157, adj_new_bodyJ, adj_153, adj_156);
                wp::adj_load(var_156, adj_156, adj_157);
                wp::adj_address(var_bodyJ, var_0, adj_bodyJ, adj_0, adj_156);
                // adj: new_bodyJ[offset] = bodyJ[idx]                                            <L 116>
                wp::adj_array_store(var_new_bodyI, var_153, var_155, adj_new_bodyI, adj_153, adj_154);
                wp::adj_load(var_154, adj_154, adj_155);
                wp::adj_address(var_bodyI, var_0, adj_bodyI, adj_0, adj_154);
                // adj: new_bodyI[offset] = bodyI[idx]                                            <L 115>
                wp::adj_atomic_add(var_new_num_collisions, var_151, var_152, adj_new_num_collisions, adj_151, adj_152, adj_153);
                // adj: offset = wp.atomic_add(new_num_collisions, 0, 1)                          <L 114>
            }
            if (var_150) {
                // adj: pass                                                                      <L 112>
            }
            wp::adj_max(var_145, var_146, adj_139, adj_142, adj_144);
            wp::adj_load(var_142, adj_142, adj_146);
            wp::adj_load(var_139, adj_139, adj_145);
            wp::adj_address(var_mu_body, var_143, adj_mu_body, adj_141, adj_142);
            wp::adj_load(var_141, adj_141, adj_143);
            wp::adj_address(var_bodyJ, var_0, adj_bodyJ, adj_0, adj_141);
            wp::adj_address(var_mu_body, var_140, adj_mu_body, adj_138, adj_139);
            wp::adj_load(var_138, adj_138, adj_140);
            wp::adj_address(var_bodyI, var_0, adj_bodyI, adj_0, adj_138);
            // adj: if dsq >= activeGap2 or (exclude_zero_friction and wp.max(mu_body[bodyI[idx]], mu_body[bodyJ[idx]]) == 0):  <L 111>
            wp::adj_add(var_131, var_135, adj_131, adj_135, adj_136);
            wp::adj_mul(var_134, var_99, adj_134, adj_99, adj_135);
            wp::adj_mul(var_133, var_dhat, adj_133, adj_dhat, adj_134);
            wp::adj_float64(var_132, adj_132, adj_133);
            wp::adj_mul(var_dhat, var_dhat, adj_dhat, adj_dhat, adj_131);
            // adj: activeGap2 = dhat * dhat + wp.float64(2.0) * dhat * xi                        <L 110>
            wp::adj_sub(var_128, var_129, adj_128, adj_129, adj_130);
            wp::adj_mul(var_99, var_99, adj_99, adj_99, adj_129);
            adj_edge_edge_distance_0(var_111, var_116, var_121, var_126, adj_111, adj_116, adj_121, adj_126, adj_128);
            // adj: dsq = edge_edge_distance(ea0, ea1, eb0, eb1) - xi * xi                        <L 109>
            wp::adj_copy(var_127, adj_125, adj_126);
            wp::adj_load(var_125, adj_125, adj_127);
            wp::adj_address(var_x, var_124, adj_x, adj_124, adj_125);
            wp::adj_extract(var_106, var_123, adj_106, adj_123, adj_124);
            // adj: eb1 = x[edgeVIndJ[1]]                                                         <L 108>
            wp::adj_copy(var_122, adj_120, adj_121);
            wp::adj_load(var_120, adj_120, adj_122);
            wp::adj_address(var_x, var_119, adj_x, adj_119, adj_120);
            wp::adj_extract(var_106, var_118, adj_106, adj_118, adj_119);
            // adj: eb0 = x[edgeVIndJ[0]]                                                         <L 107>
            wp::adj_copy(var_117, adj_115, adj_116);
            wp::adj_load(var_115, adj_115, adj_117);
            wp::adj_address(var_x, var_114, adj_x, adj_114, adj_115);
            wp::adj_extract(var_103, var_113, adj_103, adj_113, adj_114);
            // adj: ea1 = x[edgeVIndI[1]]                                                         <L 106>
            wp::adj_copy(var_112, adj_110, adj_111);
            wp::adj_load(var_110, adj_110, adj_112);
            wp::adj_address(var_x, var_109, adj_x, adj_109, adj_110);
            wp::adj_extract(var_103, var_108, adj_103, adj_108, adj_109);
            // adj: ea0 = x[edgeVIndI[0]]                                                         <L 105>
            wp::adj_copy(var_107, adj_105, adj_106);
            wp::adj_load(var_105, adj_105, adj_107);
            wp::adj_address(var_edge, var_95, adj_edge, adj_95, adj_105);
            // adj: edgeVIndJ = edge[edgeJ]                                                       <L 104>
            wp::adj_copy(var_104, adj_102, adj_103);
            wp::adj_load(var_102, adj_102, adj_104);
            wp::adj_address(var_edge, var_92, adj_edge, adj_92, adj_102);
            // adj: edgeVIndI = edge[edgeI]                                                       <L 103>
            wp::adj_add(var_100, var_101, adj_97, adj_98, adj_99);
            wp::adj_load(var_98, adj_98, adj_101);
            wp::adj_load(var_97, adj_97, adj_100);
            wp::adj_address(var_edge_xi, var_95, adj_edge_xi, adj_95, adj_98);
            wp::adj_address(var_edge_xi, var_92, adj_edge_xi, adj_92, adj_97);
            // adj: xi = edge_xi[edgeI] + edge_xi[edgeJ]                                          <L 102>
            wp::adj_copy(var_96, adj_94, adj_95);
            wp::adj_load(var_94, adj_94, adj_96);
            wp::adj_address(var_nodeJ, var_0, adj_nodeJ, adj_0, adj_94);
            // adj: edgeJ = nodeJ[idx]                                                            <L 101>
            wp::adj_copy(var_93, adj_91, adj_92);
            wp::adj_load(var_91, adj_91, adj_93);
            wp::adj_address(var_nodeI, var_0, adj_nodeI, adj_0, adj_91);
            // adj: edgeI = nodeI[idx]                                                            <L 100>
        }
        if (var_9) {
            if (!var_77) {
                wp::adj_array_store(var_new_collision_type, var_80, var_90, adj_new_collision_type, adj_80, adj_89);
                wp::adj_load(var_89, adj_89, adj_90);
                wp::adj_address(var_collision_type, var_0, adj_collision_type, adj_0, adj_89);
                // adj: new_collision_type[offset] = collision_type[idx]                          <L 98>
                wp::adj_array_store(var_new_nodeJ, var_80, var_88, adj_new_nodeJ, adj_80, adj_87);
                wp::adj_load(var_87, adj_87, adj_88);
                wp::adj_address(var_nodeJ, var_0, adj_nodeJ, adj_0, adj_87);
                // adj: new_nodeJ[offset] = nodeJ[idx]                                            <L 97>
                wp::adj_array_store(var_new_nodeI, var_80, var_86, adj_new_nodeI, adj_80, adj_85);
                wp::adj_load(var_85, adj_85, adj_86);
                wp::adj_address(var_nodeI, var_0, adj_nodeI, adj_0, adj_85);
                // adj: new_nodeI[offset] = nodeI[idx]                                            <L 96>
                wp::adj_array_store(var_new_bodyJ, var_80, var_84, adj_new_bodyJ, adj_80, adj_83);
                wp::adj_load(var_83, adj_83, adj_84);
                wp::adj_address(var_bodyJ, var_0, adj_bodyJ, adj_0, adj_83);
                // adj: new_bodyJ[offset] = bodyJ[idx]                                            <L 95>
                wp::adj_array_store(var_new_bodyI, var_80, var_82, adj_new_bodyI, adj_80, adj_81);
                wp::adj_load(var_81, adj_81, adj_82);
                wp::adj_address(var_bodyI, var_0, adj_bodyI, adj_0, adj_81);
                // adj: new_bodyI[offset] = bodyI[idx]                                            <L 94>
                wp::adj_atomic_add(var_new_num_collisions, var_78, var_79, adj_new_num_collisions, adj_78, adj_79, adj_80);
                // adj: offset = wp.atomic_add(new_num_collisions, 0, 1)                          <L 93>
            }
            if (var_77) {
                // adj: pass                                                                      <L 91>
            }
            wp::adj_max(var_72, var_73, adj_66, adj_69, adj_71);
            wp::adj_load(var_69, adj_69, adj_73);
            wp::adj_load(var_66, adj_66, adj_72);
            wp::adj_address(var_mu_body, var_70, adj_mu_body, adj_68, adj_69);
            wp::adj_load(var_68, adj_68, adj_70);
            wp::adj_address(var_bodyJ, var_0, adj_bodyJ, adj_0, adj_68);
            wp::adj_address(var_mu_body, var_67, adj_mu_body, adj_65, adj_66);
            wp::adj_load(var_65, adj_65, adj_67);
            wp::adj_address(var_bodyI, var_0, adj_bodyI, adj_0, adj_65);
            // adj: if dsq >= activeGap2 or (exclude_zero_friction and wp.max(mu_body[bodyI[idx]], mu_body[bodyJ[idx]]) == 0):  <L 90>
            wp::adj_sub(var_61, var_62, adj_61, adj_62, adj_63);
            wp::adj_mul(var_31, var_31, adj_31, adj_31, adj_62);
            adj_point_triangle_distance_0(var_38, var_43, var_48, var_53, adj_38, adj_43, adj_48, adj_53, adj_61);
            // adj: dsq = point_triangle_distance(p, t0, t1, t2) - xi * xi                        <L 89>
            wp::adj_add(var_55, var_59, adj_55, adj_59, adj_60);
            wp::adj_mul(var_58, var_31, adj_58, adj_31, adj_59);
            wp::adj_mul(var_57, var_dhat, adj_57, adj_dhat, adj_58);
            wp::adj_float64(var_56, adj_56, adj_57);
            wp::adj_mul(var_dhat, var_dhat, adj_dhat, adj_dhat, adj_55);
            // adj: activeGap2 = dhat * dhat + np.float64(2.0) * dhat * xi                        <L 88>
            wp::adj_copy(var_54, adj_52, adj_53);
            wp::adj_load(var_52, adj_52, adj_54);
            wp::adj_address(var_x, var_51, adj_x, adj_51, adj_52);
            wp::adj_extract(var_27, var_50, adj_27, adj_50, adj_51);
            // adj: t2 = x[faceVInd[2]]                                                           <L 87>
            wp::adj_copy(var_49, adj_47, adj_48);
            wp::adj_load(var_47, adj_47, adj_49);
            wp::adj_address(var_x, var_46, adj_x, adj_46, adj_47);
            wp::adj_extract(var_27, var_45, adj_27, adj_45, adj_46);
            // adj: t1 = x[faceVInd[1]]                                                           <L 86>
            wp::adj_copy(var_44, adj_42, adj_43);
            wp::adj_load(var_42, adj_42, adj_44);
            wp::adj_address(var_x, var_41, adj_x, adj_41, adj_42);
            wp::adj_extract(var_27, var_40, adj_27, adj_40, adj_41);
            // adj: t0 = x[faceVInd[0]]                                                           <L 85>
            wp::adj_copy(var_39, adj_37, adj_38);
            wp::adj_load(var_37, adj_37, adj_39);
            wp::adj_address(var_x, var_35, adj_x, adj_35, adj_37);
            // adj: p = x[xI]                                                                     <L 84>
            wp::adj_copy(var_36, adj_34, adj_35);
            wp::adj_load(var_34, adj_34, adj_36);
            wp::adj_address(var_surf_vi, var_15, adj_surf_vi, adj_15, adj_34);
            // adj: xI = surf_vi[svi]                                                             <L 83>
            wp::adj_add(var_32, var_33, adj_29, adj_30, adj_31);
            wp::adj_load(var_30, adj_30, adj_33);
            wp::adj_load(var_29, adj_29, adj_32);
            wp::adj_address(var_face_xi, var_23, adj_face_xi, adj_23, adj_30);
            wp::adj_address(var_node_xi, var_15, adj_node_xi, adj_15, adj_29);
            // adj: xi = node_xi[svi] + face_xi[faceJ]                                            <L 82>
            wp::adj_copy(var_28, adj_26, adj_27);
            wp::adj_load(var_26, adj_26, adj_28);
            wp::adj_address(var_face, var_23, adj_face, adj_23, adj_26);
            // adj: faceVInd = face[faceJ]                                                        <L 81>
            wp::adj_select(var_19, var_24, var_25, adj_19, adj_21, adj_22, adj_23);
            wp::adj_load(var_22, adj_22, adj_25);
            wp::adj_load(var_21, adj_21, adj_24);
            wp::adj_address(var_nodeJ, var_0, adj_nodeJ, adj_0, adj_22);
            wp::adj_address(var_nodeI, var_0, adj_nodeI, adj_0, adj_21);
            wp::adj_load(var_18, adj_18, adj_20);
            wp::adj_address(var_collision_type, var_0, adj_collision_type, adj_0, adj_18);
            // adj: faceJ = wp.select(collision_type[idx] == POINT_TRIANGLE_PAIR, nodeI[idx], nodeJ[idx])  <L 80>
            wp::adj_select(var_11, var_16, var_17, adj_11, adj_13, adj_14, adj_15);
            wp::adj_load(var_14, adj_14, adj_17);
            wp::adj_load(var_13, adj_13, adj_16);
            wp::adj_address(var_nodeI, var_0, adj_nodeI, adj_0, adj_14);
            wp::adj_address(var_nodeJ, var_0, adj_nodeJ, adj_0, adj_13);
            wp::adj_load(var_10, adj_10, adj_12);
            wp::adj_address(var_collision_type, var_0, adj_collision_type, adj_0, adj_10);
            // adj: svi = wp.select(collision_type[idx] == POINT_TRIANGLE_PAIR, nodeJ[idx], nodeI[idx])  <L 79>
        }
        wp::adj_load(var_5, adj_5, adj_8);
        wp::adj_address(var_collision_type, var_0, adj_collision_type, adj_0, adj_5);
        wp::adj_load(var_1, adj_1, adj_4);
        wp::adj_address(var_collision_type, var_0, adj_collision_type, adj_0, adj_1);
        // adj: if collision_type[idx] == POINT_TRIANGLE_PAIR or collision_type[idx] == TRIANGLE_POINT_PAIR:  <L 78>
        // adj: idx = wp.tid()                                                                    <L 77>
        // adj: def prune_collisions(                                                             <L 54>
        continue;
    }
}



extern "C" __global__ void prune_hs_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::int32> var_new_num_hs_pair,
    wp::array_t<wp::int32> var_new_hs_node,
    wp::array_t<wp::int32> var_new_hs_body,
    wp::array_t<wp::int32> var_new_hs_ground,
    wp::array_t<wp::int32> var_hs_node,
    wp::array_t<wp::int32> var_hs_body,
    wp::array_t<wp::int32> var_hs_ground,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::int32> var_surf_vi,
    wp::array_t<wp::float64> var_node_xi,
    wp::array_t<wp::vec_t<3,wp::float64>> var_half_space_n,
    wp::array_t<wp::vec_t<3,wp::float64>> var_half_space_o,
    wp::array_t<wp::float64> var_half_space_mu,
    wp::float64 var_dhat,
    bool var_exclude_zero_friction)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        wp::int32 var_2;
        wp::int32 var_3;
        wp::int32* var_4;
        wp::int32 var_5;
        wp::int32 var_6;
        wp::int32* var_7;
        wp::int32 var_8;
        wp::int32 var_9;
        wp::vec_t<3,wp::float64>* var_10;
        wp::vec_t<3,wp::float64> var_11;
        wp::vec_t<3,wp::float64> var_12;
        wp::vec_t<3,wp::float64>* var_13;
        wp::vec_t<3,wp::float64> var_14;
        wp::vec_t<3,wp::float64> var_15;
        wp::vec_t<3,wp::float64>* var_16;
        wp::vec_t<3,wp::float64> var_17;
        wp::vec_t<3,wp::float64> var_18;
        wp::vec_t<3,wp::float64> var_19;
        wp::float64 var_20;
        wp::float64* var_21;
        wp::float64 var_22;
        wp::float64 var_23;
        bool var_24;
        wp::float64* var_25;
        const wp::int32 var_26 = 0;
        bool var_27;
        wp::float64 var_28;
        bool var_29;
        bool var_30;
        const wp::int32 var_31 = 0;
        const wp::int32 var_32 = 1;
        wp::int32 var_33;
        wp::int32* var_34;
        wp::int32 var_35;
        wp::int32* var_36;
        wp::int32 var_37;
        wp::int32* var_38;
        wp::int32 var_39;
        //---------
        // forward
        // def prune_hs(                                                                          <L 19>
        // idx = wp.tid()                                                                         <L 36>
        var_0 = builtin_tid1d();
        // svi = hs_node[idx]                                                                     <L 37>
        var_1 = wp::address(var_hs_node, var_0);
        var_3 = wp::load(var_1);
        var_2 = wp::copy(var_3);
        // xI = surf_vi[svi]                                                                      <L 38>
        var_4 = wp::address(var_surf_vi, var_2);
        var_6 = wp::load(var_4);
        var_5 = wp::copy(var_6);
        // hs = hs_ground[idx]                                                                    <L 39>
        var_7 = wp::address(var_hs_ground, var_0);
        var_9 = wp::load(var_7);
        var_8 = wp::copy(var_9);
        // n = half_space_n[hs]                                                                   <L 40>
        var_10 = wp::address(var_half_space_n, var_8);
        var_12 = wp::load(var_10);
        var_11 = wp::copy(var_12);
        // o = half_space_o[hs]                                                                   <L 41>
        var_13 = wp::address(var_half_space_o, var_8);
        var_15 = wp::load(var_13);
        var_14 = wp::copy(var_15);
        // xIcoord = x[xI]                                                                        <L 42>
        var_16 = wp::address(var_x, var_5);
        var_18 = wp::load(var_16);
        var_17 = wp::copy(var_18);
        // d = np.dot(xIcoord - o, n) - node_xi[svi]                                              <L 43>
        var_19 = wp::sub(var_17, var_14);
        var_20 = wp::dot(var_19, var_11);
        var_21 = wp::address(var_node_xi, var_2);
        var_23 = wp::load(var_21);
        var_22 = wp::sub(var_20, var_23);
        // if d > dhat or (exclude_zero_friction and half_space_mu[hs] == 0):                     <L 44>
        var_24 = (var_22 > var_dhat);
        var_25 = wp::address(var_half_space_mu, var_8);
        var_28 = wp::load(var_25);
        var_27 = (var_28 == var_26);
        var_29 = var_exclude_zero_friction && var_27;
        var_30 = var_24 || var_29;
        if (var_30) {
            // pass                                                                               <L 45>
        }
        if (!var_30) {
            // offset = wp.atomic_add(new_num_hs_pair, 0, 1)                                      <L 47>
            var_33 = wp::atomic_add(var_new_num_hs_pair, var_31, var_32);
            // new_hs_node[offset] = hs_node[idx]                                                 <L 48>
            var_34 = wp::address(var_hs_node, var_0);
            var_35 = wp::load(var_34);
            wp::array_store(var_new_hs_node, var_33, var_35);
            // new_hs_body[offset] = hs_body[idx]                                                 <L 49>
            var_36 = wp::address(var_hs_body, var_0);
            var_37 = wp::load(var_36);
            wp::array_store(var_new_hs_body, var_33, var_37);
            // new_hs_ground[offset] = hs_ground[idx]                                             <L 50>
            var_38 = wp::address(var_hs_ground, var_0);
            var_39 = wp::load(var_38);
            wp::array_store(var_new_hs_ground, var_33, var_39);
        }
    }
}



extern "C" __global__ void prune_hs_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::int32> var_new_num_hs_pair,
    wp::array_t<wp::int32> var_new_hs_node,
    wp::array_t<wp::int32> var_new_hs_body,
    wp::array_t<wp::int32> var_new_hs_ground,
    wp::array_t<wp::int32> var_hs_node,
    wp::array_t<wp::int32> var_hs_body,
    wp::array_t<wp::int32> var_hs_ground,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::int32> var_surf_vi,
    wp::array_t<wp::float64> var_node_xi,
    wp::array_t<wp::vec_t<3,wp::float64>> var_half_space_n,
    wp::array_t<wp::vec_t<3,wp::float64>> var_half_space_o,
    wp::array_t<wp::float64> var_half_space_mu,
    wp::float64 var_dhat,
    bool var_exclude_zero_friction,
    wp::array_t<wp::int32> adj_new_num_hs_pair,
    wp::array_t<wp::int32> adj_new_hs_node,
    wp::array_t<wp::int32> adj_new_hs_body,
    wp::array_t<wp::int32> adj_new_hs_ground,
    wp::array_t<wp::int32> adj_hs_node,
    wp::array_t<wp::int32> adj_hs_body,
    wp::array_t<wp::int32> adj_hs_ground,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_x,
    wp::array_t<wp::int32> adj_surf_vi,
    wp::array_t<wp::float64> adj_node_xi,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_half_space_n,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_half_space_o,
    wp::array_t<wp::float64> adj_half_space_mu,
    wp::float64 adj_dhat,
    bool adj_exclude_zero_friction)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        wp::int32 var_2;
        wp::int32 var_3;
        wp::int32* var_4;
        wp::int32 var_5;
        wp::int32 var_6;
        wp::int32* var_7;
        wp::int32 var_8;
        wp::int32 var_9;
        wp::vec_t<3,wp::float64>* var_10;
        wp::vec_t<3,wp::float64> var_11;
        wp::vec_t<3,wp::float64> var_12;
        wp::vec_t<3,wp::float64>* var_13;
        wp::vec_t<3,wp::float64> var_14;
        wp::vec_t<3,wp::float64> var_15;
        wp::vec_t<3,wp::float64>* var_16;
        wp::vec_t<3,wp::float64> var_17;
        wp::vec_t<3,wp::float64> var_18;
        wp::vec_t<3,wp::float64> var_19;
        wp::float64 var_20;
        wp::float64* var_21;
        wp::float64 var_22;
        wp::float64 var_23;
        bool var_24;
        wp::float64* var_25;
        const wp::int32 var_26 = 0;
        bool var_27;
        wp::float64 var_28;
        bool var_29;
        bool var_30;
        const wp::int32 var_31 = 0;
        const wp::int32 var_32 = 1;
        wp::int32 var_33;
        wp::int32* var_34;
        wp::int32 var_35;
        wp::int32* var_36;
        wp::int32 var_37;
        wp::int32* var_38;
        wp::int32 var_39;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        wp::int32 adj_3 = {};
        wp::int32 adj_4 = {};
        wp::int32 adj_5 = {};
        wp::int32 adj_6 = {};
        wp::int32 adj_7 = {};
        wp::int32 adj_8 = {};
        wp::int32 adj_9 = {};
        wp::vec_t<3,wp::float64> adj_10 = {};
        wp::vec_t<3,wp::float64> adj_11 = {};
        wp::vec_t<3,wp::float64> adj_12 = {};
        wp::vec_t<3,wp::float64> adj_13 = {};
        wp::vec_t<3,wp::float64> adj_14 = {};
        wp::vec_t<3,wp::float64> adj_15 = {};
        wp::vec_t<3,wp::float64> adj_16 = {};
        wp::vec_t<3,wp::float64> adj_17 = {};
        wp::vec_t<3,wp::float64> adj_18 = {};
        wp::vec_t<3,wp::float64> adj_19 = {};
        wp::float64 adj_20 = {};
        wp::float64 adj_21 = {};
        wp::float64 adj_22 = {};
        wp::float64 adj_23 = {};
        bool adj_24 = {};
        wp::float64 adj_25 = {};
        wp::int32 adj_26 = {};
        bool adj_27 = {};
        wp::float64 adj_28 = {};
        bool adj_29 = {};
        bool adj_30 = {};
        wp::int32 adj_31 = {};
        wp::int32 adj_32 = {};
        wp::int32 adj_33 = {};
        wp::int32 adj_34 = {};
        wp::int32 adj_35 = {};
        wp::int32 adj_36 = {};
        wp::int32 adj_37 = {};
        wp::int32 adj_38 = {};
        wp::int32 adj_39 = {};
        //---------
        // forward
        // def prune_hs(                                                                          <L 19>
        // idx = wp.tid()                                                                         <L 36>
        var_0 = builtin_tid1d();
        // svi = hs_node[idx]                                                                     <L 37>
        var_1 = wp::address(var_hs_node, var_0);
        var_3 = wp::load(var_1);
        var_2 = wp::copy(var_3);
        // xI = surf_vi[svi]                                                                      <L 38>
        var_4 = wp::address(var_surf_vi, var_2);
        var_6 = wp::load(var_4);
        var_5 = wp::copy(var_6);
        // hs = hs_ground[idx]                                                                    <L 39>
        var_7 = wp::address(var_hs_ground, var_0);
        var_9 = wp::load(var_7);
        var_8 = wp::copy(var_9);
        // n = half_space_n[hs]                                                                   <L 40>
        var_10 = wp::address(var_half_space_n, var_8);
        var_12 = wp::load(var_10);
        var_11 = wp::copy(var_12);
        // o = half_space_o[hs]                                                                   <L 41>
        var_13 = wp::address(var_half_space_o, var_8);
        var_15 = wp::load(var_13);
        var_14 = wp::copy(var_15);
        // xIcoord = x[xI]                                                                        <L 42>
        var_16 = wp::address(var_x, var_5);
        var_18 = wp::load(var_16);
        var_17 = wp::copy(var_18);
        // d = np.dot(xIcoord - o, n) - node_xi[svi]                                              <L 43>
        var_19 = wp::sub(var_17, var_14);
        var_20 = wp::dot(var_19, var_11);
        var_21 = wp::address(var_node_xi, var_2);
        var_23 = wp::load(var_21);
        var_22 = wp::sub(var_20, var_23);
        // if d > dhat or (exclude_zero_friction and half_space_mu[hs] == 0):                     <L 44>
        var_24 = (var_22 > var_dhat);
        var_25 = wp::address(var_half_space_mu, var_8);
        var_28 = wp::load(var_25);
        var_27 = (var_28 == var_26);
        var_29 = var_exclude_zero_friction && var_27;
        var_30 = var_24 || var_29;
        if (var_30) {
            // pass                                                                               <L 45>
        }
        if (!var_30) {
            // offset = wp.atomic_add(new_num_hs_pair, 0, 1)                                      <L 47>
            // var_33 = wp::atomic_add(var_new_num_hs_pair, var_31, var_32);
            // new_hs_node[offset] = hs_node[idx]                                                 <L 48>
            var_34 = wp::address(var_hs_node, var_0);
            var_35 = wp::load(var_34);
            // wp::array_store(var_new_hs_node, var_33, var_35);
            // new_hs_body[offset] = hs_body[idx]                                                 <L 49>
            var_36 = wp::address(var_hs_body, var_0);
            var_37 = wp::load(var_36);
            // wp::array_store(var_new_hs_body, var_33, var_37);
            // new_hs_ground[offset] = hs_ground[idx]                                             <L 50>
            var_38 = wp::address(var_hs_ground, var_0);
            var_39 = wp::load(var_38);
            // wp::array_store(var_new_hs_ground, var_33, var_39);
        }
        //---------
        // reverse
        if (!var_30) {
            wp::adj_array_store(var_new_hs_ground, var_33, var_39, adj_new_hs_ground, adj_33, adj_38);
            wp::adj_load(var_38, adj_38, adj_39);
            wp::adj_address(var_hs_ground, var_0, adj_hs_ground, adj_0, adj_38);
            // adj: new_hs_ground[offset] = hs_ground[idx]                                        <L 50>
            wp::adj_array_store(var_new_hs_body, var_33, var_37, adj_new_hs_body, adj_33, adj_36);
            wp::adj_load(var_36, adj_36, adj_37);
            wp::adj_address(var_hs_body, var_0, adj_hs_body, adj_0, adj_36);
            // adj: new_hs_body[offset] = hs_body[idx]                                            <L 49>
            wp::adj_array_store(var_new_hs_node, var_33, var_35, adj_new_hs_node, adj_33, adj_34);
            wp::adj_load(var_34, adj_34, adj_35);
            wp::adj_address(var_hs_node, var_0, adj_hs_node, adj_0, adj_34);
            // adj: new_hs_node[offset] = hs_node[idx]                                            <L 48>
            wp::adj_atomic_add(var_new_num_hs_pair, var_31, var_32, adj_new_num_hs_pair, adj_31, adj_32, adj_33);
            // adj: offset = wp.atomic_add(new_num_hs_pair, 0, 1)                                 <L 47>
        }
        if (var_30) {
            // adj: pass                                                                          <L 45>
        }
        wp::adj_load(var_25, adj_25, adj_28);
        wp::adj_address(var_half_space_mu, var_8, adj_half_space_mu, adj_8, adj_25);
        // adj: if d > dhat or (exclude_zero_friction and half_space_mu[hs] == 0):                <L 44>
        wp::adj_sub(var_20, var_23, adj_20, adj_21, adj_22);
        wp::adj_load(var_21, adj_21, adj_23);
        wp::adj_address(var_node_xi, var_2, adj_node_xi, adj_2, adj_21);
        wp::adj_dot(var_19, var_11, adj_19, adj_11, adj_20);
        wp::adj_sub(var_17, var_14, adj_17, adj_14, adj_19);
        // adj: d = np.dot(xIcoord - o, n) - node_xi[svi]                                         <L 43>
        wp::adj_copy(var_18, adj_16, adj_17);
        wp::adj_load(var_16, adj_16, adj_18);
        wp::adj_address(var_x, var_5, adj_x, adj_5, adj_16);
        // adj: xIcoord = x[xI]                                                                   <L 42>
        wp::adj_copy(var_15, adj_13, adj_14);
        wp::adj_load(var_13, adj_13, adj_15);
        wp::adj_address(var_half_space_o, var_8, adj_half_space_o, adj_8, adj_13);
        // adj: o = half_space_o[hs]                                                              <L 41>
        wp::adj_copy(var_12, adj_10, adj_11);
        wp::adj_load(var_10, adj_10, adj_12);
        wp::adj_address(var_half_space_n, var_8, adj_half_space_n, adj_8, adj_10);
        // adj: n = half_space_n[hs]                                                              <L 40>
        wp::adj_copy(var_9, adj_7, adj_8);
        wp::adj_load(var_7, adj_7, adj_9);
        wp::adj_address(var_hs_ground, var_0, adj_hs_ground, adj_0, adj_7);
        // adj: hs = hs_ground[idx]                                                               <L 39>
        wp::adj_copy(var_6, adj_4, adj_5);
        wp::adj_load(var_4, adj_4, adj_6);
        wp::adj_address(var_surf_vi, var_2, adj_surf_vi, adj_2, adj_4);
        // adj: xI = surf_vi[svi]                                                                 <L 38>
        wp::adj_copy(var_3, adj_1, adj_2);
        wp::adj_load(var_1, adj_1, adj_3);
        wp::adj_address(var_hs_node, var_0, adj_hs_node, adj_0, adj_1);
        // adj: svi = hs_node[idx]                                                                <L 37>
        // adj: idx = wp.tid()                                                                    <L 36>
        // adj: def prune_hs(                                                                     <L 19>
        continue;
    }
}



extern "C" __global__ void bvh_query_aabb_PT_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::int32> var_num_collisions,
    wp::array_t<wp::int32> var_PT_count,
    wp::array_t<wp::int32> var_nodeI,
    wp::array_t<wp::int32> var_nodeJ,
    wp::array_t<wp::int32> var_bodyI,
    wp::array_t<wp::int32> var_bodyJ,
    wp::array_t<wp::int32> var_collision_type,
    wp::uint64 var_PT_bvh_id,
    wp::array_t<wp::vec_t<3,wp::float32>> var_nodeBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> var_nodeBB_upper,
    wp::array_t<wp::vec_t<3,wp::int32>> var_face,
    wp::array_t<wp::int32> var_face2body,
    wp::array_t<wp::int32> var_node2body,
    wp::array_t<wp::int32> var_surf_vi,
    wp::array_t<wp::int32> var_body_enable_self_collision,
    wp::array_t<wp::int32> var_body_env_id,
    wp::array_t<wp::int32> var_env_states,
    wp::array_t<wp::int64> var_body_collision_layer,
    wp::array_t<wp::int64> var_collision_layer_filter,
    wp::array_t<wp::int32> var_stitch_map,
    wp::array_t<wp::int32> var_num_stitch_per_x,
    wp::int32 var_max_collision,
    wp::array_t<wp::int32> var_explode)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        const wp::int32 var_0 = 0;
        wp::int32* var_1;
        wp::int32 var_2;
        wp::int32 var_3;
        wp::int32 var_4;
        wp::int32* var_5;
        wp::int32 var_6;
        wp::int32 var_7;
        wp::int32* var_8;
        wp::int32 var_9;
        wp::int32 var_10;
        wp::int32* var_11;
        wp::int32 var_12;
        wp::int32 var_13;
        wp::int32* var_14;
        const wp::int32 var_15 = 1;
        bool var_16;
        wp::int32 var_17;
        wp::int32* var_18;
        const wp::int32 var_19 = 2;
        bool var_20;
        wp::int32 var_21;
        bool var_22;
        wp::vec_t<3,wp::float32>* var_23;
        wp::vec_t<3,wp::float32>* var_24;
        wp::bvh_query_t var_25;
        wp::vec_t<3,wp::float32> var_26;
        wp::vec_t<3,wp::float32> var_27;
        const wp::int32 var_28 = 0;
        wp::int32 var_29;
        wp::int64* var_30;
        wp::int64 var_31;
        wp::int64 var_32;
        wp::int32 var_33;
        wp::int64* var_34;
        wp::int64 var_35;
        wp::int64 var_36;
        wp::int32* var_37;
        wp::int32 var_38;
        wp::int32 var_39;
        bool var_40;
        const bool var_41 = true;
        bool var_42;
        wp::vec_t<3,wp::int32>* var_43;
        bool var_44;
        wp::vec_t<3,wp::int32> var_45;
        const bool var_46 = false;
        bool var_47;
        bool var_48;
        wp::int32* var_49;
        wp::range_t var_50;
        wp::int32 var_51;
        wp::int32 var_52;
        wp::vec_t<3,wp::int32>* var_53;
        wp::int32* var_54;
        bool var_55;
        wp::vec_t<3,wp::int32> var_56;
        wp::int32 var_57;
        const bool var_58 = false;
        bool var_59;
        bool var_60;
        wp::int32* var_61;
        wp::int32 var_62;
        wp::int32 var_63;
        wp::int64* var_64;
        wp::int64 var_65;
        wp::int64 var_66;
        wp::int32* var_67;
        wp::int32 var_68;
        wp::int32 var_69;
        bool var_70;
        wp::int64 var_71;
        const wp::int32 var_72 = 2;
        wp::int64 var_73;
        wp::int64 var_74;
        const wp::int32 var_75 = 1;
        wp::int64 var_76;
        bool var_77;
        bool var_78;
        bool var_79;
        bool var_80;
        const wp::int32 var_81 = 0;
        const wp::int32 var_82 = 1;
        wp::int32 var_83;
        const wp::int32 var_84 = 1;
        wp::int32 var_85;
        bool var_86;
        const wp::int32 var_87 = 0;
        const wp::int32 var_88 = 1;
        wp::int32 var_89;
        const wp::int32 var_90 = 0;
        const wp::int32 var_91 = 1;
        wp::int32 var_92;
        wp::int32* var_93;
        bool var_94;
        wp::int32 var_95;
        wp::int32* var_96;
        wp::int32 var_97;
        const wp::int32 var_98 = 0;
        wp::int32* var_99;
        wp::int32 var_100;
        const wp::int32 var_101 = 1;
        //---------
        // forward
        // def bvh_query_aabb_PT(                                                                 <L 605>
        // if explode[0]:                                                                         <L 630>
        var_1 = wp::address(var_explode, var_0);
        var_2 = wp::load(var_1);
        if (var_2) {
            // return                                                                             <L 631>
            continue;
        }
        var_3 = wp::load(var_1);
        // svi = wp.tid()                                                                         <L 632>
        var_4 = builtin_tid1d();
        // vi = surf_vi[svi]                                                                      <L 633>
        var_5 = wp::address(var_surf_vi, var_4);
        var_7 = wp::load(var_5);
        var_6 = wp::copy(var_7);
        // body_p = node2body[vi]                                                                 <L 634>
        var_8 = wp::address(var_node2body, var_6);
        var_10 = wp::load(var_8);
        var_9 = wp::copy(var_10);
        // env_p = body_env_id[body_p]                                                            <L 635>
        var_11 = wp::address(var_body_env_id, var_9);
        var_13 = wp::load(var_11);
        var_12 = wp::copy(var_13);
        // if (env_states[env_p] == ENV_STATE_INVALID) or (env_states[env_p] == ENV_STATE_NEWTON_SOLVED):       <L 636>
        var_14 = wp::address(var_env_states, var_12);
        var_17 = wp::load(var_14);
        var_16 = (var_17 == var_15);
        var_18 = wp::address(var_env_states, var_12);
        var_21 = wp::load(var_18);
        var_20 = (var_21 == var_19);
        var_22 = var_16 || var_20;
        if (var_22) {
            // return                                                                             <L 637>
            continue;
        }
        // query = wp.bvh_query_aabb(PT_bvh_id, nodeBB_lower[svi], nodeBB_upper[svi])             <L 638>
        var_23 = wp::address(var_nodeBB_lower, var_4);
        var_24 = wp::address(var_nodeBB_upper, var_4);
        var_26 = wp::load(var_23);
        var_27 = wp::load(var_24);
        var_25 = wp::bvh_query_aabb(var_PT_bvh_id, var_26, var_27);
        // bounds_nr = wp.int32(0)                                                                <L 639>
        var_29 = wp::int32(var_28);
        // layer_p = body_collision_layer[body_p]                                                 <L 640>
        var_30 = wp::address(var_body_collision_layer, var_9);
        var_32 = wp::load(var_30);
        var_31 = wp::copy(var_32);
        // filter_p = collision_layer_filter[wp.int32(layer_p)]                                   <L 641>
        var_33 = wp::int32(var_31);
        var_34 = wp::address(var_collision_layer_filter, var_33);
        var_36 = wp::load(var_34);
        var_35 = wp::copy(var_36);
        // include_self = body_enable_self_collision[body_p]                                      <L 642>
        var_37 = wp::address(var_body_enable_self_collision, var_9);
        var_39 = wp::load(var_37);
        var_38 = wp::copy(var_39);
        // while wp.bvh_query_next(query, bounds_nr):                                             <L 644>
        start_while_2:;
        var_40 = wp::bvh_query_next(var_25, var_29);
        if ((var_40) == false) goto end_while_2;
            // valid = wp.bool(True)                                                              <L 645>
            var_42 = bool(var_41);
            // if subset3(face[bounds_nr], vi):                                                   <L 646>
            var_43 = wp::address(var_face, var_29);
            var_45 = wp::load(var_43);
            var_44 = subset3_0(var_45, var_6);
            if (var_44) {
                // valid = wp.bool(False)                                                         <L 647>
                var_47 = bool(var_46);
            }
            var_48 = wp::where(var_44, var_47, var_42);
            // for i in range(num_stitch_per_x[vi]):                                              <L 648>
            var_49 = wp::address(var_num_stitch_per_x, var_6);
            var_51 = wp::load(var_49);
            var_50 = wp::range(var_51);
            start_for_4:;
                if (iter_cmp(var_50) == 0) goto end_for_4;
                var_52 = wp::iter_next(var_50);
                // if subset3(face[bounds_nr], stitch_map[vi, i]):                                <L 649>
                var_53 = wp::address(var_face, var_29);
                var_54 = wp::address(var_stitch_map, var_6, var_52);
                var_56 = wp::load(var_53);
                var_57 = wp::load(var_54);
                var_55 = subset3_0(var_56, var_57);
                if (var_55) {
                    // valid = wp.bool(False)                                                     <L 650>
                    var_59 = bool(var_58);
                }
                var_60 = wp::where(var_55, var_59, var_48);
                wp::assign(var_48, var_60);
                goto start_for_4;
            end_for_4:;
            // if valid:                                                                          <L 651>
            if (var_48) {
                // body_t = face2body[bounds_nr]                                                  <L 652>
                var_61 = wp::address(var_face2body, var_29);
                var_63 = wp::load(var_61);
                var_62 = wp::copy(var_63);
                // layer_t = body_collision_layer[body_t]                                         <L 653>
                var_64 = wp::address(var_body_collision_layer, var_62);
                var_66 = wp::load(var_64);
                var_65 = wp::copy(var_66);
                // env_t = body_env_id[body_t]                                                    <L 654>
                var_67 = wp::address(var_body_env_id, var_62);
                var_69 = wp::load(var_67);
                var_68 = wp::copy(var_69);
                // pass_env_filter = env_p == env_t                                               <L 655>
                var_70 = (var_12 == var_68);
                // pass_collision_filter = (filter_p >> layer_t) % wp.int64(2) == wp.int64(1)       <L 656>
                var_71 = wp::rshift(var_35, var_65);
                var_73 = wp::int64(var_72);
                var_74 = wp::mod(var_71, var_73);
                var_76 = wp::int64(var_75);
                var_77 = (var_74 == var_76);
                // if (include_self or (body_t != body_p)) and pass_collision_filter and pass_env_filter:       <L 657>
                var_78 = (var_62 != var_9);
                var_79 = var_38 || var_78;
                var_80 = var_79 && var_77 && var_70;
                if (var_80) {
                    // offset = wp.atomic_add(num_collisions, 0, 1)                               <L 658>
                    var_83 = wp::atomic_add(var_num_collisions, var_81, var_82);
                    // if offset >= max_collision - 1:                                            <L 659>
                    var_85 = wp::sub(var_max_collision, var_84);
                    var_86 = (var_83 >= var_85);
                    if (var_86) {
                        // wp.atomic_max(explode, 0, 1)                                           <L 660>
                        var_89 = wp::atomic_max(var_explode, var_87, var_88);
                        // return                                                                 <L 661>
                        continue;
                    }
                    // wp.atomic_add(PT_count, 0, 1)                                              <L 662>
                    var_92 = wp::atomic_add(var_PT_count, var_90, var_91);
                    // if face2body[bounds_nr] < body_p:                                          <L 663>
                    var_93 = wp::address(var_face2body, var_29);
                    var_95 = wp::load(var_93);
                    var_94 = (var_95 < var_9);
                    if (var_94) {
                        // nodeI[offset] = bounds_nr                                              <L 664>
                        wp::array_store(var_nodeI, var_83, var_29);
                        // bodyI[offset] = face2body[bounds_nr]                                   <L 665>
                        var_96 = wp::address(var_face2body, var_29);
                        var_97 = wp::load(var_96);
                        wp::array_store(var_bodyI, var_83, var_97);
                        // nodeJ[offset] = svi                                                    <L 666>
                        wp::array_store(var_nodeJ, var_83, var_4);
                        // bodyJ[offset] = body_p                                                 <L 667>
                        wp::array_store(var_bodyJ, var_83, var_9);
                        // collision_type[offset] = TRIANGLE_POINT_PAIR                           <L 668>
                        wp::array_store(var_collision_type, var_83, var_98);
                    }
                    if (!var_94) {
                        // nodeI[offset] = svi                                                    <L 670>
                        wp::array_store(var_nodeI, var_83, var_4);
                        // bodyI[offset] = body_p                                                 <L 671>
                        wp::array_store(var_bodyI, var_83, var_9);
                        // nodeJ[offset] = bounds_nr                                              <L 672>
                        wp::array_store(var_nodeJ, var_83, var_29);
                        // bodyJ[offset] = face2body[bounds_nr]                                   <L 673>
                        var_99 = wp::address(var_face2body, var_29);
                        var_100 = wp::load(var_99);
                        wp::array_store(var_bodyJ, var_83, var_100);
                        // collision_type[offset] = POINT_TRIANGLE_PAIR                           <L 674>
                        wp::array_store(var_collision_type, var_83, var_101);
                    }
                }
            }
        goto start_while_2;
        end_while_2:;
    }
}



extern "C" __global__ void bvh_query_aabb_PT_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::int32> var_num_collisions,
    wp::array_t<wp::int32> var_PT_count,
    wp::array_t<wp::int32> var_nodeI,
    wp::array_t<wp::int32> var_nodeJ,
    wp::array_t<wp::int32> var_bodyI,
    wp::array_t<wp::int32> var_bodyJ,
    wp::array_t<wp::int32> var_collision_type,
    wp::uint64 var_PT_bvh_id,
    wp::array_t<wp::vec_t<3,wp::float32>> var_nodeBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> var_nodeBB_upper,
    wp::array_t<wp::vec_t<3,wp::int32>> var_face,
    wp::array_t<wp::int32> var_face2body,
    wp::array_t<wp::int32> var_node2body,
    wp::array_t<wp::int32> var_surf_vi,
    wp::array_t<wp::int32> var_body_enable_self_collision,
    wp::array_t<wp::int32> var_body_env_id,
    wp::array_t<wp::int32> var_env_states,
    wp::array_t<wp::int64> var_body_collision_layer,
    wp::array_t<wp::int64> var_collision_layer_filter,
    wp::array_t<wp::int32> var_stitch_map,
    wp::array_t<wp::int32> var_num_stitch_per_x,
    wp::int32 var_max_collision,
    wp::array_t<wp::int32> var_explode,
    wp::array_t<wp::int32> adj_num_collisions,
    wp::array_t<wp::int32> adj_PT_count,
    wp::array_t<wp::int32> adj_nodeI,
    wp::array_t<wp::int32> adj_nodeJ,
    wp::array_t<wp::int32> adj_bodyI,
    wp::array_t<wp::int32> adj_bodyJ,
    wp::array_t<wp::int32> adj_collision_type,
    wp::uint64 adj_PT_bvh_id,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_nodeBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_nodeBB_upper,
    wp::array_t<wp::vec_t<3,wp::int32>> adj_face,
    wp::array_t<wp::int32> adj_face2body,
    wp::array_t<wp::int32> adj_node2body,
    wp::array_t<wp::int32> adj_surf_vi,
    wp::array_t<wp::int32> adj_body_enable_self_collision,
    wp::array_t<wp::int32> adj_body_env_id,
    wp::array_t<wp::int32> adj_env_states,
    wp::array_t<wp::int64> adj_body_collision_layer,
    wp::array_t<wp::int64> adj_collision_layer_filter,
    wp::array_t<wp::int32> adj_stitch_map,
    wp::array_t<wp::int32> adj_num_stitch_per_x,
    wp::int32 adj_max_collision,
    wp::array_t<wp::int32> adj_explode)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        const wp::int32 var_0 = 0;
        wp::int32* var_1;
        wp::int32 var_2;
        wp::int32 var_3;
        wp::int32 var_4;
        wp::int32* var_5;
        wp::int32 var_6;
        wp::int32 var_7;
        wp::int32* var_8;
        wp::int32 var_9;
        wp::int32 var_10;
        wp::int32* var_11;
        wp::int32 var_12;
        wp::int32 var_13;
        wp::int32* var_14;
        const wp::int32 var_15 = 1;
        bool var_16;
        wp::int32 var_17;
        wp::int32* var_18;
        const wp::int32 var_19 = 2;
        bool var_20;
        wp::int32 var_21;
        bool var_22;
        wp::vec_t<3,wp::float32>* var_23;
        wp::vec_t<3,wp::float32>* var_24;
        wp::bvh_query_t var_25;
        wp::vec_t<3,wp::float32> var_26;
        wp::vec_t<3,wp::float32> var_27;
        const wp::int32 var_28 = 0;
        wp::int32 var_29;
        wp::int64* var_30;
        wp::int64 var_31;
        wp::int64 var_32;
        wp::int32 var_33;
        wp::int64* var_34;
        wp::int64 var_35;
        wp::int64 var_36;
        wp::int32* var_37;
        wp::int32 var_38;
        wp::int32 var_39;
        bool var_40;
        const bool var_41 = true;
        bool var_42;
        wp::vec_t<3,wp::int32>* var_43;
        bool var_44;
        wp::vec_t<3,wp::int32> var_45;
        const bool var_46 = false;
        bool var_47;
        bool var_48;
        wp::int32* var_49;
        wp::range_t var_50;
        wp::int32 var_51;
        wp::int32 var_52;
        wp::vec_t<3,wp::int32>* var_53;
        wp::int32* var_54;
        bool var_55;
        wp::vec_t<3,wp::int32> var_56;
        wp::int32 var_57;
        const bool var_58 = false;
        bool var_59;
        bool var_60;
        wp::int32* var_61;
        wp::int32 var_62;
        wp::int32 var_63;
        wp::int64* var_64;
        wp::int64 var_65;
        wp::int64 var_66;
        wp::int32* var_67;
        wp::int32 var_68;
        wp::int32 var_69;
        bool var_70;
        wp::int64 var_71;
        const wp::int32 var_72 = 2;
        wp::int64 var_73;
        wp::int64 var_74;
        const wp::int32 var_75 = 1;
        wp::int64 var_76;
        bool var_77;
        bool var_78;
        bool var_79;
        bool var_80;
        const wp::int32 var_81 = 0;
        const wp::int32 var_82 = 1;
        wp::int32 var_83;
        const wp::int32 var_84 = 1;
        wp::int32 var_85;
        bool var_86;
        const wp::int32 var_87 = 0;
        const wp::int32 var_88 = 1;
        wp::int32 var_89;
        const wp::int32 var_90 = 0;
        const wp::int32 var_91 = 1;
        wp::int32 var_92;
        wp::int32* var_93;
        bool var_94;
        wp::int32 var_95;
        wp::int32* var_96;
        wp::int32 var_97;
        const wp::int32 var_98 = 0;
        wp::int32* var_99;
        wp::int32 var_100;
        const wp::int32 var_101 = 1;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        wp::int32 adj_3 = {};
        wp::int32 adj_4 = {};
        wp::int32 adj_5 = {};
        wp::int32 adj_6 = {};
        wp::int32 adj_7 = {};
        wp::int32 adj_8 = {};
        wp::int32 adj_9 = {};
        wp::int32 adj_10 = {};
        wp::int32 adj_11 = {};
        wp::int32 adj_12 = {};
        wp::int32 adj_13 = {};
        wp::int32 adj_14 = {};
        wp::int32 adj_15 = {};
        bool adj_16 = {};
        wp::int32 adj_17 = {};
        wp::int32 adj_18 = {};
        wp::int32 adj_19 = {};
        bool adj_20 = {};
        wp::int32 adj_21 = {};
        bool adj_22 = {};
        wp::vec_t<3,wp::float32> adj_23 = {};
        wp::vec_t<3,wp::float32> adj_24 = {};
        wp::bvh_query_t adj_25 = {};
        wp::vec_t<3,wp::float32> adj_26 = {};
        wp::vec_t<3,wp::float32> adj_27 = {};
        wp::int32 adj_28 = {};
        wp::int32 adj_29 = {};
        wp::int64 adj_30 = {};
        wp::int64 adj_31 = {};
        wp::int64 adj_32 = {};
        wp::int32 adj_33 = {};
        wp::int64 adj_34 = {};
        wp::int64 adj_35 = {};
        wp::int64 adj_36 = {};
        wp::int32 adj_37 = {};
        wp::int32 adj_38 = {};
        wp::int32 adj_39 = {};
        bool adj_40 = {};
        bool adj_41 = {};
        bool adj_42 = {};
        wp::vec_t<3,wp::int32> adj_43 = {};
        bool adj_44 = {};
        wp::vec_t<3,wp::int32> adj_45 = {};
        bool adj_46 = {};
        bool adj_47 = {};
        bool adj_48 = {};
        wp::int32 adj_49 = {};
        wp::range_t adj_50 = {};
        wp::int32 adj_51 = {};
        wp::int32 adj_52 = {};
        wp::vec_t<3,wp::int32> adj_53 = {};
        wp::int32 adj_54 = {};
        bool adj_55 = {};
        wp::vec_t<3,wp::int32> adj_56 = {};
        wp::int32 adj_57 = {};
        bool adj_58 = {};
        bool adj_59 = {};
        bool adj_60 = {};
        wp::int32 adj_61 = {};
        wp::int32 adj_62 = {};
        wp::int32 adj_63 = {};
        wp::int64 adj_64 = {};
        wp::int64 adj_65 = {};
        wp::int64 adj_66 = {};
        wp::int32 adj_67 = {};
        wp::int32 adj_68 = {};
        wp::int32 adj_69 = {};
        bool adj_70 = {};
        wp::int64 adj_71 = {};
        wp::int32 adj_72 = {};
        wp::int64 adj_73 = {};
        wp::int64 adj_74 = {};
        wp::int32 adj_75 = {};
        wp::int64 adj_76 = {};
        bool adj_77 = {};
        bool adj_78 = {};
        bool adj_79 = {};
        bool adj_80 = {};
        wp::int32 adj_81 = {};
        wp::int32 adj_82 = {};
        wp::int32 adj_83 = {};
        wp::int32 adj_84 = {};
        wp::int32 adj_85 = {};
        bool adj_86 = {};
        wp::int32 adj_87 = {};
        wp::int32 adj_88 = {};
        wp::int32 adj_89 = {};
        wp::int32 adj_90 = {};
        wp::int32 adj_91 = {};
        wp::int32 adj_92 = {};
        wp::int32 adj_93 = {};
        bool adj_94 = {};
        wp::int32 adj_95 = {};
        wp::int32 adj_96 = {};
        wp::int32 adj_97 = {};
        wp::int32 adj_98 = {};
        wp::int32 adj_99 = {};
        wp::int32 adj_100 = {};
        wp::int32 adj_101 = {};
        //---------
        // forward
        // def bvh_query_aabb_PT(                                                                 <L 605>
        // if explode[0]:                                                                         <L 630>
        var_1 = wp::address(var_explode, var_0);
        var_2 = wp::load(var_1);
        if (var_2) {
            // return                                                                             <L 631>
            goto label0;
        }
        var_3 = wp::load(var_1);
        // svi = wp.tid()                                                                         <L 632>
        var_4 = builtin_tid1d();
        // vi = surf_vi[svi]                                                                      <L 633>
        var_5 = wp::address(var_surf_vi, var_4);
        var_7 = wp::load(var_5);
        var_6 = wp::copy(var_7);
        // body_p = node2body[vi]                                                                 <L 634>
        var_8 = wp::address(var_node2body, var_6);
        var_10 = wp::load(var_8);
        var_9 = wp::copy(var_10);
        // env_p = body_env_id[body_p]                                                            <L 635>
        var_11 = wp::address(var_body_env_id, var_9);
        var_13 = wp::load(var_11);
        var_12 = wp::copy(var_13);
        // if (env_states[env_p] == ENV_STATE_INVALID) or (env_states[env_p] == ENV_STATE_NEWTON_SOLVED):       <L 636>
        var_14 = wp::address(var_env_states, var_12);
        var_17 = wp::load(var_14);
        var_16 = (var_17 == var_15);
        var_18 = wp::address(var_env_states, var_12);
        var_21 = wp::load(var_18);
        var_20 = (var_21 == var_19);
        var_22 = var_16 || var_20;
        if (var_22) {
            // return                                                                             <L 637>
            goto label1;
        }
        // query = wp.bvh_query_aabb(PT_bvh_id, nodeBB_lower[svi], nodeBB_upper[svi])             <L 638>
        var_23 = wp::address(var_nodeBB_lower, var_4);
        var_24 = wp::address(var_nodeBB_upper, var_4);
        var_26 = wp::load(var_23);
        var_27 = wp::load(var_24);
        var_25 = wp::bvh_query_aabb(var_PT_bvh_id, var_26, var_27);
        // bounds_nr = wp.int32(0)                                                                <L 639>
        var_29 = wp::int32(var_28);
        // layer_p = body_collision_layer[body_p]                                                 <L 640>
        var_30 = wp::address(var_body_collision_layer, var_9);
        var_32 = wp::load(var_30);
        var_31 = wp::copy(var_32);
        // filter_p = collision_layer_filter[wp.int32(layer_p)]                                   <L 641>
        var_33 = wp::int32(var_31);
        var_34 = wp::address(var_collision_layer_filter, var_33);
        var_36 = wp::load(var_34);
        var_35 = wp::copy(var_36);
        // include_self = body_enable_self_collision[body_p]                                      <L 642>
        var_37 = wp::address(var_body_enable_self_collision, var_9);
        var_39 = wp::load(var_37);
        var_38 = wp::copy(var_39);
        // while wp.bvh_query_next(query, bounds_nr):                                             <L 644>
        //---------
        // reverse
        start_while_2:;
        var_40 = wp::bvh_query_next(var_25, var_29);
        if ((var_40) == false) goto end_while_2;
        adj_41 = {};
        adj_42 = {};
        adj_43 = {};
        adj_44 = {};
        adj_45 = {};
        adj_46 = {};
        adj_47 = {};
        adj_48 = {};
        adj_49 = {};
        adj_50 = {};
        adj_51 = {};
        adj_61 = {};
        adj_62 = {};
        adj_63 = {};
        adj_64 = {};
        adj_65 = {};
        adj_66 = {};
        adj_67 = {};
        adj_68 = {};
        adj_69 = {};
        adj_70 = {};
        adj_71 = {};
        adj_72 = {};
        adj_73 = {};
        adj_74 = {};
        adj_75 = {};
        adj_76 = {};
        adj_77 = {};
        adj_78 = {};
        adj_79 = {};
        adj_80 = {};
        adj_81 = {};
        adj_82 = {};
        adj_83 = {};
        adj_84 = {};
        adj_85 = {};
        adj_86 = {};
        adj_87 = {};
        adj_88 = {};
        adj_89 = {};
        adj_90 = {};
        adj_91 = {};
        adj_92 = {};
        adj_93 = {};
        adj_94 = {};
        adj_95 = {};
        adj_96 = {};
        adj_97 = {};
        adj_98 = {};
        adj_99 = {};
        adj_100 = {};
        adj_101 = {};
            // valid = wp.bool(True)                                                              <L 645>
            var_42 = bool(var_41);
            // if subset3(face[bounds_nr], vi):                                                   <L 646>
            var_43 = wp::address(var_face, var_29);
            var_45 = wp::load(var_43);
            var_44 = subset3_0(var_45, var_6);
            if (var_44) {
                // valid = wp.bool(False)                                                         <L 647>
                var_47 = bool(var_46);
            }
            var_48 = wp::where(var_44, var_47, var_42);
            // for i in range(num_stitch_per_x[vi]):                                              <L 648>
            var_49 = wp::address(var_num_stitch_per_x, var_6);
            var_51 = wp::load(var_49);
            var_50 = wp::range(var_51);
            // if valid:                                                                          <L 651>
            if (var_48) {
                // body_t = face2body[bounds_nr]                                                  <L 652>
                var_61 = wp::address(var_face2body, var_29);
                var_63 = wp::load(var_61);
                var_62 = wp::copy(var_63);
                // layer_t = body_collision_layer[body_t]                                         <L 653>
                var_64 = wp::address(var_body_collision_layer, var_62);
                var_66 = wp::load(var_64);
                var_65 = wp::copy(var_66);
                // env_t = body_env_id[body_t]                                                    <L 654>
                var_67 = wp::address(var_body_env_id, var_62);
                var_69 = wp::load(var_67);
                var_68 = wp::copy(var_69);
                // pass_env_filter = env_p == env_t                                               <L 655>
                var_70 = (var_12 == var_68);
                // pass_collision_filter = (filter_p >> layer_t) % wp.int64(2) == wp.int64(1)       <L 656>
                var_71 = wp::rshift(var_35, var_65);
                var_73 = wp::int64(var_72);
                var_74 = wp::mod(var_71, var_73);
                var_76 = wp::int64(var_75);
                var_77 = (var_74 == var_76);
                // if (include_self or (body_t != body_p)) and pass_collision_filter and pass_env_filter:       <L 657>
                var_78 = (var_62 != var_9);
                var_79 = var_38 || var_78;
                var_80 = var_79 && var_77 && var_70;
                if (var_80) {
                    // offset = wp.atomic_add(num_collisions, 0, 1)                               <L 658>
                    // var_83 = wp::atomic_add(var_num_collisions, var_81, var_82);
                    // if offset >= max_collision - 1:                                            <L 659>
                    var_85 = wp::sub(var_max_collision, var_84);
                    var_86 = (var_83 >= var_85);
                    if (var_86) {
                        // wp.atomic_max(explode, 0, 1)                                           <L 660>
                        // var_89 = wp::atomic_max(var_explode, var_87, var_88);
                        // return                                                                 <L 661>
                        goto label6;
                    }
                    // wp.atomic_add(PT_count, 0, 1)                                              <L 662>
                    // var_92 = wp::atomic_add(var_PT_count, var_90, var_91);
                    // if face2body[bounds_nr] < body_p:                                          <L 663>
                    var_93 = wp::address(var_face2body, var_29);
                    var_95 = wp::load(var_93);
                    var_94 = (var_95 < var_9);
                    if (var_94) {
                        // nodeI[offset] = bounds_nr                                              <L 664>
                        // wp::array_store(var_nodeI, var_83, var_29);
                        // bodyI[offset] = face2body[bounds_nr]                                   <L 665>
                        var_96 = wp::address(var_face2body, var_29);
                        var_97 = wp::load(var_96);
                        // wp::array_store(var_bodyI, var_83, var_97);
                        // nodeJ[offset] = svi                                                    <L 666>
                        // wp::array_store(var_nodeJ, var_83, var_4);
                        // bodyJ[offset] = body_p                                                 <L 667>
                        // wp::array_store(var_bodyJ, var_83, var_9);
                        // collision_type[offset] = TRIANGLE_POINT_PAIR                           <L 668>
                        // wp::array_store(var_collision_type, var_83, var_98);
                    }
                    if (!var_94) {
                        // nodeI[offset] = svi                                                    <L 670>
                        // wp::array_store(var_nodeI, var_83, var_4);
                        // bodyI[offset] = body_p                                                 <L 671>
                        // wp::array_store(var_bodyI, var_83, var_9);
                        // nodeJ[offset] = bounds_nr                                              <L 672>
                        // wp::array_store(var_nodeJ, var_83, var_29);
                        // bodyJ[offset] = face2body[bounds_nr]                                   <L 673>
                        var_99 = wp::address(var_face2body, var_29);
                        var_100 = wp::load(var_99);
                        // wp::array_store(var_bodyJ, var_83, var_100);
                        // collision_type[offset] = POINT_TRIANGLE_PAIR                           <L 674>
                        // wp::array_store(var_collision_type, var_83, var_101);
                    }
                }
            }
            if (var_48) {
                if (var_80) {
                    if (!var_94) {
                        wp::adj_array_store(var_collision_type, var_83, var_101, adj_collision_type, adj_83, adj_101);
                        // adj: collision_type[offset] = POINT_TRIANGLE_PAIR                      <L 674>
                        wp::adj_array_store(var_bodyJ, var_83, var_100, adj_bodyJ, adj_83, adj_99);
                        wp::adj_load(var_99, adj_99, adj_100);
                        wp::adj_address(var_face2body, var_29, adj_face2body, adj_29, adj_99);
                        // adj: bodyJ[offset] = face2body[bounds_nr]                              <L 673>
                        wp::adj_array_store(var_nodeJ, var_83, var_29, adj_nodeJ, adj_83, adj_29);
                        // adj: nodeJ[offset] = bounds_nr                                         <L 672>
                        wp::adj_array_store(var_bodyI, var_83, var_9, adj_bodyI, adj_83, adj_9);
                        // adj: bodyI[offset] = body_p                                            <L 671>
                        wp::adj_array_store(var_nodeI, var_83, var_4, adj_nodeI, adj_83, adj_4);
                        // adj: nodeI[offset] = svi                                               <L 670>
                    }
                    if (var_94) {
                        wp::adj_array_store(var_collision_type, var_83, var_98, adj_collision_type, adj_83, adj_98);
                        // adj: collision_type[offset] = TRIANGLE_POINT_PAIR                      <L 668>
                        wp::adj_array_store(var_bodyJ, var_83, var_9, adj_bodyJ, adj_83, adj_9);
                        // adj: bodyJ[offset] = body_p                                            <L 667>
                        wp::adj_array_store(var_nodeJ, var_83, var_4, adj_nodeJ, adj_83, adj_4);
                        // adj: nodeJ[offset] = svi                                               <L 666>
                        wp::adj_array_store(var_bodyI, var_83, var_97, adj_bodyI, adj_83, adj_96);
                        wp::adj_load(var_96, adj_96, adj_97);
                        wp::adj_address(var_face2body, var_29, adj_face2body, adj_29, adj_96);
                        // adj: bodyI[offset] = face2body[bounds_nr]                              <L 665>
                        wp::adj_array_store(var_nodeI, var_83, var_29, adj_nodeI, adj_83, adj_29);
                        // adj: nodeI[offset] = bounds_nr                                         <L 664>
                    }
                    wp::adj_load(var_93, adj_93, adj_95);
                    wp::adj_address(var_face2body, var_29, adj_face2body, adj_29, adj_93);
                    // adj: if face2body[bounds_nr] < body_p:                                     <L 663>
                    wp::adj_atomic_add(var_PT_count, var_90, var_91, adj_PT_count, adj_90, adj_91, adj_92);
                    // adj: wp.atomic_add(PT_count, 0, 1)                                         <L 662>
                    if (var_86) {
                        label6:;
                        // adj: return                                                            <L 661>
                        wp::adj_atomic_max(var_explode, var_87, var_88, adj_explode, adj_87, adj_88, adj_89);
                        // adj: wp.atomic_max(explode, 0, 1)                                      <L 660>
                    }
                    wp::adj_sub(var_max_collision, var_84, adj_max_collision, adj_84, adj_85);
                    // adj: if offset >= max_collision - 1:                                       <L 659>
                    wp::adj_atomic_add(var_num_collisions, var_81, var_82, adj_num_collisions, adj_81, adj_82, adj_83);
                    // adj: offset = wp.atomic_add(num_collisions, 0, 1)                          <L 658>
                }
                // adj: if (include_self or (body_t != body_p)) and pass_collision_filter and pass_env_filter:  <L 657>
                wp::adj_int64(var_75, adj_75, adj_76);
                wp::adj_mod(var_71, var_73, adj_71, adj_73, adj_74);
                wp::adj_int64(var_72, adj_72, adj_73);
                wp::adj_rshift(var_35, var_65, adj_35, adj_65, adj_71);
                // adj: pass_collision_filter = (filter_p >> layer_t) % wp.int64(2) == wp.int64(1)  <L 656>
                // adj: pass_env_filter = env_p == env_t                                          <L 655>
                wp::adj_copy(var_69, adj_67, adj_68);
                wp::adj_load(var_67, adj_67, adj_69);
                wp::adj_address(var_body_env_id, var_62, adj_body_env_id, adj_62, adj_67);
                // adj: env_t = body_env_id[body_t]                                               <L 654>
                wp::adj_copy(var_66, adj_64, adj_65);
                wp::adj_load(var_64, adj_64, adj_66);
                wp::adj_address(var_body_collision_layer, var_62, adj_body_collision_layer, adj_62, adj_64);
                // adj: layer_t = body_collision_layer[body_t]                                    <L 653>
                wp::adj_copy(var_63, adj_61, adj_62);
                wp::adj_load(var_61, adj_61, adj_63);
                wp::adj_address(var_face2body, var_29, adj_face2body, adj_29, adj_61);
                // adj: body_t = face2body[bounds_nr]                                             <L 652>
            }
            // adj: if valid:                                                                     <L 651>
            var_50 = wp::iter_reverse(var_50);
            start_for_4:;
                if (iter_cmp(var_50) == 0) goto end_for_4;
                var_52 = wp::iter_next(var_50);
            	adj_53 = {};
            	adj_54 = {};
            	adj_55 = {};
            	adj_56 = {};
            	adj_57 = {};
            	adj_58 = {};
            	adj_59 = {};
            	adj_60 = {};
                // if subset3(face[bounds_nr], stitch_map[vi, i]):                                <L 649>
                var_53 = wp::address(var_face, var_29);
                var_54 = wp::address(var_stitch_map, var_6, var_52);
                var_56 = wp::load(var_53);
                var_57 = wp::load(var_54);
                var_55 = subset3_0(var_56, var_57);
                if (var_55) {
                    // valid = wp.bool(False)                                                     <L 650>
                    var_59 = bool(var_58);
                }
                var_60 = wp::where(var_55, var_59, var_48);
                wp::assign(var_48, var_60);
                wp::adj_assign(var_48, var_60, adj_48, adj_60);
                wp::adj_where(var_55, var_59, var_48, adj_55, adj_59, adj_48, adj_60);
                if (var_55) {
                    adj_bool(var_58, adj_58, adj_59);
                    // adj: valid = wp.bool(False)                                                <L 650>
                }
                adj_subset3_0(var_56, var_57, adj_53, adj_54, adj_55);
                wp::adj_load(var_54, adj_54, adj_57);
                wp::adj_load(var_53, adj_53, adj_56);
                wp::adj_address(var_stitch_map, var_6, var_52, adj_stitch_map, adj_6, adj_52, adj_54);
                wp::adj_address(var_face, var_29, adj_face, adj_29, adj_53);
                // adj: if subset3(face[bounds_nr], stitch_map[vi, i]):                           <L 649>
            	goto start_for_4;
            end_for_4:;
            wp::adj_range(var_51, adj_49, adj_50);
            wp::adj_load(var_49, adj_49, adj_51);
            wp::adj_address(var_num_stitch_per_x, var_6, adj_num_stitch_per_x, adj_6, adj_49);
            // adj: for i in range(num_stitch_per_x[vi]):                                         <L 648>
            wp::adj_where(var_44, var_47, var_42, adj_44, adj_47, adj_42, adj_48);
            if (var_44) {
                adj_bool(var_46, adj_46, adj_47);
                // adj: valid = wp.bool(False)                                                    <L 647>
            }
            adj_subset3_0(var_45, var_6, adj_43, adj_6, adj_44);
            wp::adj_load(var_43, adj_43, adj_45);
            wp::adj_address(var_face, var_29, adj_face, adj_29, adj_43);
            // adj: if subset3(face[bounds_nr], vi):                                              <L 646>
            adj_bool(var_41, adj_41, adj_42);
            // adj: valid = wp.bool(True)                                                         <L 645>
        goto start_while_2;
        end_while_2:;
        // adj: while wp.bvh_query_next(query, bounds_nr):                                        <L 644>
        wp::adj_copy(var_39, adj_37, adj_38);
        wp::adj_load(var_37, adj_37, adj_39);
        wp::adj_address(var_body_enable_self_collision, var_9, adj_body_enable_self_collision, adj_9, adj_37);
        // adj: include_self = body_enable_self_collision[body_p]                                 <L 642>
        wp::adj_copy(var_36, adj_34, adj_35);
        wp::adj_load(var_34, adj_34, adj_36);
        wp::adj_address(var_collision_layer_filter, var_33, adj_collision_layer_filter, adj_33, adj_34);
        wp::adj_int32(var_31, adj_31, adj_33);
        // adj: filter_p = collision_layer_filter[wp.int32(layer_p)]                              <L 641>
        wp::adj_copy(var_32, adj_30, adj_31);
        wp::adj_load(var_30, adj_30, adj_32);
        wp::adj_address(var_body_collision_layer, var_9, adj_body_collision_layer, adj_9, adj_30);
        // adj: layer_p = body_collision_layer[body_p]                                            <L 640>
        wp::adj_int32(var_28, adj_28, adj_29);
        // adj: bounds_nr = wp.int32(0)                                                           <L 639>
        wp::adj_bvh_query_aabb(var_PT_bvh_id, var_26, var_27, adj_PT_bvh_id, adj_23, adj_24, adj_25);
        wp::adj_load(var_24, adj_24, adj_27);
        wp::adj_load(var_23, adj_23, adj_26);
        wp::adj_address(var_nodeBB_upper, var_4, adj_nodeBB_upper, adj_4, adj_24);
        wp::adj_address(var_nodeBB_lower, var_4, adj_nodeBB_lower, adj_4, adj_23);
        // adj: query = wp.bvh_query_aabb(PT_bvh_id, nodeBB_lower[svi], nodeBB_upper[svi])        <L 638>
        if (var_22) {
            label1:;
            // adj: return                                                                        <L 637>
        }
        wp::adj_load(var_18, adj_18, adj_21);
        wp::adj_address(var_env_states, var_12, adj_env_states, adj_12, adj_18);
        wp::adj_load(var_14, adj_14, adj_17);
        wp::adj_address(var_env_states, var_12, adj_env_states, adj_12, adj_14);
        // adj: if (env_states[env_p] == ENV_STATE_INVALID) or (env_states[env_p] == ENV_STATE_NEWTON_SOLVED):  <L 636>
        wp::adj_copy(var_13, adj_11, adj_12);
        wp::adj_load(var_11, adj_11, adj_13);
        wp::adj_address(var_body_env_id, var_9, adj_body_env_id, adj_9, adj_11);
        // adj: env_p = body_env_id[body_p]                                                       <L 635>
        wp::adj_copy(var_10, adj_8, adj_9);
        wp::adj_load(var_8, adj_8, adj_10);
        wp::adj_address(var_node2body, var_6, adj_node2body, adj_6, adj_8);
        // adj: body_p = node2body[vi]                                                            <L 634>
        wp::adj_copy(var_7, adj_5, adj_6);
        wp::adj_load(var_5, adj_5, adj_7);
        wp::adj_address(var_surf_vi, var_4, adj_surf_vi, adj_4, adj_5);
        // adj: vi = surf_vi[svi]                                                                 <L 633>
        // adj: svi = wp.tid()                                                                    <L 632>
        if (var_3) {
        wp::adj_load(var_1, adj_1, adj_3);
            label0:;
            // adj: return                                                                        <L 631>
        }
        wp::adj_load(var_1, adj_1, adj_2);
        wp::adj_address(var_explode, var_0, adj_explode, adj_0, adj_1);
        // adj: if explode[0]:                                                                    <L 630>
        // adj: def bvh_query_aabb_PT(                                                            <L 605>
        continue;
    }
}



extern "C" __global__ void compute_node_BB_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_nodeBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> var_nodeBB_upper,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::vec_t<3,wp::float64>> var_dx,
    wp::array_t<wp::float64> var_node_xi,
    wp::float64 var_dist,
    wp::array_t<wp::int32> var_surf_vi)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        wp::int32 var_2;
        wp::int32 var_3;
        wp::vec_t<3,wp::float64>* var_4;
        wp::vec_t<3,wp::float64> var_5;
        wp::vec_t<3,wp::float64> var_6;
        wp::vec_t<3,wp::float64>* var_7;
        wp::vec_t<3,wp::float64> var_8;
        wp::vec_t<3,wp::float64> var_9;
        const wp::int32 var_10 = 0;
        wp::float64 var_11;
        wp::float64 var_12;
        wp::float64 var_13;
        wp::float64 var_14;
        wp::float64 var_15;
        const wp::float32 var_16 = 2.0;
        wp::float64 var_17;
        wp::float64 var_18;
        wp::float64 var_19;
        wp::float64* var_20;
        wp::float64 var_21;
        wp::float64 var_22;
        wp::float32 var_23;
        wp::vec_t<3,wp::float32>* var_24;
        wp::float32* var_25;
        wp::float64 var_26;
        wp::float64 var_27;
        wp::float64 var_28;
        wp::float64 var_29;
        wp::float64 var_30;
        const wp::float32 var_31 = 2.0;
        wp::float64 var_32;
        wp::float64 var_33;
        wp::float64 var_34;
        wp::float64* var_35;
        wp::float64 var_36;
        wp::float64 var_37;
        wp::float32 var_38;
        wp::vec_t<3,wp::float32>* var_39;
        wp::float32* var_40;
        const wp::int32 var_41 = 1;
        wp::float64 var_42;
        wp::float64 var_43;
        wp::float64 var_44;
        wp::float64 var_45;
        wp::float64 var_46;
        const wp::float32 var_47 = 2.0;
        wp::float64 var_48;
        wp::float64 var_49;
        wp::float64 var_50;
        wp::float64* var_51;
        wp::float64 var_52;
        wp::float64 var_53;
        wp::float32 var_54;
        wp::vec_t<3,wp::float32>* var_55;
        wp::float32* var_56;
        wp::float64 var_57;
        wp::float64 var_58;
        wp::float64 var_59;
        wp::float64 var_60;
        wp::float64 var_61;
        const wp::float32 var_62 = 2.0;
        wp::float64 var_63;
        wp::float64 var_64;
        wp::float64 var_65;
        wp::float64* var_66;
        wp::float64 var_67;
        wp::float64 var_68;
        wp::float32 var_69;
        wp::vec_t<3,wp::float32>* var_70;
        wp::float32* var_71;
        const wp::int32 var_72 = 2;
        wp::float64 var_73;
        wp::float64 var_74;
        wp::float64 var_75;
        wp::float64 var_76;
        wp::float64 var_77;
        const wp::float32 var_78 = 2.0;
        wp::float64 var_79;
        wp::float64 var_80;
        wp::float64 var_81;
        wp::float64* var_82;
        wp::float64 var_83;
        wp::float64 var_84;
        wp::float32 var_85;
        wp::vec_t<3,wp::float32>* var_86;
        wp::float32* var_87;
        wp::float64 var_88;
        wp::float64 var_89;
        wp::float64 var_90;
        wp::float64 var_91;
        wp::float64 var_92;
        const wp::float32 var_93 = 2.0;
        wp::float64 var_94;
        wp::float64 var_95;
        wp::float64 var_96;
        wp::float64* var_97;
        wp::float64 var_98;
        wp::float64 var_99;
        wp::float32 var_100;
        wp::vec_t<3,wp::float32>* var_101;
        wp::float32* var_102;
        //---------
        // forward
        // def compute_node_BB(                                                                   <L 538>
        // svi = wp.tid()                                                                         <L 547>
        var_0 = builtin_tid1d();
        // vi = surf_vi[svi]                                                                      <L 548>
        var_1 = wp::address(var_surf_vi, var_0);
        var_3 = wp::load(var_1);
        var_2 = wp::copy(var_3);
        // A = x[vi]                                                                              <L 549>
        var_4 = wp::address(var_x, var_2);
        var_6 = wp::load(var_4);
        var_5 = wp::copy(var_6);
        // dA = dx[vi]                                                                            <L 550>
        var_7 = wp::address(var_dx, var_2);
        var_9 = wp::load(var_7);
        var_8 = wp::copy(var_9);
        // for d in range(3):                                                                     <L 552>
        // nodeBB_lower[svi][d] = wp.float32(wp.min(A[d], A[d] + dA[d]) - dist / wp.float64(2.0) - node_xi[svi])       <L 553>
        var_11 = wp::extract(var_5, var_10);
        var_12 = wp::extract(var_5, var_10);
        var_13 = wp::extract(var_8, var_10);
        var_14 = wp::add(var_12, var_13);
        var_15 = wp::min(var_11, var_14);
        var_17 = wp::float64(var_16);
        var_18 = wp::div(var_dist, var_17);
        var_19 = wp::sub(var_15, var_18);
        var_20 = wp::address(var_node_xi, var_0);
        var_22 = wp::load(var_20);
        var_21 = wp::sub(var_19, var_22);
        var_23 = wp::float32(var_21);
        var_24 = wp::address(var_nodeBB_lower, var_0);
        var_25 = wp::indexref(var_24, var_10);
        wp::store(var_25, var_23);
        // nodeBB_upper[svi][d] = wp.float32(wp.max(A[d], A[d] + dA[d]) + dist / wp.float64(2.0) + node_xi[svi])       <L 554>
        var_26 = wp::extract(var_5, var_10);
        var_27 = wp::extract(var_5, var_10);
        var_28 = wp::extract(var_8, var_10);
        var_29 = wp::add(var_27, var_28);
        var_30 = wp::max(var_26, var_29);
        var_32 = wp::float64(var_31);
        var_33 = wp::div(var_dist, var_32);
        var_34 = wp::add(var_30, var_33);
        var_35 = wp::address(var_node_xi, var_0);
        var_37 = wp::load(var_35);
        var_36 = wp::add(var_34, var_37);
        var_38 = wp::float32(var_36);
        var_39 = wp::address(var_nodeBB_upper, var_0);
        var_40 = wp::indexref(var_39, var_10);
        wp::store(var_40, var_38);
        // nodeBB_lower[svi][d] = wp.float32(wp.min(A[d], A[d] + dA[d]) - dist / wp.float64(2.0) - node_xi[svi])       <L 553>
        var_42 = wp::extract(var_5, var_41);
        var_43 = wp::extract(var_5, var_41);
        var_44 = wp::extract(var_8, var_41);
        var_45 = wp::add(var_43, var_44);
        var_46 = wp::min(var_42, var_45);
        var_48 = wp::float64(var_47);
        var_49 = wp::div(var_dist, var_48);
        var_50 = wp::sub(var_46, var_49);
        var_51 = wp::address(var_node_xi, var_0);
        var_53 = wp::load(var_51);
        var_52 = wp::sub(var_50, var_53);
        var_54 = wp::float32(var_52);
        var_55 = wp::address(var_nodeBB_lower, var_0);
        var_56 = wp::indexref(var_55, var_41);
        wp::store(var_56, var_54);
        // nodeBB_upper[svi][d] = wp.float32(wp.max(A[d], A[d] + dA[d]) + dist / wp.float64(2.0) + node_xi[svi])       <L 554>
        var_57 = wp::extract(var_5, var_41);
        var_58 = wp::extract(var_5, var_41);
        var_59 = wp::extract(var_8, var_41);
        var_60 = wp::add(var_58, var_59);
        var_61 = wp::max(var_57, var_60);
        var_63 = wp::float64(var_62);
        var_64 = wp::div(var_dist, var_63);
        var_65 = wp::add(var_61, var_64);
        var_66 = wp::address(var_node_xi, var_0);
        var_68 = wp::load(var_66);
        var_67 = wp::add(var_65, var_68);
        var_69 = wp::float32(var_67);
        var_70 = wp::address(var_nodeBB_upper, var_0);
        var_71 = wp::indexref(var_70, var_41);
        wp::store(var_71, var_69);
        // nodeBB_lower[svi][d] = wp.float32(wp.min(A[d], A[d] + dA[d]) - dist / wp.float64(2.0) - node_xi[svi])       <L 553>
        var_73 = wp::extract(var_5, var_72);
        var_74 = wp::extract(var_5, var_72);
        var_75 = wp::extract(var_8, var_72);
        var_76 = wp::add(var_74, var_75);
        var_77 = wp::min(var_73, var_76);
        var_79 = wp::float64(var_78);
        var_80 = wp::div(var_dist, var_79);
        var_81 = wp::sub(var_77, var_80);
        var_82 = wp::address(var_node_xi, var_0);
        var_84 = wp::load(var_82);
        var_83 = wp::sub(var_81, var_84);
        var_85 = wp::float32(var_83);
        var_86 = wp::address(var_nodeBB_lower, var_0);
        var_87 = wp::indexref(var_86, var_72);
        wp::store(var_87, var_85);
        // nodeBB_upper[svi][d] = wp.float32(wp.max(A[d], A[d] + dA[d]) + dist / wp.float64(2.0) + node_xi[svi])       <L 554>
        var_88 = wp::extract(var_5, var_72);
        var_89 = wp::extract(var_5, var_72);
        var_90 = wp::extract(var_8, var_72);
        var_91 = wp::add(var_89, var_90);
        var_92 = wp::max(var_88, var_91);
        var_94 = wp::float64(var_93);
        var_95 = wp::div(var_dist, var_94);
        var_96 = wp::add(var_92, var_95);
        var_97 = wp::address(var_node_xi, var_0);
        var_99 = wp::load(var_97);
        var_98 = wp::add(var_96, var_99);
        var_100 = wp::float32(var_98);
        var_101 = wp::address(var_nodeBB_upper, var_0);
        var_102 = wp::indexref(var_101, var_72);
        wp::store(var_102, var_100);
    }
}



extern "C" __global__ void compute_node_BB_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_nodeBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> var_nodeBB_upper,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::vec_t<3,wp::float64>> var_dx,
    wp::array_t<wp::float64> var_node_xi,
    wp::float64 var_dist,
    wp::array_t<wp::int32> var_surf_vi,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_nodeBB_lower,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_nodeBB_upper,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_x,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_dx,
    wp::array_t<wp::float64> adj_node_xi,
    wp::float64 adj_dist,
    wp::array_t<wp::int32> adj_surf_vi)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        wp::int32 var_2;
        wp::int32 var_3;
        wp::vec_t<3,wp::float64>* var_4;
        wp::vec_t<3,wp::float64> var_5;
        wp::vec_t<3,wp::float64> var_6;
        wp::vec_t<3,wp::float64>* var_7;
        wp::vec_t<3,wp::float64> var_8;
        wp::vec_t<3,wp::float64> var_9;
        const wp::int32 var_10 = 0;
        wp::float64 var_11;
        wp::float64 var_12;
        wp::float64 var_13;
        wp::float64 var_14;
        wp::float64 var_15;
        const wp::float32 var_16 = 2.0;
        wp::float64 var_17;
        wp::float64 var_18;
        wp::float64 var_19;
        wp::float64* var_20;
        wp::float64 var_21;
        wp::float64 var_22;
        wp::float32 var_23;
        wp::vec_t<3,wp::float32>* var_24;
        wp::float32* var_25;
        wp::float64 var_26;
        wp::float64 var_27;
        wp::float64 var_28;
        wp::float64 var_29;
        wp::float64 var_30;
        const wp::float32 var_31 = 2.0;
        wp::float64 var_32;
        wp::float64 var_33;
        wp::float64 var_34;
        wp::float64* var_35;
        wp::float64 var_36;
        wp::float64 var_37;
        wp::float32 var_38;
        wp::vec_t<3,wp::float32>* var_39;
        wp::float32* var_40;
        const wp::int32 var_41 = 1;
        wp::float64 var_42;
        wp::float64 var_43;
        wp::float64 var_44;
        wp::float64 var_45;
        wp::float64 var_46;
        const wp::float32 var_47 = 2.0;
        wp::float64 var_48;
        wp::float64 var_49;
        wp::float64 var_50;
        wp::float64* var_51;
        wp::float64 var_52;
        wp::float64 var_53;
        wp::float32 var_54;
        wp::vec_t<3,wp::float32>* var_55;
        wp::float32* var_56;
        wp::float64 var_57;
        wp::float64 var_58;
        wp::float64 var_59;
        wp::float64 var_60;
        wp::float64 var_61;
        const wp::float32 var_62 = 2.0;
        wp::float64 var_63;
        wp::float64 var_64;
        wp::float64 var_65;
        wp::float64* var_66;
        wp::float64 var_67;
        wp::float64 var_68;
        wp::float32 var_69;
        wp::vec_t<3,wp::float32>* var_70;
        wp::float32* var_71;
        const wp::int32 var_72 = 2;
        wp::float64 var_73;
        wp::float64 var_74;
        wp::float64 var_75;
        wp::float64 var_76;
        wp::float64 var_77;
        const wp::float32 var_78 = 2.0;
        wp::float64 var_79;
        wp::float64 var_80;
        wp::float64 var_81;
        wp::float64* var_82;
        wp::float64 var_83;
        wp::float64 var_84;
        wp::float32 var_85;
        wp::vec_t<3,wp::float32>* var_86;
        wp::float32* var_87;
        wp::float64 var_88;
        wp::float64 var_89;
        wp::float64 var_90;
        wp::float64 var_91;
        wp::float64 var_92;
        const wp::float32 var_93 = 2.0;
        wp::float64 var_94;
        wp::float64 var_95;
        wp::float64 var_96;
        wp::float64* var_97;
        wp::float64 var_98;
        wp::float64 var_99;
        wp::float32 var_100;
        wp::vec_t<3,wp::float32>* var_101;
        wp::float32* var_102;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        wp::int32 adj_3 = {};
        wp::vec_t<3,wp::float64> adj_4 = {};
        wp::vec_t<3,wp::float64> adj_5 = {};
        wp::vec_t<3,wp::float64> adj_6 = {};
        wp::vec_t<3,wp::float64> adj_7 = {};
        wp::vec_t<3,wp::float64> adj_8 = {};
        wp::vec_t<3,wp::float64> adj_9 = {};
        wp::int32 adj_10 = {};
        wp::float64 adj_11 = {};
        wp::float64 adj_12 = {};
        wp::float64 adj_13 = {};
        wp::float64 adj_14 = {};
        wp::float64 adj_15 = {};
        wp::float32 adj_16 = {};
        wp::float64 adj_17 = {};
        wp::float64 adj_18 = {};
        wp::float64 adj_19 = {};
        wp::float64 adj_20 = {};
        wp::float64 adj_21 = {};
        wp::float64 adj_22 = {};
        wp::float32 adj_23 = {};
        wp::vec_t<3,wp::float32> adj_24 = {};
        wp::float32 adj_25 = {};
        wp::float64 adj_26 = {};
        wp::float64 adj_27 = {};
        wp::float64 adj_28 = {};
        wp::float64 adj_29 = {};
        wp::float64 adj_30 = {};
        wp::float32 adj_31 = {};
        wp::float64 adj_32 = {};
        wp::float64 adj_33 = {};
        wp::float64 adj_34 = {};
        wp::float64 adj_35 = {};
        wp::float64 adj_36 = {};
        wp::float64 adj_37 = {};
        wp::float32 adj_38 = {};
        wp::vec_t<3,wp::float32> adj_39 = {};
        wp::float32 adj_40 = {};
        wp::int32 adj_41 = {};
        wp::float64 adj_42 = {};
        wp::float64 adj_43 = {};
        wp::float64 adj_44 = {};
        wp::float64 adj_45 = {};
        wp::float64 adj_46 = {};
        wp::float32 adj_47 = {};
        wp::float64 adj_48 = {};
        wp::float64 adj_49 = {};
        wp::float64 adj_50 = {};
        wp::float64 adj_51 = {};
        wp::float64 adj_52 = {};
        wp::float64 adj_53 = {};
        wp::float32 adj_54 = {};
        wp::vec_t<3,wp::float32> adj_55 = {};
        wp::float32 adj_56 = {};
        wp::float64 adj_57 = {};
        wp::float64 adj_58 = {};
        wp::float64 adj_59 = {};
        wp::float64 adj_60 = {};
        wp::float64 adj_61 = {};
        wp::float32 adj_62 = {};
        wp::float64 adj_63 = {};
        wp::float64 adj_64 = {};
        wp::float64 adj_65 = {};
        wp::float64 adj_66 = {};
        wp::float64 adj_67 = {};
        wp::float64 adj_68 = {};
        wp::float32 adj_69 = {};
        wp::vec_t<3,wp::float32> adj_70 = {};
        wp::float32 adj_71 = {};
        wp::int32 adj_72 = {};
        wp::float64 adj_73 = {};
        wp::float64 adj_74 = {};
        wp::float64 adj_75 = {};
        wp::float64 adj_76 = {};
        wp::float64 adj_77 = {};
        wp::float32 adj_78 = {};
        wp::float64 adj_79 = {};
        wp::float64 adj_80 = {};
        wp::float64 adj_81 = {};
        wp::float64 adj_82 = {};
        wp::float64 adj_83 = {};
        wp::float64 adj_84 = {};
        wp::float32 adj_85 = {};
        wp::vec_t<3,wp::float32> adj_86 = {};
        wp::float32 adj_87 = {};
        wp::float64 adj_88 = {};
        wp::float64 adj_89 = {};
        wp::float64 adj_90 = {};
        wp::float64 adj_91 = {};
        wp::float64 adj_92 = {};
        wp::float32 adj_93 = {};
        wp::float64 adj_94 = {};
        wp::float64 adj_95 = {};
        wp::float64 adj_96 = {};
        wp::float64 adj_97 = {};
        wp::float64 adj_98 = {};
        wp::float64 adj_99 = {};
        wp::float32 adj_100 = {};
        wp::vec_t<3,wp::float32> adj_101 = {};
        wp::float32 adj_102 = {};
        //---------
        // forward
        // def compute_node_BB(                                                                   <L 538>
        // svi = wp.tid()                                                                         <L 547>
        var_0 = builtin_tid1d();
        // vi = surf_vi[svi]                                                                      <L 548>
        var_1 = wp::address(var_surf_vi, var_0);
        var_3 = wp::load(var_1);
        var_2 = wp::copy(var_3);
        // A = x[vi]                                                                              <L 549>
        var_4 = wp::address(var_x, var_2);
        var_6 = wp::load(var_4);
        var_5 = wp::copy(var_6);
        // dA = dx[vi]                                                                            <L 550>
        var_7 = wp::address(var_dx, var_2);
        var_9 = wp::load(var_7);
        var_8 = wp::copy(var_9);
        // for d in range(3):                                                                     <L 552>
        // nodeBB_lower[svi][d] = wp.float32(wp.min(A[d], A[d] + dA[d]) - dist / wp.float64(2.0) - node_xi[svi])       <L 553>
        var_11 = wp::extract(var_5, var_10);
        var_12 = wp::extract(var_5, var_10);
        var_13 = wp::extract(var_8, var_10);
        var_14 = wp::add(var_12, var_13);
        var_15 = wp::min(var_11, var_14);
        var_17 = wp::float64(var_16);
        var_18 = wp::div(var_dist, var_17);
        var_19 = wp::sub(var_15, var_18);
        var_20 = wp::address(var_node_xi, var_0);
        var_22 = wp::load(var_20);
        var_21 = wp::sub(var_19, var_22);
        var_23 = wp::float32(var_21);
        var_24 = wp::address(var_nodeBB_lower, var_0);
        // var_25 = wp::indexref(var_24, var_10);
        // wp::store(var_25, var_23);
        // nodeBB_upper[svi][d] = wp.float32(wp.max(A[d], A[d] + dA[d]) + dist / wp.float64(2.0) + node_xi[svi])       <L 554>
        var_26 = wp::extract(var_5, var_10);
        var_27 = wp::extract(var_5, var_10);
        var_28 = wp::extract(var_8, var_10);
        var_29 = wp::add(var_27, var_28);
        var_30 = wp::max(var_26, var_29);
        var_32 = wp::float64(var_31);
        var_33 = wp::div(var_dist, var_32);
        var_34 = wp::add(var_30, var_33);
        var_35 = wp::address(var_node_xi, var_0);
        var_37 = wp::load(var_35);
        var_36 = wp::add(var_34, var_37);
        var_38 = wp::float32(var_36);
        var_39 = wp::address(var_nodeBB_upper, var_0);
        // var_40 = wp::indexref(var_39, var_10);
        // wp::store(var_40, var_38);
        // nodeBB_lower[svi][d] = wp.float32(wp.min(A[d], A[d] + dA[d]) - dist / wp.float64(2.0) - node_xi[svi])       <L 553>
        var_42 = wp::extract(var_5, var_41);
        var_43 = wp::extract(var_5, var_41);
        var_44 = wp::extract(var_8, var_41);
        var_45 = wp::add(var_43, var_44);
        var_46 = wp::min(var_42, var_45);
        var_48 = wp::float64(var_47);
        var_49 = wp::div(var_dist, var_48);
        var_50 = wp::sub(var_46, var_49);
        var_51 = wp::address(var_node_xi, var_0);
        var_53 = wp::load(var_51);
        var_52 = wp::sub(var_50, var_53);
        var_54 = wp::float32(var_52);
        var_55 = wp::address(var_nodeBB_lower, var_0);
        // var_56 = wp::indexref(var_55, var_41);
        // wp::store(var_56, var_54);
        // nodeBB_upper[svi][d] = wp.float32(wp.max(A[d], A[d] + dA[d]) + dist / wp.float64(2.0) + node_xi[svi])       <L 554>
        var_57 = wp::extract(var_5, var_41);
        var_58 = wp::extract(var_5, var_41);
        var_59 = wp::extract(var_8, var_41);
        var_60 = wp::add(var_58, var_59);
        var_61 = wp::max(var_57, var_60);
        var_63 = wp::float64(var_62);
        var_64 = wp::div(var_dist, var_63);
        var_65 = wp::add(var_61, var_64);
        var_66 = wp::address(var_node_xi, var_0);
        var_68 = wp::load(var_66);
        var_67 = wp::add(var_65, var_68);
        var_69 = wp::float32(var_67);
        var_70 = wp::address(var_nodeBB_upper, var_0);
        // var_71 = wp::indexref(var_70, var_41);
        // wp::store(var_71, var_69);
        // nodeBB_lower[svi][d] = wp.float32(wp.min(A[d], A[d] + dA[d]) - dist / wp.float64(2.0) - node_xi[svi])       <L 553>
        var_73 = wp::extract(var_5, var_72);
        var_74 = wp::extract(var_5, var_72);
        var_75 = wp::extract(var_8, var_72);
        var_76 = wp::add(var_74, var_75);
        var_77 = wp::min(var_73, var_76);
        var_79 = wp::float64(var_78);
        var_80 = wp::div(var_dist, var_79);
        var_81 = wp::sub(var_77, var_80);
        var_82 = wp::address(var_node_xi, var_0);
        var_84 = wp::load(var_82);
        var_83 = wp::sub(var_81, var_84);
        var_85 = wp::float32(var_83);
        var_86 = wp::address(var_nodeBB_lower, var_0);
        // var_87 = wp::indexref(var_86, var_72);
        // wp::store(var_87, var_85);
        // nodeBB_upper[svi][d] = wp.float32(wp.max(A[d], A[d] + dA[d]) + dist / wp.float64(2.0) + node_xi[svi])       <L 554>
        var_88 = wp::extract(var_5, var_72);
        var_89 = wp::extract(var_5, var_72);
        var_90 = wp::extract(var_8, var_72);
        var_91 = wp::add(var_89, var_90);
        var_92 = wp::max(var_88, var_91);
        var_94 = wp::float64(var_93);
        var_95 = wp::div(var_dist, var_94);
        var_96 = wp::add(var_92, var_95);
        var_97 = wp::address(var_node_xi, var_0);
        var_99 = wp::load(var_97);
        var_98 = wp::add(var_96, var_99);
        var_100 = wp::float32(var_98);
        var_101 = wp::address(var_nodeBB_upper, var_0);
        // var_102 = wp::indexref(var_101, var_72);
        // wp::store(var_102, var_100);
        //---------
        // reverse
        wp::adj_store(var_102, var_100, adj_102, adj_100);
        wp::adj_indexref(var_101, var_72, adj_101, adj_72, adj_102);
        wp::adj_address(var_nodeBB_upper, var_0, adj_nodeBB_upper, adj_0, adj_101);
        wp::adj_float32(var_98, adj_98, adj_100);
        wp::adj_add(var_96, var_99, adj_96, adj_97, adj_98);
        wp::adj_load(var_97, adj_97, adj_99);
        wp::adj_address(var_node_xi, var_0, adj_node_xi, adj_0, adj_97);
        wp::adj_add(var_92, var_95, adj_92, adj_95, adj_96);
        wp::adj_div(var_dist, var_94, var_95, adj_dist, adj_94, adj_95);
        wp::adj_float64(var_93, adj_93, adj_94);
        wp::adj_max(var_88, var_91, adj_88, adj_91, adj_92);
        wp::adj_add(var_89, var_90, adj_89, adj_90, adj_91);
        wp::adj_extract(var_8, var_72, adj_8, adj_72, adj_90);
        wp::adj_extract(var_5, var_72, adj_5, adj_72, adj_89);
        wp::adj_extract(var_5, var_72, adj_5, adj_72, adj_88);
        // adj: nodeBB_upper[svi][d] = wp.float32(wp.max(A[d], A[d] + dA[d]) + dist / wp.float64(2.0) + node_xi[svi])  <L 554>
        wp::adj_store(var_87, var_85, adj_87, adj_85);
        wp::adj_indexref(var_86, var_72, adj_86, adj_72, adj_87);
        wp::adj_address(var_nodeBB_lower, var_0, adj_nodeBB_lower, adj_0, adj_86);
        wp::adj_float32(var_83, adj_83, adj_85);
        wp::adj_sub(var_81, var_84, adj_81, adj_82, adj_83);
        wp::adj_load(var_82, adj_82, adj_84);
        wp::adj_address(var_node_xi, var_0, adj_node_xi, adj_0, adj_82);
        wp::adj_sub(var_77, var_80, adj_77, adj_80, adj_81);
        wp::adj_div(var_dist, var_79, var_80, adj_dist, adj_79, adj_80);
        wp::adj_float64(var_78, adj_78, adj_79);
        wp::adj_min(var_73, var_76, adj_73, adj_76, adj_77);
        wp::adj_add(var_74, var_75, adj_74, adj_75, adj_76);
        wp::adj_extract(var_8, var_72, adj_8, adj_72, adj_75);
        wp::adj_extract(var_5, var_72, adj_5, adj_72, adj_74);
        wp::adj_extract(var_5, var_72, adj_5, adj_72, adj_73);
        // adj: nodeBB_lower[svi][d] = wp.float32(wp.min(A[d], A[d] + dA[d]) - dist / wp.float64(2.0) - node_xi[svi])  <L 553>
        wp::adj_store(var_71, var_69, adj_71, adj_69);
        wp::adj_indexref(var_70, var_41, adj_70, adj_41, adj_71);
        wp::adj_address(var_nodeBB_upper, var_0, adj_nodeBB_upper, adj_0, adj_70);
        wp::adj_float32(var_67, adj_67, adj_69);
        wp::adj_add(var_65, var_68, adj_65, adj_66, adj_67);
        wp::adj_load(var_66, adj_66, adj_68);
        wp::adj_address(var_node_xi, var_0, adj_node_xi, adj_0, adj_66);
        wp::adj_add(var_61, var_64, adj_61, adj_64, adj_65);
        wp::adj_div(var_dist, var_63, var_64, adj_dist, adj_63, adj_64);
        wp::adj_float64(var_62, adj_62, adj_63);
        wp::adj_max(var_57, var_60, adj_57, adj_60, adj_61);
        wp::adj_add(var_58, var_59, adj_58, adj_59, adj_60);
        wp::adj_extract(var_8, var_41, adj_8, adj_41, adj_59);
        wp::adj_extract(var_5, var_41, adj_5, adj_41, adj_58);
        wp::adj_extract(var_5, var_41, adj_5, adj_41, adj_57);
        // adj: nodeBB_upper[svi][d] = wp.float32(wp.max(A[d], A[d] + dA[d]) + dist / wp.float64(2.0) + node_xi[svi])  <L 554>
        wp::adj_store(var_56, var_54, adj_56, adj_54);
        wp::adj_indexref(var_55, var_41, adj_55, adj_41, adj_56);
        wp::adj_address(var_nodeBB_lower, var_0, adj_nodeBB_lower, adj_0, adj_55);
        wp::adj_float32(var_52, adj_52, adj_54);
        wp::adj_sub(var_50, var_53, adj_50, adj_51, adj_52);
        wp::adj_load(var_51, adj_51, adj_53);
        wp::adj_address(var_node_xi, var_0, adj_node_xi, adj_0, adj_51);
        wp::adj_sub(var_46, var_49, adj_46, adj_49, adj_50);
        wp::adj_div(var_dist, var_48, var_49, adj_dist, adj_48, adj_49);
        wp::adj_float64(var_47, adj_47, adj_48);
        wp::adj_min(var_42, var_45, adj_42, adj_45, adj_46);
        wp::adj_add(var_43, var_44, adj_43, adj_44, adj_45);
        wp::adj_extract(var_8, var_41, adj_8, adj_41, adj_44);
        wp::adj_extract(var_5, var_41, adj_5, adj_41, adj_43);
        wp::adj_extract(var_5, var_41, adj_5, adj_41, adj_42);
        // adj: nodeBB_lower[svi][d] = wp.float32(wp.min(A[d], A[d] + dA[d]) - dist / wp.float64(2.0) - node_xi[svi])  <L 553>
        wp::adj_store(var_40, var_38, adj_40, adj_38);
        wp::adj_indexref(var_39, var_10, adj_39, adj_10, adj_40);
        wp::adj_address(var_nodeBB_upper, var_0, adj_nodeBB_upper, adj_0, adj_39);
        wp::adj_float32(var_36, adj_36, adj_38);
        wp::adj_add(var_34, var_37, adj_34, adj_35, adj_36);
        wp::adj_load(var_35, adj_35, adj_37);
        wp::adj_address(var_node_xi, var_0, adj_node_xi, adj_0, adj_35);
        wp::adj_add(var_30, var_33, adj_30, adj_33, adj_34);
        wp::adj_div(var_dist, var_32, var_33, adj_dist, adj_32, adj_33);
        wp::adj_float64(var_31, adj_31, adj_32);
        wp::adj_max(var_26, var_29, adj_26, adj_29, adj_30);
        wp::adj_add(var_27, var_28, adj_27, adj_28, adj_29);
        wp::adj_extract(var_8, var_10, adj_8, adj_10, adj_28);
        wp::adj_extract(var_5, var_10, adj_5, adj_10, adj_27);
        wp::adj_extract(var_5, var_10, adj_5, adj_10, adj_26);
        // adj: nodeBB_upper[svi][d] = wp.float32(wp.max(A[d], A[d] + dA[d]) + dist / wp.float64(2.0) + node_xi[svi])  <L 554>
        wp::adj_store(var_25, var_23, adj_25, adj_23);
        wp::adj_indexref(var_24, var_10, adj_24, adj_10, adj_25);
        wp::adj_address(var_nodeBB_lower, var_0, adj_nodeBB_lower, adj_0, adj_24);
        wp::adj_float32(var_21, adj_21, adj_23);
        wp::adj_sub(var_19, var_22, adj_19, adj_20, adj_21);
        wp::adj_load(var_20, adj_20, adj_22);
        wp::adj_address(var_node_xi, var_0, adj_node_xi, adj_0, adj_20);
        wp::adj_sub(var_15, var_18, adj_15, adj_18, adj_19);
        wp::adj_div(var_dist, var_17, var_18, adj_dist, adj_17, adj_18);
        wp::adj_float64(var_16, adj_16, adj_17);
        wp::adj_min(var_11, var_14, adj_11, adj_14, adj_15);
        wp::adj_add(var_12, var_13, adj_12, adj_13, adj_14);
        wp::adj_extract(var_8, var_10, adj_8, adj_10, adj_13);
        wp::adj_extract(var_5, var_10, adj_5, adj_10, adj_12);
        wp::adj_extract(var_5, var_10, adj_5, adj_10, adj_11);
        // adj: nodeBB_lower[svi][d] = wp.float32(wp.min(A[d], A[d] + dA[d]) - dist / wp.float64(2.0) - node_xi[svi])  <L 553>
        // adj: for d in range(3):                                                                <L 552>
        wp::adj_copy(var_9, adj_7, adj_8);
        wp::adj_load(var_7, adj_7, adj_9);
        wp::adj_address(var_dx, var_2, adj_dx, adj_2, adj_7);
        // adj: dA = dx[vi]                                                                       <L 550>
        wp::adj_copy(var_6, adj_4, adj_5);
        wp::adj_load(var_4, adj_4, adj_6);
        wp::adj_address(var_x, var_2, adj_x, adj_2, adj_4);
        // adj: A = x[vi]                                                                         <L 549>
        wp::adj_copy(var_3, adj_1, adj_2);
        wp::adj_load(var_1, adj_1, adj_3);
        wp::adj_address(var_surf_vi, var_0, adj_surf_vi, adj_0, adj_1);
        // adj: vi = surf_vi[svi]                                                                 <L 548>
        // adj: svi = wp.tid()                                                                    <L 547>
        // adj: def compute_node_BB(                                                              <L 538>
        continue;
    }
}



extern "C" __global__ void init_step_size_hs_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::float64> var_alpha_hs,
    wp::array_t<wp::int32> var_env_hs,
    wp::array_t<wp::int32> var_node2body,
    wp::array_t<wp::int32> var_body_env_id,
    wp::array_t<wp::int32> var_env_states,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::int32> var_surf_vi,
    wp::array_t<wp::vec_t<3,wp::float64>> var_p_x,
    wp::array_t<wp::float64> var_node_xi,
    wp::array_t<wp::int32> var_hs_node,
    wp::array_t<wp::int32> var_hs_ground,
    wp::array_t<wp::vec_t<3,wp::float64>> var_half_space_n,
    wp::array_t<wp::vec_t<3,wp::float64>> var_half_space_o,
    wp::float64 var_eta)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        wp::int32 var_2;
        wp::int32 var_3;
        wp::int32* var_4;
        wp::int32 var_5;
        wp::int32 var_6;
        wp::int32* var_7;
        wp::int32* var_8;
        wp::int32 var_9;
        wp::int32 var_10;
        wp::int32* var_11;
        wp::int32* var_12;
        wp::int32 var_13;
        const wp::int32 var_14 = 1;
        bool var_15;
        wp::int32 var_16;
        wp::int32* var_17;
        wp::int32* var_18;
        wp::int32 var_19;
        const wp::int32 var_20 = 2;
        bool var_21;
        wp::int32 var_22;
        bool var_23;
        wp::float64* var_24;
        wp::float64 var_25;
        wp::float64 var_26;
        wp::int32* var_27;
        wp::int32 var_28;
        wp::int32 var_29;
        wp::vec_t<3,wp::float64>* var_30;
        wp::vec_t<3,wp::float64> var_31;
        wp::vec_t<3,wp::float64> var_32;
        wp::vec_t<3,wp::float64>* var_33;
        wp::vec_t<3,wp::float64> var_34;
        wp::vec_t<3,wp::float64> var_35;
        wp::vec_t<3,wp::float64>* var_36;
        wp::vec_t<3,wp::float64> var_37;
        wp::vec_t<3,wp::float64> var_38;
        wp::vec_t<3,wp::float64>* var_39;
        wp::vec_t<3,wp::float64> var_40;
        wp::vec_t<3,wp::float64> var_41;
        wp::float64 var_42;
        const wp::float32 var_43 = 0.0;
        wp::float64 var_44;
        bool var_45;
        wp::vec_t<3,wp::float64> var_46;
        wp::float64 var_47;
        wp::float64 var_48;
        const wp::float32 var_49 = 1.0;
        wp::float64 var_50;
        const wp::float32 var_51 = 0.5;
        wp::float64 var_52;
        wp::float64 var_53;
        wp::float64 var_54;
        wp::float64 var_55;
        wp::float64 var_56;
        wp::float64 var_57;
        //---------
        // forward
        // def init_step_size_hs(                                                                 <L 123>
        // idx = wp.tid()                                                                         <L 139>
        var_0 = builtin_tid1d();
        // svi = hs_node[idx]                                                                     <L 140>
        var_1 = wp::address(var_hs_node, var_0);
        var_3 = wp::load(var_1);
        var_2 = wp::copy(var_3);
        // xI = surf_vi[svi]                                                                      <L 141>
        var_4 = wp::address(var_surf_vi, var_2);
        var_6 = wp::load(var_4);
        var_5 = wp::copy(var_6);
        // env_hs[idx] = body_env_id[node2body[xI]]                                               <L 142>
        var_7 = wp::address(var_node2body, var_5);
        var_9 = wp::load(var_7);
        var_8 = wp::address(var_body_env_id, var_9);
        var_10 = wp::load(var_8);
        wp::array_store(var_env_hs, var_0, var_10);
        // if (env_states[env_hs[idx]] == ENV_STATE_INVALID) or (env_states[env_hs[idx]] == ENV_STATE_NEWTON_SOLVED):       <L 143>
        var_11 = wp::address(var_env_hs, var_0);
        var_13 = wp::load(var_11);
        var_12 = wp::address(var_env_states, var_13);
        var_16 = wp::load(var_12);
        var_15 = (var_16 == var_14);
        var_17 = wp::address(var_env_hs, var_0);
        var_19 = wp::load(var_17);
        var_18 = wp::address(var_env_states, var_19);
        var_22 = wp::load(var_18);
        var_21 = (var_22 == var_20);
        var_23 = var_15 || var_21;
        if (var_23) {
            // return                                                                             <L 144>
            continue;
        }
        // xi = node_xi[svi]                                                                      <L 145>
        var_24 = wp::address(var_node_xi, var_2);
        var_26 = wp::load(var_24);
        var_25 = wp::copy(var_26);
        // hs = hs_ground[idx]                                                                    <L 146>
        var_27 = wp::address(var_hs_ground, var_0);
        var_29 = wp::load(var_27);
        var_28 = wp::copy(var_29);
        // n = half_space_n[hs]                                                                   <L 147>
        var_30 = wp::address(var_half_space_n, var_28);
        var_32 = wp::load(var_30);
        var_31 = wp::copy(var_32);
        // o = half_space_o[hs]                                                                   <L 148>
        var_33 = wp::address(var_half_space_o, var_28);
        var_35 = wp::load(var_33);
        var_34 = wp::copy(var_35);
        // xIcoord = x[xI]                                                                        <L 149>
        var_36 = wp::address(var_x, var_5);
        var_38 = wp::load(var_36);
        var_37 = wp::copy(var_38);
        // p_xI = p_x[xI]                                                                         <L 150>
        var_39 = wp::address(var_p_x, var_5);
        var_41 = wp::load(var_39);
        var_40 = wp::copy(var_41);
        // p_n = wp.dot(p_xI, n)                                                                  <L 151>
        var_42 = wp::dot(var_40, var_31);
        // if p_n < wp.float64(0.0):                                                              <L 152>
        var_44 = wp::float64(var_43);
        var_45 = (var_42 < var_44);
        if (var_45) {
            // d = wp.dot(xIcoord - o, n) - xi                                                    <L 153>
            var_46 = wp::sub(var_37, var_34);
            var_47 = wp::dot(var_46, var_31);
            var_48 = wp::sub(var_47, var_25);
            // alpha_hs[idx] = (wp.float64(1.0) - wp.float64(0.5) * eta) * d / (-p_n)             <L 154>
            var_50 = wp::float64(var_49);
            var_52 = wp::float64(var_51);
            var_53 = wp::mul(var_52, var_eta);
            var_54 = wp::sub(var_50, var_53);
            var_55 = wp::mul(var_54, var_48);
            var_56 = wp::neg(var_42);
            var_57 = wp::div(var_55, var_56);
            wp::array_store(var_alpha_hs, var_0, var_57);
        }
    }
}



extern "C" __global__ void init_step_size_hs_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::float64> var_alpha_hs,
    wp::array_t<wp::int32> var_env_hs,
    wp::array_t<wp::int32> var_node2body,
    wp::array_t<wp::int32> var_body_env_id,
    wp::array_t<wp::int32> var_env_states,
    wp::array_t<wp::vec_t<3,wp::float64>> var_x,
    wp::array_t<wp::int32> var_surf_vi,
    wp::array_t<wp::vec_t<3,wp::float64>> var_p_x,
    wp::array_t<wp::float64> var_node_xi,
    wp::array_t<wp::int32> var_hs_node,
    wp::array_t<wp::int32> var_hs_ground,
    wp::array_t<wp::vec_t<3,wp::float64>> var_half_space_n,
    wp::array_t<wp::vec_t<3,wp::float64>> var_half_space_o,
    wp::float64 var_eta,
    wp::array_t<wp::float64> adj_alpha_hs,
    wp::array_t<wp::int32> adj_env_hs,
    wp::array_t<wp::int32> adj_node2body,
    wp::array_t<wp::int32> adj_body_env_id,
    wp::array_t<wp::int32> adj_env_states,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_x,
    wp::array_t<wp::int32> adj_surf_vi,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_p_x,
    wp::array_t<wp::float64> adj_node_xi,
    wp::array_t<wp::int32> adj_hs_node,
    wp::array_t<wp::int32> adj_hs_ground,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_half_space_n,
    wp::array_t<wp::vec_t<3,wp::float64>> adj_half_space_o,
    wp::float64 adj_eta)
{
    for (size_t _idx = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         _idx < dim.size;
         _idx += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        // reset shared memory allocator
        wp::tile_alloc_shared(0, true);

        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        wp::int32 var_2;
        wp::int32 var_3;
        wp::int32* var_4;
        wp::int32 var_5;
        wp::int32 var_6;
        wp::int32* var_7;
        wp::int32* var_8;
        wp::int32 var_9;
        wp::int32 var_10;
        wp::int32* var_11;
        wp::int32* var_12;
        wp::int32 var_13;
        const wp::int32 var_14 = 1;
        bool var_15;
        wp::int32 var_16;
        wp::int32* var_17;
        wp::int32* var_18;
        wp::int32 var_19;
        const wp::int32 var_20 = 2;
        bool var_21;
        wp::int32 var_22;
        bool var_23;
        wp::float64* var_24;
        wp::float64 var_25;
        wp::float64 var_26;
        wp::int32* var_27;
        wp::int32 var_28;
        wp::int32 var_29;
        wp::vec_t<3,wp::float64>* var_30;
        wp::vec_t<3,wp::float64> var_31;
        wp::vec_t<3,wp::float64> var_32;
        wp::vec_t<3,wp::float64>* var_33;
        wp::vec_t<3,wp::float64> var_34;
        wp::vec_t<3,wp::float64> var_35;
        wp::vec_t<3,wp::float64>* var_36;
        wp::vec_t<3,wp::float64> var_37;
        wp::vec_t<3,wp::float64> var_38;
        wp::vec_t<3,wp::float64>* var_39;
        wp::vec_t<3,wp::float64> var_40;
        wp::vec_t<3,wp::float64> var_41;
        wp::float64 var_42;
        const wp::float32 var_43 = 0.0;
        wp::float64 var_44;
        bool var_45;
        wp::vec_t<3,wp::float64> var_46;
        wp::float64 var_47;
        wp::float64 var_48;
        const wp::float32 var_49 = 1.0;
        wp::float64 var_50;
        const wp::float32 var_51 = 0.5;
        wp::float64 var_52;
        wp::float64 var_53;
        wp::float64 var_54;
        wp::float64 var_55;
        wp::float64 var_56;
        wp::float64 var_57;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        wp::int32 adj_3 = {};
        wp::int32 adj_4 = {};
        wp::int32 adj_5 = {};
        wp::int32 adj_6 = {};
        wp::int32 adj_7 = {};
        wp::int32 adj_8 = {};
        wp::int32 adj_9 = {};
        wp::int32 adj_10 = {};
        wp::int32 adj_11 = {};
        wp::int32 adj_12 = {};
        wp::int32 adj_13 = {};
        wp::int32 adj_14 = {};
        bool adj_15 = {};
        wp::int32 adj_16 = {};
        wp::int32 adj_17 = {};
        wp::int32 adj_18 = {};
        wp::int32 adj_19 = {};
        wp::int32 adj_20 = {};
        bool adj_21 = {};
        wp::int32 adj_22 = {};
        bool adj_23 = {};
        wp::float64 adj_24 = {};
        wp::float64 adj_25 = {};
        wp::float64 adj_26 = {};
        wp::int32 adj_27 = {};
        wp::int32 adj_28 = {};
        wp::int32 adj_29 = {};
        wp::vec_t<3,wp::float64> adj_30 = {};
        wp::vec_t<3,wp::float64> adj_31 = {};
        wp::vec_t<3,wp::float64> adj_32 = {};
        wp::vec_t<3,wp::float64> adj_33 = {};
        wp::vec_t<3,wp::float64> adj_34 = {};
        wp::vec_t<3,wp::float64> adj_35 = {};
        wp::vec_t<3,wp::float64> adj_36 = {};
        wp::vec_t<3,wp::float64> adj_37 = {};
        wp::vec_t<3,wp::float64> adj_38 = {};
        wp::vec_t<3,wp::float64> adj_39 = {};
        wp::vec_t<3,wp::float64> adj_40 = {};
        wp::vec_t<3,wp::float64> adj_41 = {};
        wp::float64 adj_42 = {};
        wp::float32 adj_43 = {};
        wp::float64 adj_44 = {};
        bool adj_45 = {};
        wp::vec_t<3,wp::float64> adj_46 = {};
        wp::float64 adj_47 = {};
        wp::float64 adj_48 = {};
        wp::float32 adj_49 = {};
        wp::float64 adj_50 = {};
        wp::float32 adj_51 = {};
        wp::float64 adj_52 = {};
        wp::float64 adj_53 = {};
        wp::float64 adj_54 = {};
        wp::float64 adj_55 = {};
        wp::float64 adj_56 = {};
        wp::float64 adj_57 = {};
        //---------
        // forward
        // def init_step_size_hs(                                                                 <L 123>
        // idx = wp.tid()                                                                         <L 139>
        var_0 = builtin_tid1d();
        // svi = hs_node[idx]                                                                     <L 140>
        var_1 = wp::address(var_hs_node, var_0);
        var_3 = wp::load(var_1);
        var_2 = wp::copy(var_3);
        // xI = surf_vi[svi]                                                                      <L 141>
        var_4 = wp::address(var_surf_vi, var_2);
        var_6 = wp::load(var_4);
        var_5 = wp::copy(var_6);
        // env_hs[idx] = body_env_id[node2body[xI]]                                               <L 142>
        var_7 = wp::address(var_node2body, var_5);
        var_9 = wp::load(var_7);
        var_8 = wp::address(var_body_env_id, var_9);
        var_10 = wp::load(var_8);
        // wp::array_store(var_env_hs, var_0, var_10);
        // if (env_states[env_hs[idx]] == ENV_STATE_INVALID) or (env_states[env_hs[idx]] == ENV_STATE_NEWTON_SOLVED):       <L 143>
        var_11 = wp::address(var_env_hs, var_0);
        var_13 = wp::load(var_11);
        var_12 = wp::address(var_env_states, var_13);
        var_16 = wp::load(var_12);
        var_15 = (var_16 == var_14);
        var_17 = wp::address(var_env_hs, var_0);
        var_19 = wp::load(var_17);
        var_18 = wp::address(var_env_states, var_19);
        var_22 = wp::load(var_18);
        var_21 = (var_22 == var_20);
        var_23 = var_15 || var_21;
        if (var_23) {
            // return                                                                             <L 144>
            goto label0;
        }
        // xi = node_xi[svi]                                                                      <L 145>
        var_24 = wp::address(var_node_xi, var_2);
        var_26 = wp::load(var_24);
        var_25 = wp::copy(var_26);
        // hs = hs_ground[idx]                                                                    <L 146>
        var_27 = wp::address(var_hs_ground, var_0);
        var_29 = wp::load(var_27);
        var_28 = wp::copy(var_29);
        // n = half_space_n[hs]                                                                   <L 147>
        var_30 = wp::address(var_half_space_n, var_28);
        var_32 = wp::load(var_30);
        var_31 = wp::copy(var_32);
        // o = half_space_o[hs]                                                                   <L 148>
        var_33 = wp::address(var_half_space_o, var_28);
        var_35 = wp::load(var_33);
        var_34 = wp::copy(var_35);
        // xIcoord = x[xI]                                                                        <L 149>
        var_36 = wp::address(var_x, var_5);
        var_38 = wp::load(var_36);
        var_37 = wp::copy(var_38);
        // p_xI = p_x[xI]                                                                         <L 150>
        var_39 = wp::address(var_p_x, var_5);
        var_41 = wp::load(var_39);
        var_40 = wp::copy(var_41);
        // p_n = wp.dot(p_xI, n)                                                                  <L 151>
        var_42 = wp::dot(var_40, var_31);
        // if p_n < wp.float64(0.0):                                                              <L 152>
        var_44 = wp::float64(var_43);
        var_45 = (var_42 < var_44);
        if (var_45) {
            // d = wp.dot(xIcoord - o, n) - xi                                                    <L 153>
            var_46 = wp::sub(var_37, var_34);
            var_47 = wp::dot(var_46, var_31);
            var_48 = wp::sub(var_47, var_25);
            // alpha_hs[idx] = (wp.float64(1.0) - wp.float64(0.5) * eta) * d / (-p_n)             <L 154>
            var_50 = wp::float64(var_49);
            var_52 = wp::float64(var_51);
            var_53 = wp::mul(var_52, var_eta);
            var_54 = wp::sub(var_50, var_53);
            var_55 = wp::mul(var_54, var_48);
            var_56 = wp::neg(var_42);
            var_57 = wp::div(var_55, var_56);
            // wp::array_store(var_alpha_hs, var_0, var_57);
        }
        //---------
        // reverse
        if (var_45) {
            wp::adj_array_store(var_alpha_hs, var_0, var_57, adj_alpha_hs, adj_0, adj_57);
            wp::adj_div(var_55, var_56, var_57, adj_55, adj_56, adj_57);
            wp::adj_neg(var_42, adj_42, adj_56);
            wp::adj_mul(var_54, var_48, adj_54, adj_48, adj_55);
            wp::adj_sub(var_50, var_53, adj_50, adj_53, adj_54);
            wp::adj_mul(var_52, var_eta, adj_52, adj_eta, adj_53);
            wp::adj_float64(var_51, adj_51, adj_52);
            wp::adj_float64(var_49, adj_49, adj_50);
            // adj: alpha_hs[idx] = (wp.float64(1.0) - wp.float64(0.5) * eta) * d / (-p_n)        <L 154>
            wp::adj_sub(var_47, var_25, adj_47, adj_25, adj_48);
            wp::adj_dot(var_46, var_31, adj_46, adj_31, adj_47);
            wp::adj_sub(var_37, var_34, adj_37, adj_34, adj_46);
            // adj: d = wp.dot(xIcoord - o, n) - xi                                               <L 153>
        }
        wp::adj_float64(var_43, adj_43, adj_44);
        // adj: if p_n < wp.float64(0.0):                                                         <L 152>
        wp::adj_dot(var_40, var_31, adj_40, adj_31, adj_42);
        // adj: p_n = wp.dot(p_xI, n)                                                             <L 151>
        wp::adj_copy(var_41, adj_39, adj_40);
        wp::adj_load(var_39, adj_39, adj_41);
        wp::adj_address(var_p_x, var_5, adj_p_x, adj_5, adj_39);
        // adj: p_xI = p_x[xI]                                                                    <L 150>
        wp::adj_copy(var_38, adj_36, adj_37);
        wp::adj_load(var_36, adj_36, adj_38);
        wp::adj_address(var_x, var_5, adj_x, adj_5, adj_36);
        // adj: xIcoord = x[xI]                                                                   <L 149>
        wp::adj_copy(var_35, adj_33, adj_34);
        wp::adj_load(var_33, adj_33, adj_35);
        wp::adj_address(var_half_space_o, var_28, adj_half_space_o, adj_28, adj_33);
        // adj: o = half_space_o[hs]                                                              <L 148>
        wp::adj_copy(var_32, adj_30, adj_31);
        wp::adj_load(var_30, adj_30, adj_32);
        wp::adj_address(var_half_space_n, var_28, adj_half_space_n, adj_28, adj_30);
        // adj: n = half_space_n[hs]                                                              <L 147>
        wp::adj_copy(var_29, adj_27, adj_28);
        wp::adj_load(var_27, adj_27, adj_29);
        wp::adj_address(var_hs_ground, var_0, adj_hs_ground, adj_0, adj_27);
        // adj: hs = hs_ground[idx]                                                               <L 146>
        wp::adj_copy(var_26, adj_24, adj_25);
        wp::adj_load(var_24, adj_24, adj_26);
        wp::adj_address(var_node_xi, var_2, adj_node_xi, adj_2, adj_24);
        // adj: xi = node_xi[svi]                                                                 <L 145>
        if (var_23) {
            label0:;
            // adj: return                                                                        <L 144>
        }
        wp::adj_load(var_18, adj_18, adj_22);
        wp::adj_address(var_env_states, var_19, adj_env_states, adj_17, adj_18);
        wp::adj_load(var_17, adj_17, adj_19);
        wp::adj_address(var_env_hs, var_0, adj_env_hs, adj_0, adj_17);
        wp::adj_load(var_12, adj_12, adj_16);
        wp::adj_address(var_env_states, var_13, adj_env_states, adj_11, adj_12);
        wp::adj_load(var_11, adj_11, adj_13);
        wp::adj_address(var_env_hs, var_0, adj_env_hs, adj_0, adj_11);
        // adj: if (env_states[env_hs[idx]] == ENV_STATE_INVALID) or (env_states[env_hs[idx]] == ENV_STATE_NEWTON_SOLVED):  <L 143>
        wp::adj_array_store(var_env_hs, var_0, var_10, adj_env_hs, adj_0, adj_8);
        wp::adj_load(var_8, adj_8, adj_10);
        wp::adj_address(var_body_env_id, var_9, adj_body_env_id, adj_7, adj_8);
        wp::adj_load(var_7, adj_7, adj_9);
        wp::adj_address(var_node2body, var_5, adj_node2body, adj_5, adj_7);
        // adj: env_hs[idx] = body_env_id[node2body[xI]]                                          <L 142>
        wp::adj_copy(var_6, adj_4, adj_5);
        wp::adj_load(var_4, adj_4, adj_6);
        wp::adj_address(var_surf_vi, var_2, adj_surf_vi, adj_2, adj_4);
        // adj: xI = surf_vi[svi]                                                                 <L 141>
        wp::adj_copy(var_3, adj_1, adj_2);
        wp::adj_load(var_1, adj_1, adj_3);
        wp::adj_address(var_hs_node, var_0, adj_hs_node, adj_0, adj_1);
        // adj: svi = hs_node[idx]                                                                <L 140>
        // adj: idx = wp.tid()                                                                    <L 139>
        // adj: def init_step_size_hs(                                                            <L 123>
        continue;
    }
}

